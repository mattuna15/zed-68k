00010008 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 10/07/2020 17:04:20

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Program    :Hello World
00000000                             3  * Written by :@kanpapa
00000000                             4  * Date       :10/09/2017
00000000                             5  * Description:Test Program 1 for MIC68K board
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  ;
00000000                             9  ; Memory map
00000000                            10  ;
00000000                            11  ; $000000-$00ffff RAM (32K x 2)
00000000                            12  ; $010000-$01ffff ROM (32K x 2)
00000000                            13  ; $f00009         ACIA1
00000000                            14  ; $f20009         ACIA2
00000000                            15  ; $f40009         PIA
00000000                            16  ; $f60009         PTM
00000000                            17  ;
00000000                            18  
00000000                            19  ; Terminal port
00000000  =00F00009                 20  ttyst   equ $f00009
00000000  =00F0000B                 21  ttyd    equ $f0000b
00000000                            22  
00000000                            23  ; System stack
00000000  =0000FFF0                 24  stack   equ $00fff0
00000000                            25  
00000000                            26  ; Reset Vector   
00010000                            27      org $010000
00010000= 0000FFF0                  28      dc.l    stack       ;system stack
00010004= 00010008                  29      dc.l    start       ;initial pc
00010008                            30  
00010008  13FC 0003 00F00009        31  start:  move.b  #$03,ttyst  ;setup ports (Master Reset)
00010010  13FC 0015 00F00009        32      move.b  #$15,ttyst  ;8Bits + 1Stop Bits, div 16
00010018                            33  
00010018  207C 0000FFF0             34      move.l  #stack,a0   ;Set Stackpointer
0001001E  4E60                      35      move.l  a0,usp
00010020                            36      
00010020  47F9 0001006A             37      lea.l   strmsg.l,a3
00010026  6100 0010                 38      bsr wstr
0001002A                            39  
0001002A  47F9 0001005C             40  loop:   lea.l   message.l,a3
00010030  6100 0006                 41          bsr wstr
00010034                            42  ;       bra loop
00010034  4E72 0000                 43          stop #$0000
00010038                            44  
00010038                            45  ;
00010038                            46  ; a3 Pointed to first byte
00010038                            47  ; end with 0
00010038  101B                      48  wstr:   move.b (a3)+,d0
0001003A  B03C 0000                 49          cmp.b  #0,d0
0001003E  6700 0008                 50          beq wstr1
00010042  6100 0006                 51          bsr writ
00010046  60F0                      52          bra wstr
00010048  4E75                      53  wstr1:  rts
0001004A                            54  
0001004A                            55  ;
0001004A                            56  ; Generalized write facility writes 1 byte
0001004A                            57  ; passed in d0 to tty.
0001004A                            58  ;
0001004A  0839 0001 00F00009        59  writ:   btst    #$1,ttyst   ;sample control register till done
00010052  67F6                      60      beq writ
00010054  13C0 00F0000B             61      move.b  d0,ttyd     ;write the character to port
0001005A  4E75                      62      rts
0001005C                            63  
0001005C                            64  ;
0001005C                            65  ; Messages data
0001005C                            66  ;
0001005C  =0000000D                 67  cr  equ $0d     ;ASCII code for Carriage Return
0001005C  =0000000A                 68  lf  equ $0a     ;ASCII code for Line Feed
0001005C= 48 45 4C 4C 4F 20 ...     69  message dc.b    'HELLO WORLD',cr,lf,0
0001006A= 53 54 41 52 54 49 ...     70  strmsg dc.b 'STARTING',cr,lf,0
00010075                            71  
00010075                            72      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
LF                  A
LOOP                1002A
MESSAGE             1005C
STACK               FFF0
START               10008
STRMSG              1006A
TTYD                F0000B
TTYST               F00009
WRIT                1004A
WSTR                10038
WSTR1               10048
