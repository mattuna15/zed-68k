00A00BB4 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 27/06/2020 15:29:00

00000000                             1  ; FILE NAME zbug_mic68k.x68
00000000                             2  ; zBug V1.0.1 for MIC68K by @kanpapa
00000000                             3  ; The source code was assembled using Easy68K 
00000000                             4  ; V1.0 1st release
00000000                             5  ; V1.0.1 Added function to Load Motorola S-record S1 format
00000000                             6  
00000000                             7  ;
00000000                             8  ; Original FILE NAME U68K.ASM 
00000000                             9  ; 
00000000                            10  ; zBug V1.0 is a small monitor program for 68000-Based Single Board Computer
00000000                            11  ; The source code was assembled using C32 CROSS ASSEMBLER VERSION 3.0
00000000                            12  ;
00000000                            13  
00000000                            14  ; Copyright (c) 2002 WICHIT SIRICHOTE email kswichit@kmitl.ac.th
00000000                            15  ; 
00000000                            16  ;
00000000                            17  ; This program is free software; you can redistribute it and/or modify
00000000                            18  ; it under the terms of the GNU General Public License as published by
00000000                            19  ; the Free Software Foundation; either version 2 of the License, or
00000000                            20  ; (at your option) any later version.
00000000                            21  ;
00000000                            22  ; This program is distributed in the hope that it will be useful,
00000000                            23  ; but WITHOUT ANY WARRANTY; without even the implied warranty of
00000000                            24  ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
00000000                            25  ; GNU General Public License for more details.
00000000                            26  ;
00000000                            27  ;
00000000                            28  ;
00000000                            29  
00000000                            30  ;   CPU     "68000.TBL"      ; CPU TABLE
00000000                            31  ;   HOF     "BIN16"          ; HEX OUTPUT FORMAT
00000000                            32  ;   HOF     "MOT16"          ; OUTPUT MOTOROLA S-RECORD
00000000                            33  
00000000                            34  ;
00000000                            35  ; MIC68K MEMORY MAP
00000000                            36  ;
00000000                            37  ; 000000-00FFFF RAM 32Kx2
00000000                            38  ; 010000-9FFFFF -
00000000                            39  ; A00000-A0FFFF ROM 32Kx2
00000000                            40  ; A10000-DFFFFF -
00000000                            41  ; F00009-0B     ACIA1 63B50 (IC6)
00000000                            42  ; F20009-0B     ACIA2 63B50 (IC7)
00000000                            43  ; F40009-0F     PIA (IC1)
00000000                            44  ; F60009-1F     PTM (IC2)
00000000                            45  ;
00000000                            46  
00000000                            47  ; Use EASy68k Simulator
00000000  =00000000                 48  EASY68K_SIM EQU 0       ; set 0 to use ACIA1
00000000                            49  ;EASY68K_SIM    EQU 1       ; set 1 to use EASy68K Sim68K I/O  
00000000                            50  
00000000  =00000000                 51  BIT_ESC      EQU 0              ; ESC BIT POSITION #0
00000000                            52  
00000000                            53  ;DCODE68K  EQU $400              ; DISASSEMBLER START ADDRESS (option)
00000000                            54  
00000000  =00000000                 55  RAM      EQU $000000            ; RAM START ADDRESS
00000000                            56  
00000000                            57  ;
00000000                            58  ; MONITOR MEMORY MAP
00000000                            59  ; $000000-$0003FF M68000 Exception Vector Table
00000000                            60  ; $00E000         SUPER_STACK/RAMBASE
00000000                            61  ; $00FFFF         RAM END
00000000                            62  ;
00000000                            63  ; $A00000         RESET Vector
00000000                            64  ; $A00008         MAIN(Monitor start)
00000000                            65  ;
00000000                            66  
00000000                            67  ;DIN      EQU $300001 
00000000                            68  ;DOUT     EQU $700001       
00000000                            69  
00000000  =00F00009                 70  ACIAC    EQU $F00009
00000000  =00F0000B                 71  ACIAD    EQU ACIAC+2
00000000                            72  
00000000  =00F20009                 73  ACIA2C    EQU $F20009
00000000  =00F2000B                 74  ACIA2D    EQU ACIA2C+2
00000000                            75  
00000000                            76  ;PIT      EQU $700001
00000000                            77  
00000000  =00002000                 78  INT_ON   EQU  $2000    ; BOTH, SET SUPERVISOR MODE, S=1
00000000  =00002700                 79  INT_OFF  EQU  $2700
00000000                            80  
00000000  =00000000                 81  RDRF    EQU 0           ; ACIAC Receive Data Register Full
00000000  =00000001                 82  TDRE    EQU 1           ; ACIAC Transmit Data Register Empty
00000000                            83  
00000000  =00000005                 84  SUPERVISOR_BIT EQU 5
00000000                            85  
00000000  =00000007                 86  TRACE_BIT EQU 7
00000000                            87  
00000000  =0000000D                 88  CR      EQU 13
00000000  =0000000A                 89  LF      EQU 10
00000000  =00000020                 90  SP      EQU 32
00000000  =00000008                 91  BS      EQU 8
00000000  =0000001E                 92  RS      EQU $1E
00000000  =0000001B                 93  ESC     EQU $1B
00000000                            94  
00000000  =0000E000                 95  SUPER_STACK   EQU $00E000   ; SUPER STACK TOP Address
00000000  =0000E000                 96  RAMBASE_INIT  EQU $00E000
00000000                            97  
00000000                            98  ;
00000000                            99  ; EXCEPTION VECTOR address
00000000                           100  ;
00000000  =00000080                101  TRAP0   EQU RAM+$80
00000000  =00000084                102  TRAP1   EQU TRAP0+4
00000000  =00000088                103  TRAP2   EQU TRAP1+4
00000000  =0000008C                104  TRAP3   EQU TRAP2+4
00000000  =00000090                105  TRAP4   EQU TRAP3+4
00000000  =00000094                106  TRAP5   EQU TRAP4+4
00000000  =00000098                107  TRAP6   EQU TRAP5+4
00000000  =0000009C                108  TRAP7   EQU TRAP6+4
00000000  =000000A0                109  TRAP8   EQU TRAP7+4
00000000  =000000A4                110  TRAP9   EQU TRAP8+4
00000000  =000000A8                111  TRAP10  EQU TRAP9+4
00000000  =000000AC                112  TRAP11  EQU TRAP10+4
00000000  =000000B0                113  TRAP12  EQU TRAP11+4
00000000  =000000B4                114  TRAP13  EQU TRAP12+4
00000000  =000000B8                115  TRAP14  EQU TRAP13+4
00000000  =000000BC                116  TRAP15  EQU TRAP14+4
00000000                           117  
00000000  =00000008                118  BUS_ERROR EQU RAM+8
00000000  =0000000C                119  ADDRESS_ERROR EQU RAM+$C
00000000  =00000010                120  ILLEGAL_INSTRUCTION EQU RAM+$10
00000000                           121  
000000C0                           122     ORG $C0
000000C0                           123  ;RAMBASE  DC.L   $130000   ; RAM BASE ADDRESS
000000C0                           124  RAMBASE  DS.L   1          ; RAM BASE ADDRESS
000000C4                           125  
000000C4                           126  ;
000000C4                           127  ; ROM START
000000C4                           128  ;
00A00000                           129     ORG $A00000
00A00000                           130     ; Reset start vector
00A00000= 0000E000                 131     DC.L SUPER_STACK        ; TOP OF SUPERVISOR STACK $130000
00A00004= 00A00BB4                 132     DC.L MAIN               ; MONITOR START
00A00008                           133  
00A00008                           134  ;   DC.L BUS_ERROR
00A00008                           135  ;   DC.L ADDRESS_ERROR
00A00008                           136  ;   DC.L ILLEGAL_INSTRUCTION
00A00008                           137  
00A00008                           138  ;   ORG $24
00A00008                           139  ;   DC.L SERVICE_TRAP0      ; TRACE THE SAME AS TRAP #0 
00A00008                           140  
00A00008                           141  ;   ORG $80
00A00008                           142  ;   DC.L SERVICE_TRAP0      ; TRAP #0
00A00008                           143  
00A00008                           144  ;   ORG $C0
00A00008                           145  ;RAMBASE  DC.L   $130000     ; RAM BASE ADDRESS
00A00008                           146  
00A00008                           147  
00A00008                           148  ; RESERVED SPACE FOR FILE DECODE68K DISASSEMBLER
00A00008                           149  ; RAM+$400 TO RAM+10E0
00A00008                           150  ; THE DISASSEMBLER MUST BE LOADED BEFORE USING 
00A00008                           151  
00A00008                           152  ;   ORG $400
00A00008                           153  ;  INCL "DIS.IMG"
00A00008                           154  ;  INCLUDE "dis_mic68k.x68"
00A00008                           155  
00A00008                           156  ;-------------------------------------------------------------------------
00A00008                           157  ; File DCODE68K  68K ONE LINE DISASSEMBLER                        07/28/82
00A00008                           158  
00A00008                           159  ;        CALLING SEQUENCE:
00A00008                           160  ;   D0,D1,D2 = CODE TO BE DISASSEMBLED
00A00008                           161  ;   A4 = VALUE OF PROGRAM COUNTER FOR THE CODE
00A00008                           162  ;   A5 = POINTER TO STORE DATA (BUFSIZE = 80 ASSUMED)
00A00008                           163  ;        JSR       DCODE68K
00A00008                           164  
00A00008                           165  ;        RETURN:
00A00008                           166  ;   A4 = VALUE OF PROGRAM COUNTER FOR NEXT INSTRUCTION
00A00008                           167  ;   A5 = POINTER TO LINE AS DISASSEMBLED
00A00008                           168  ;   A6 = POINTER TO END OF LINE
00A00008                           169  ;
00A00008                           170  ; 01234567890123456789012345678901234567890123456789
00A00008                           171  ; AAAAAA FDATA.DDDDDDDDDDDDDD FOC.... FOP.....
00A00008                           172  
00A00008                           173  ;                ORG $400
00A00008                           174  
00A00008  =0000000A                175  FDATA   EQU    10             ;OFFSET TO DATA
00A00008  =0000001F                176  FOC     EQU    31             ;OFFSET TO OP-CODE (NO LABEL FIELD)
00A00008  =00000027                177  FOP     EQU    39             ;OFFSET TO OPERAND (NO LABEL FIELD)
00A00008                           178  
00A00008  =00000020                179  BLANK    EQU   $20
00A00008  =00000050                180  BUFSIZE  EQU   80
00A00008  =00000010                181  LOCVARSZ EQU   16
00A00008  =00000004                182  EOT      EQU   $04
00A00008                           183  
00A00008                           184  ; CAUSES ORGIN MODULO 4
00A00008                           185  LONG     MACRO
00A00008                           186           DS      0
00A00008                           187           DS.B    (*-X)&2
00A00008                           188           ENDM
00A00008                           189  
00A00008                           190  
00A00008                           191  X        DS      0              BASE ADDRESS THIS MODULE
00A00008                           192m          LONG
00A00008                           193  
00A00008                           194  *  MOVEM REGISTERS TO EA
00A00008                           195  *
00A00008                           196  *        01001D001S......
00A00008                           197  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A00008                           198  *        .........0......       WORD
00A00008                           199  *        .........1......       LONG
00A00008                           200  *        .....0..........       REGISTER TO MEMORY
00A00008                           201  *        .....1..........       MEMORY TO REGISTER
00A00008                           202  *
00A00008                           203  
00A00008                           204  IMOVEMFR DS      0
00A00008  6100 071E                205           BSR     MOVEMS         SIZE
00A0000C                           206  
00A0000C  7C38                     207           MOVEQ   #$0038,D6
00A0000E  CC54                     208           AND.W   (A4),D6
00A00010  0C46 0020                209           CMPI.W  #$0020,D6
00A00014  6706                     210           BEQ.S   IM7788         PREDECREMENT MODE
00A00016                           211  
00A00016  7C01                     212           MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
00A00018  7200                     213           MOVEQ   #0,D1          D1 = BIT POSITION
00A0001A  6004                     214           BRA.S   IM7799
00A0001C                           215  
00A0001C  7CFF                     216  IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
00A0001E  720F                     217           MOVEQ   #15,D1         D1 = BIT POSITION
00A00020  6100 071A                218  IM7799   BSR     MOVEMR         BUILD MASK WORD
00A00024                           219  
00A00024  1CFC 002C                220           MOVE.B  #',',(A6)+     STORE COMMA
00A00028                           221  
00A00028  5483                     222           ADDQ.L  #2,D3
00A0002A  3814                     223           MOVE.W  (A4),D4
00A0002C  3E3C 01F4                224           MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
00A00030  6100 0534                225           BSR     EEA
00A00034  601C                     226           BRA.S   CS16           COMMON
00A00036                           227  
00A00036                           228m          LONG
00A00038                           229  * MOVEM  EA  TO REGISTERS
00A00038                           230  *
00A00038  6100 06EE                231  IMOVEMTR BSR     MOVEMS         SIZE
00A0003C  5483                     232           ADDQ.L  #2,D3
00A0003E  3E3C 07EC                233           MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
00A00042  6100 0522                234           BSR     EEA
00A00046                           235  
00A00046  1CFC 002C                236           MOVE.B  #',',(A6)+     STORE COMMA
00A0004A                           237  
00A0004A  7C01                     238           MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
00A0004C  7200                     239           MOVEQ   #0,D1          D1 = BIT POSITION
00A0004E  6100 06EC                240           BSR     MOVEMR
00A00052                           241  
00A00052  606C                     242  CS16     BRA.S   CS15           COMMON
00A00054                           243  
00A00054                           244  
00A00054                           245m          LONG
00A00054                           246  ISTOP    DS      0
00A00054  302C 0002                247           MOVE.W  2(A4),D0
00A00058  1CFC 0023                248           MOVE.B  #'#',(A6)+     IMMEDIATE
00A0005C  1CFC 0024                249           MOVE.B  #'$',(A6)+     HEX
00A00060  6100 11BE                250           BSR     PNT4HX         VALUE
00A00064  6000 07EE                251           BRA     COMMON4
00A00068                           252  
00A00068                           253m          LONG
00A00068                           254  IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
00A00068  6100 0472                255           BSR     FORMSIZE
00A0006C  5483                     256           ADDQ.L  #2,D3          SIZE = 4
00A0006E  1CFC 0023                257           MOVE.B  #'#',(A6)+     IMMEDIATE
00A00072                           258  
00A00072  4280                     259           CLR.L   D0
00A00074  302C 0002                260           MOVE.W  2(A4),D0       D0 = EXTENSION WORD
00A00078  3214                     261           MOVE.W  (A4),D1
00A0007A  EC49                     262           LSR.W   #6,D1
00A0007C  0241 0003                263           ANDI.W  #3,D1
00A00080  6746                     264           BEQ.S   IMMED65        .BYTE
00A00082                           265  
00A00082  0C01 0001                266           CMPI.B  #1,D1
00A00086  6750                     267           BEQ.S   IMMED75        .WORD
00A00088                           268  
00A00088  5483                     269           ADDQ.L  #2,D3          .LONG    SIZE = 6
00A0008A  202C 0002                270           MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
00A0008E                           271  
00A0008E  6100 111A                272  IMMED45  BSR     HEX2DEC        DECIMAL
00A00092                           273  
00A00092  1CC5                     274           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00094                           275  
00A00094  3014                     276           MOVE    (A4),D0
00A00096  0240 003F                277           ANDI.W  #$003F,D0
00A0009A  0C40 003C                278           CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
00A0009E  6622                     279           BNE.S   IMMED55        NOT FOUND
00A000A0                           280  
00A000A0  3014                     281           MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
00A000A2  0240 4000                282           ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
00A000A6  6600 07D6                283           BNE     FERROR         0600   0400  0C00
00A000AA                           284  
00A000AA  3214                     285           MOVE.W  (A4),D1
00A000AC  0241 00C0                286           ANDI.W  #$00C0,D1
00A000B0  0C41 0080                287           CMPI.W  #$0080,D1
00A000B4  6700 07C8                288           BEQ     FERROR         .LONG NOT ALLOWED
00A000B8                           289  
00A000B8  1CFC 0053                290           MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
00A000BC  1CFC 0052                291           MOVE.B  #'R',(A6)+
00A000C0  603E                     292  CS15     BRA.S   CS14           COMMON
00A000C2                           293  
00A000C2  6100 04A2                294  IMMED55  BSR     EEA
00A000C6  6038                     295           BRA.S   CS14           COMMON
00A000C8                           296  
00A000C8  2200                     297  IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
00A000CA  E049                     298           LSR.W   #8,D1          D1 = 00000000XXXXXXXX
00A000CC  670A                     299           BEQ.S   IMMED75
00A000CE  2200                     300           MOVE.L  D0,D1
00A000D0  EE41                     301           ASR.W   #7,D1
00A000D2  5241                     302           ADDQ.W  #1,D1          CHECK FOR NEGATIVE
00A000D4  6600 07A8                303           BNE     FERROR
00A000D8                           304  
00A000D8  48C0                     305  IMMED75  EXT.L   D0
00A000DA  60B2                     306           BRA     IMMED45
00A000DC                           307  
00A000DC                           308  *  BIT   5432109876543210
00A000DC                           309  *        ....RRRMMM......       DESTINATION REGISTER MODE
00A000DC                           310  *        ..........MMMRRR       SOURCE MODE REGISTER
00A000DC                           311  *        0001............       .BYTE
00A000DC                           312  *        0011............       .WORD
00A000DC                           313  *        0010............       .LONG
00A000DC                           314  *
00A000DC                           315  * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
00A000DC                           316m          LONG
00A000DC                           317  IMOVE    DS      0
00A000DC  6000 03A2                318           BRA     IMOVEA1
00A000E0                           319  
00A000E0                           320m          LONG
00A000E0                           321  ILINK    DS      0
00A000E0  615E                     322           BSR.S   FORMREGA
00A000E2                           323  
00A000E2  1CC5                     324           MOVE.B  D5,(A6)+       COMMA SERARATOR
00A000E4                           325  
00A000E4  1CFC 0023                326           MOVE.B  #'#',(A6)+
00A000E8  302C 0002                327           MOVE.W  2(A4),D0
00A000EC  48C0                     328           EXT.L   D0
00A000EE  6100 10BA                329           BSR     HEX2DEC        DECIMAL DISPLACEMENT
00A000F2  6000 0760                330           BRA     COMMON4
00A000F6                           331  
00A000F6                           332m          LONG
00A000F8                           333  FORM1    DS      0              CLR  NEG  NEGX  NOT TST
00A000F8  6100 03E2                334           BSR.L   FORMSIZE
00A000FC                           335  
00A000FC                           336  
00A000FC                           337  *                               NBCD TAS
00A000FC  6100 0468                338  FORM1A   BSR     EEA            DATA ALTERABLE ONLY
00A00100  606E                     339  CS14     BRA.S   CS13           COMMON
00A00102                           340  
00A00102                           341m          LONG
00A00104                           342  FORM3    DS      0              EXT  SWAP
00A00104  614A                     343           BSR.S   FORMREGD
00A00106  6068                     344           BRA.S   CS13           COMMON
00A00108                           345  
00A00108                           346m          LONG
00A00108                           347  FORM4    DS      0              TRAP
00A00108  1CFC 0023                348           MOVE.B  #'#',(A6)+
00A0010C  3014                     349           MOVE.W  (A4),D0
00A0010E  0280 0000000F            350           ANDI.L  #$0F,D0
00A00114  6100 1094                351           BSR     HEX2DEC        DECIMAL
00A00118  6056                     352           BRA.S   CS13           COMMON
00A0011A                           353  
00A0011A                           354m          LONG
00A0011C                           355  FORM5    DS      0              UNLNK
00A0011C  6122                     356           BSR.S   FORMREGA
00A0011E  6050                     357           BRA.S   CS13           COMMON
00A00120                           358  
00A00120                           359  *  BIT   5432109876543210
00A00120                           360  *        ....RRR.........       ADDRESS REGISTER
00A00120                           361  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A00120                           362  *
00A00120                           363m          LONG
00A00120                           364  FORM6A   DS      0              LEA
00A00120  3E3C 07E4                365           MOVE.W  #$7E4,D7       CONTROL ADDRESSING
00A00124  6154                     366           BSR.S   EEA10
00A00126                           367  
00A00126  1CC5                     368           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00128                           369  
00A00128  3814                     370           MOVE.W  (A4),D4
00A0012A  EF5C                     371           ROL.W   #7,D4
00A0012C  6112                     372           BSR.S   FORMREGA
00A0012E  6040                     373           BRA.S   CS13           COMMON
00A00130                           374  
00A00130                           375  *  BIT   5432109876543210
00A00130                           376  *        ....DDD.........       DATA REGISTER
00A00130                           377  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A00130                           378  *
00A00130                           379m          LONG
00A00130                           380  FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
00A00130  3E3C 0FFD                381           MOVE.W  #$FFD,D7       DATA ADDRESSING
00A00134  6144                     382           BSR.S   EEA10
00A00136                           383  
00A00136  1CC5                     384           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00138                           385  
00A00138  3814                     386           MOVE.W  (A4),D4
00A0013A  EF5C                     387           ROL.W   #7,D4
00A0013C  6112                     388           BSR.S   FORMREGD
00A0013E  6030                     389           BRA.S   CS13           COMMON
00A00140                           390  
00A00140  1CFC 0041                391  FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
00A00144  0204 0007                392  FORMREG5 ANDI.B  #$07,D4
00A00148  0004 0030                393           ORI.B   #'0',D4
00A0014C  1CC4                     394           MOVE.B  D4,(A6)+
00A0014E  4E75                     395           RTS
00A00150                           396  
00A00150  1CFC 0044                397  FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
00A00154  60EE                     398           BRA     FORMREG5
00A00156                           399  
00A00156                           400  *  BIT   5432109876543210
00A00156                           401  *        ....DDD......DDD       DATA REGISTERS
00A00156                           402  *
00A00156                           403m          LONG
00A00158                           404  FORM7    DS      0              EXG
00A00158  EF5C                     405           ROL.W   #7,D4
00A0015A  61F4                     406           BSR     FORMREGD
00A0015C                           407  
00A0015C  1CC5                     408           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A0015E                           409  
00A0015E  3814                     410           MOVE.W  (A4),D4
00A00160  61EE                     411           BSR     FORMREGD
00A00162  600C                     412           BRA.S   CS13           COMMON
00A00164                           413  
00A00164                           414  *  BIT   5432109876543210
00A00164                           415  *        ....AAA......AAA       ADDRESS REGISTERS
00A00164                           416  *
00A00164                           417m          LONG
00A00164                           418  FORM8    DS      0              EXG
00A00164  EF5C                     419           ROL.W   #7,D4
00A00166  61D8                     420           BSR     FORMREGA
00A00168                           421  
00A00168  1CFC 002C                422  FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
00A0016C                           423  
00A0016C  3814                     424           MOVE.W  (A4),D4
00A0016E  61D0                     425           BSR     FORMREGA
00A00170  6000 0080                426  CS13     BRA     CS12           COMMON
00A00174                           427  
00A00174                           428  *  BIT   5432109876543210
00A00174                           429  *        ....DDD.........       DATA REGISTER
00A00174                           430  *        .............AAA       ADDRESS REGISTER
00A00174                           431  *
00A00174                           432m          LONG
00A00174                           433  FORM9    DS      0              EXG
00A00174  EF5C                     434           ROL.W   #7,D4
00A00176  61D8                     435           BSR     FORMREGD       DATA REGISTER
00A00178  60EE                     436           BRA     FORM815
00A0017A                           437  
00A0017A  6000 03EA                438  EEA10    BRA     EEA
00A0017E                           439  
00A0017E                           440  *  BIT   5432109876543210
00A0017E                           441  *        ..........AAAAAA         EFFECTIVE ADDRESS
00A0017E                           442  *        .......MMM......         OP-MODE
00A0017E                           443  *        ....RRR.........         D-REGISTER
00A0017E                           444  *        .......011......         WORD  EA,A@
00A0017E                           445  *        .......111......         LONG  EA,A@
00A0017E                           446  *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
00A0017E                           447  *        .......0........         EA,D@
00A0017E                           448  *        .......1........         D@,EA
00A0017E                           449  *        ........00......         BYTE
00A0017E                           450  *        ........01......         WORD
00A0017E                           451  *        ........10......         LONG
00A0017E                           452  *
00A0017E                           453m          LONG
00A00180                           454  *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
00A00180                           455  FORM10EX DS      0              ADD  CMP  SUB
00A00180  3E3C 0FFF                456           MOVE.W  #$FFF,D7       ALL MODES ALLOWED
00A00184  2004                     457           MOVE.L  D4,D0
00A00186  0240 01C0                458           ANDI.W  #$01C0,D0
00A0018A  673A                     459           BEQ.S   FORM103        .......000......
00A0018C  0C40 01C0                460           CMPI.W  #$01C0,D0
00A00190  6710                     461           BEQ.S   FORM10E3       .......111......
00A00192  0C40 00C0                462           CMPI.W  #$00C0,D0
00A00196  661E                     463           BNE.S   FORM10E6
00A00198                           464  
00A00198  1AFC 002E                465           MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
00A0019C  1AFC 0057                466           MOVE.B  #'W',(A5)+
00A001A0  6008                     467           BRA.S   FORM10E4
00A001A2                           468  
00A001A2  1AFC 002E                469  FORM10E3 MOVE.B  #'.',(A5)+
00A001A6  1AFC 004C                470           MOVE.B  #'L',(A5)+
00A001AA                           471  
00A001AA  61CE                     472  FORM10E4 BSR     EEA10
00A001AC                           473  
00A001AC  1CC5                     474           MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
00A001AE                           475  
00A001AE  3814                     476           MOVE.W  (A4),D4
00A001B0  EF5C                     477           ROL.W   #7,D4
00A001B2  618C                     478           BSR     FORMREGA       <EA>,A@
00A001B4  603C                     479           BRA.S   CS12           COMMON
00A001B6                           480  
00A001B6  0814 0000                481  FORM10E6 BTST.B  #0,(A4)
00A001BA  6620                     482           BNE.S   FORM105        .......1........    D@,<EA>
00A001BC  600C                     483           BRA.S   FORM104        .......0........    <EA>,D@
00A001BE                           484  
00A001BE                           485  *  BIT   5432109876543210
00A001BE                           486  *        ..........AAAAAA       EFFECTIVE ADDRESS
00A001BE                           487  *        .......MMM......       OP-MODE
00A001BE                           488  *        ....RRR.........       D-REGISTER
00A001BE                           489  *        .......0........       EA,D@
00A001BE                           490  *        .......1........       D@,EA
00A001BE                           491  *        ........00......       BYTE
00A001BE                           492  *        ........01......       WORD
00A001BE                           493  *        ........10......       LONG
00A001BE                           494m          LONG
00A001C0                           495  FORM10   DS      0              AND  EOR  OR
00A001C0  0814 0000                496           BTST.B  #0,(A4)
00A001C4  6616                     497           BNE.S   FORM105
00A001C6                           498  
00A001C6  3E3C 0FFD                499  FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
00A001CA  6100 0310                500  FORM104  BSR     FORMSIZE
00A001CE  61AA                     501           BSR     EEA10          <EA>,D@
00A001D0                           502  
00A001D0  1CC5                     503           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A001D2                           504  
00A001D2  1814                     505           MOVE.B  (A4),D4
00A001D4  E20C                     506           LSR.B   #1,D4
00A001D6  6100 FF78                507           BSR     FORMREGD
00A001DA  6016                     508           BRA.S   CS12           COMMON
00A001DC                           509  
00A001DC  6100 02FE                510  FORM105  BSR     FORMSIZE       D@,<EA>
00A001E0  1814                     511           MOVE.B  (A4),D4
00A001E2  E20C                     512           LSR.B   #1,D4
00A001E4  6100 FF6A                513           BSR     FORMREGD
00A001E8                           514  
00A001E8  1CC5                     515           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A001EA                           516  
00A001EA  3814                     517           MOVE.W  (A4),D4
00A001EC  3E3C 01FD                518           MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
00A001F0  6188                     519           BSR     EEA10
00A001F2  6000 0662                520  CS12     BRA     COMMON
00A001F6                           521  
00A001F6                           522m          LONG
00A001F8                           523  *                               PEA     (JMP  JSR)
00A001F8  3E3C 07E4                524  FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
00A001FC  6100 FF7C                525           BSR     EEA10
00A00200  60F0                     526           BRA     CS12           COMMON
00A00202                           527  
00A00202                           528m          LONG
00A00204                           529  *                               JMP  JSR
00A00204  2004                     530  FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
00A00206  0240 003F                531           ANDI.W  #$3F,D0
00A0020A  0C40 0038                532           CMPI.W  #$38,D0
00A0020E  6608                     533           BNE.S   FORM112        NOT .S
00A00210  1AFC 002E                534           MOVE.B  #'.',(A5)+     PERIOD
00A00214  1AFC 0053                535           MOVE.B  #'S',(A5)+     S
00A00218  0C40 0039                536  FORM112  CMPI.W  #$39,D0
00A0021C  6608                     537           BNE.S   FORM114
00A0021E  1AFC 002E                538           MOVE.B  #'.',(A5)+     PERIOD
00A00222  1AFC 004C                539           MOVE.B  #'L',(A5)+     L
00A00226  60D0                     540  FORM114  BRA     FORM11
00A00228                           541  
00A00228                           542  *  BIT   5432109876543210
00A00228                           543  *        ....XXX.....0...       DATA DESTINATION REGISTER
00A00228                           544  *        ....XXX.....1...       ADDRESS REGISTER
00A00228                           545  *        ....XXX.00......       BYTE
00A00228                           546  *        ........01......       WORD
00A00228                           547  *        ........10......       LONG
00A00228                           548  *        ............0...       DATA REGISTER TO DATA REGISTER
00A00228                           549  *        ............1...       MEMORY TO MEMORY
00A00228                           550  *        ............0XXX       DATA SOURCE REGISTER
00A00228                           551  *        ............1XXX       ADDRESS SOURCE REGISTER
00A00228                           552  *
00A00228                           553m          LONG
00A00228                           554  FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
00A00228  6100 02B2                555           BSR     FORMSIZE
00A0022C                           556  
00A0022C  0804 0003                557           BTST    #3,D4
00A00230  6610                     558           BNE.S   FORM125
00A00232                           559  
00A00232  6100 FF1C                560           BSR     FORMREGD       D@,D@;   FORMAT SOURCE
00A00236                           561  
00A00236  1CC5                     562           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00238                           563  
00A00238  1814                     564           MOVE.B  (A4),D4
00A0023A  E20C                     565           LSR.B   #1,D4
00A0023C  6100 FF12                566           BSR     FORMREGD       FORMAT DESTINATION
00A00240  6046                     567           BRA.S   CS11           COMMON
00A00242                           568  
00A00242  1CFC 002D                569  FORM125  MOVE.B  #'-',(A6)+     -
00A00246  1CFC 0028                570           MOVE.B  #'(',(A6)+     (
00A0024A  6100 FEF4                571           BSR     FORMREGA       A@    SOURCE
00A0024E                           572  
00A0024E  203C 282D2C29            573           MOVE.L  #'(-,)',D0     ),-(
00A00254  6152                     574           BSR.S   SCHR           STORE CHARS
00A00256                           575  
00A00256  1814                     576           MOVE.B  (A4),D4
00A00258  E20C                     577           LSR.B   #1,D4
00A0025A  6100 FEE4                578           BSR     FORMREGA       A@   DESTINATION
00A0025E  1CFC 0029                579           MOVE.B  #')',(A6)+
00A00262  6024                     580           BRA.S   CS11           COMMON
00A00264                           581  
00A00264                           582  *  BIT   5432109876543210
00A00264                           583  *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
00A00264                           584  *        ....XXX.00......       BYTE
00A00264                           585  *        ........01......       WORD
00A00264                           586  *        ........10......       LONG
00A00264                           587  *        ............1...       MEMORY TO MEMORY
00A00264                           588  *        ............1XXX       ADDRESS SOURCE REGISTER
00A00264                           589  *
00A00264                           590m          LONG
00A00264                           591  FORM12A  DS      0              CMPM
00A00264  6100 0276                592           BSR     FORMSIZE
00A00268                           593  
00A00268  1CFC 0028                594           MOVE.B  #'(',(A6)+     (
00A0026C  6100 FED2                595           BSR     FORMREGA       A@
00A00270                           596  
00A00270  203C 282C2B29            597           MOVE.L  #'(,+)',D0     )+,(
00A00276  6130                     598           BSR.S   SCHR           STORE CHARS
00A00278                           599  
00A00278  1814                     600           MOVE.B  (A4),D4
00A0027A  E20C                     601           LSR.B   #1,D4
00A0027C  6100 FEC2                602           BSR     FORMREGA       A@
00A00280  1CFC 0029                603           MOVE.B  #')',(A6)+
00A00284  1CFC 002B                604           MOVE.B  #'+',(A6)+
00A00288  6000 05CC                605  CS11     BRA     COMMON
00A0028C                           606  
00A0028C                           607m          LONG
00A0028C  6000 021E                608  IQUICK   BRA     IQUICKA        ADDQ  SUBQ
00A00290                           609  
00A00290                           610  *  BIT   5432109876543210
00A00290                           611  *        0111...0........       FIXED
00A00290                           612  *        ....RRR.........       DATA REGISTER
00A00290                           613  *        ........DDDDDDDD       SIGN EXTENDED DATA
00A00290                           614  *
00A00290                           615m          LONG
00A00290                           616  IMOVEQ   DS      0
00A00290  1CFC 0023                617           MOVE.B  #'#',(A6)+     IMMEDIATE
00A00294                           618  
00A00294  3014                     619           MOVE.W  (A4),D0
00A00296  4880                     620           EXT.W   D0
00A00298  48C0                     621           EXT.L   D0
00A0029A  6100 0F0E                622           BSR     HEX2DEC        DECIMAL
00A0029E                           623  
00A0029E  1CC5                     624           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A002A0                           625  
00A002A0  EF5C                     626           ROL.W   #7,D4
00A002A2  6100 FEAC                627           BSR     FORMREGD
00A002A6  60E0                     628           BRA     CS11           COMMON
00A002A8                           629  
00A002A8  1CC0                     630  SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
00A002AA  E088                     631           LSR.L   #8,D0
00A002AC  66FA                     632           BNE     SCHR           MORE TO OUTPUT
00A002AE  4E75                     633           RTS
00A002B0                           634  
00A002B0                           635  * MOVE FROM SR  (STATUS REGISTER)
00A002B0                           636  *
00A002B0                           637m          LONG
00A002B0  203C 2C525300            638  IMVFSR   MOVE.L  #',RS'+0,D0   SR,
00A002B6                           639  
00A002B6  61F0                     640           BSR     SCHR
00A002B8  6100 02AC                641           BSR     EEA            DATA ALTERABLE
00A002BC  60CA                     642           BRA     CS11           COMMON
00A002BE                           643  
00A002BE                           644  * MOVE FROM USP (USER STACK POINTER)
00A002BE                           645  *
00A002BE                           646m          LONG
00A002C0  203C 2C505355            647  IMVFUSP  MOVE.L  #',PSU',D0     USP,
00A002C6  61E0                     648           BSR     SCHR
00A002C8  6100 FE76                649           BSR     FORMREGA
00A002CC  60BA                     650           BRA     CS11           COMMON
00A002CE                           651  
00A002CE                           652  * MOVE TO SR (STATUS REGISTER)
00A002CE                           653  *
00A002CE                           654m          LONG
00A002D0  3E3C 0FFD                655  IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
00A002D4  6100 0290                656           BSR     EEA
00A002D8  203C 52532C00            657           MOVE.L  #'RS,'+0,D0   ,SR
00A002DE  61C8                     658  IMVT44   BSR     SCHR
00A002E0  60A6                     659           BRA     CS11           COMMON
00A002E2                           660  
00A002E2                           661  * MOVE TO USP (USER STACK POINTER)
00A002E2                           662  *
00A002E2                           663m          LONG
00A002E4  6100 FE5A                664  IMVTUSP  BSR     FORMREGA
00A002E8  203C 5053552C            665           MOVE.L  #'PSU,',D0     ,USP
00A002EE  60EE                     666           BRA     IMVT44
00A002F0                           667  
00A002F0                           668  *  MOVE TO CCR (CONDITION CODE REGISTER)
00A002F0                           669  *
00A002F0                           670m          LONG
00A002F0  3E3C 0FFD                671  IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
00A002F4  6100 0270                672           BSR     EEA
00A002F8  203C 5243432C            673           MOVE.L  #'RCC,',D0     ,CCR
00A002FE  60DE                     674           BRA     IMVT44
00A00300                           675  
00A00300                           676  *  BIT   5432109876543210
00A00300                           677  *        0000...1..001...       FIXED
00A00300                           678  *        ....XXX.........       DATA REGISTER
00A00300                           679  *        ........0.......       MEMORY TO REGISTER
00A00300                           680  *        ........1.......       REGISTER TO MEMORY
00A00300                           681  *        .........0......       WORD
00A00300                           682  *        .........1......       LONG
00A00300                           683  *        .............XXX       ADDRESS REGISTER
00A00300                           684  *
00A00300                           685m          LONG
00A00300                           686  IMOVEP   DS      0
00A00300  1AFC 002E                687           MOVE.B  #'.',(A5)+     D@,#(A@)
00A00304  303C 4C57                688           MOVE.W  #'LW',D0
00A00308  0804 0006                689           BTST    #6,D4
00A0030C  6702                     690           BEQ.S   IMOVEP11       USE "W"
00A0030E  E048                     691           LSR.W   #8,D0          USE "L"
00A00310  1AC0                     692  IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
00A00312                           693  
00A00312  1814                     694           MOVE.B  (A4),D4
00A00314  E20C                     695           LSR.B   #1,D4
00A00316                           696  
00A00316  082C 0007 0001           697           BTST.B  #7,1(A4)
00A0031C  670E                     698           BEQ.S   IMOVEP35
00A0031E                           699  
00A0031E  6100 FE30                700           BSR     FORMREGD       D@,$HHHH(A@)
00A00322                           701  
00A00322  1CC5                     702           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00324                           703  
00A00324  3814                     704           MOVE.W  (A4),D4
00A00326  6112                     705           BSR.S   IMOVEP66
00A00328  6000 052A                706  CS20     BRA     COMMON4
00A0032C                           707  
00A0032C  610C                     708  IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
00A0032E                           709  
00A0032E  1CC5                     710           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00330                           711  
00A00330  1814                     712           MOVE.B  (A4),D4
00A00332  E20C                     713           LSR.B   #1,D4
00A00334  6100 FE1A                714           BSR     FORMREGD
00A00338  60EE                     715           BRA     CS20           COMMON4
00A0033A                           716  
00A0033A  1CFC 0024                717  IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
00A0033E  302C 0002                718           MOVE.W  2(A4),D0
00A00342  6100 0EDC                719           BSR     PNT4HX
00A00346                           720  
00A00346  1CFC 0028                721           MOVE.B  #'(',(A6)+
00A0034A                           722  
00A0034A  3814                     723           MOVE.W  (A4),D4
00A0034C  6100 FDF2                724           BSR     FORMREGA
00A00350  1CFC 0029                725           MOVE.B  #')',(A6)+
00A00354  4E75                     726           RTS
00A00356                           727  
00A00356                           728m          LONG
00A00358  6000 04FC                729  SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
00A0035C                           730  
00A0035C                           731m          LONG
00A0035C  6100 00EA                732  ISCC     BSR     ICCCC          GET REST OF OP-CODE
00A00360  6100 0204                733           BSR     EEA            DATA ALTERABLE
00A00364  60F2                     734           BRA     SCOMMON
00A00366                           735  
00A00366                           736  
00A00366                           737m          LONG
00A00368                           738  IDBCC    DS      0              DB--
00A00368  3814                     739           MOVE.W  (A4),D4
00A0036A  6100 FDE4                740           BSR     FORMREGD
00A0036E                           741  
00A0036E  1CC5                     742           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00370  1CFC 0024                743           MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
00A00374                           744  
00A00374  6100 00D2                745           BSR     ICCCC
00A00378  602E                     746           BRA.S   ICC55
00A0037A                           747  
00A0037A                           748  *  BIT   5432109876543210
00A0037A                           749  *        0110............       FIXED
00A0037A                           750  *        ....CCCC........       CONDITION
00A0037A                           751  *        ........DDDDDDD0       DISPLACEMENT
00A0037A                           752  *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
00A0037A                           753  *
00A0037A                           754m          LONG
00A0037C                           755  ICC      DS      0              B--
00A0037C  6100 00CA                756           BSR     ICCCC
00A00380                           757  
00A00380  1CFC 0024                758  IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
00A00384                           759  
00A00384  4A04                     760           TST.B   D4
00A00386  6720                     761           BEQ.S   ICC55          16 BIT DISPLACEMENT
00A00388                           762  
00A00388  1AFC 002E                763           MOVE.B  #'.',(A5)+
00A0038C  1AFC 0053                764           MOVE.B  #'S',(A5)+
00A00390  4884                     765           EXT.W   D4             8 BIT DISPLACEMENT
00A00392                           766  
00A00392  48C4                     767  ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
00A00394  D8A9 FFFC                768           ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
00A00398  5484                     769           ADDQ.L  #2,D4          + TWO
00A0039A  2004                     770           MOVE.L  D4,D0
00A0039C                           771  
00A0039C  E284                     772           ASR.L   #1,D4
00A0039E  6500 04DE                773           BCS     FERROR         ODD BOUNDRY DISPLACEMENT
00A003A2                           774  
00A003A2  6100 0E76                775           BSR     PNT6HX
00A003A6  60B0                     776           BRA     SCOMMON
00A003A8                           777  
00A003A8  5483                     778  ICC55    ADDQ.L  #2,D3          SIZE
00A003AA  382C 0002                779           MOVE.W  2(A4),D4
00A003AE  1AFC 002E                780           MOVE.B  #'.',(A5)+
00A003B2  1AFC 004C                781           MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
00A003B6  60DA                     782           BRA     ICC35
00A003B8                           783  
00A003B8                           784m          LONG
00A003B8                           785  *                               BCHG  BCLR  BSET  BTST
00A003B8                           786  ISETD    DS      0              DYNAMIC BIT
00A003B8  EF5C                     787           ROL.W   #7,D4
00A003BA  6100 FD94                788           BSR     FORMREGD       DATA REGISTER
00A003BE                           789  
00A003BE  1CC5                     790  ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A003C0                           791  
00A003C0  3814                     792           MOVE.W  (A4),D4
00A003C2  6100 01A2                793           BSR     EEA            DATA ALTERABLE
00A003C6  6090                     794  CS18     BRA     SCOMMON
00A003C8                           795  
00A003C8                           796m          LONG
00A003C8                           797  *                            BCHG  BCLR  BSET  BTST
00A003C8                           798  *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
00A003C8                           799  *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
00A003C8                           800  *
00A003C8                           801  ISETS    DS      0              STATIC BIT
00A003C8  5483                     802           ADDQ.L  #2,D3     SIZE
00A003CA  1CFC 0023                803           MOVE.B  #'#',(A6)+     IMMEDIATE
00A003CE                           804  
00A003CE  4280                     805           CLR.L   D0
00A003D0  302C 0002                806           MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
00A003D4  2200                     807           MOVE.L  D0,D1
00A003D6  EA89                     808           LSR.L   #5,D1
00A003D8  6600 04A4                809           BNE     FERROR
00A003DC  6100 0DCC                810           BSR     HEX2DEC        DECIMAL
00A003E0                           811  
00A003E0  60DC                     812           BRA     ISETD12
00A003E2                           813  
00A003E2                           814  *   BIT  5432109876543210
00A003E2                           815  *        ....XXX.........       IMMEDIATE COUNT/REGISTER
00A003E2                           816  *        .......0........       RIGHT SHIFT
00A003E2                           817  *        .......1........       LEFT SHIFT
00A003E2                           818  *        ........00......       BYTE
00A003E2                           819  *        ........01......       WORD
00A003E2                           820  *        ........10......       LONG
00A003E2                           821  *        ....0...11......       WORD (MEMORY)
00A003E2                           822  *        ....0...11AAAAAA       EFFECTIVE ADDRESS
00A003E2                           823  *        ..........0.....       SHIFT IMMEDIATE COUNT
00A003E2                           824  *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
00A003E2                           825  *
00A003E2                           826m          LONG
00A003E4                           827  ISHIFT   DS      0              AS-  LS-  RO-  ROX-
00A003E4  303C 4C52                828           MOVE.W  #'LR',D0
00A003E8  0804 0008                829           BTST    #8,D4          DIRECTION BIT
00A003EC  6702                     830           BEQ.S   ISHIFT13       RIGHT
00A003EE  E048                     831           LSR.W   #8,D0          LEFT
00A003F0  1AC0                     832  ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
00A003F2                           833  
00A003F2  3014                     834           MOVE.W  (A4),D0
00A003F4  0240 00C0                835           ANDI.W  #$00C0,D0
00A003F8  0C40 00C0                836           CMPI.W  #$00C0,D0
00A003FC  6730                     837           BEQ.S   ISHIFTM1       MEMORY SHIFT
00A003FE                           838  
00A003FE  6100 00DC                839           BSR     FORMSIZE
00A00402                           840  
00A00402  EF5C                     841           ROL.W   #7,D4
00A00404  0804 000C                842           BTST    #12,D4         I/R BIT
00A00408  6616                     843           BNE.S   ISHIFT33       COUNT IN REGISTER
00A0040A                           844  
00A0040A  0204 0007                845           ANDI.B  #$07,D4        IMMEDIATE COUNT
00A0040E  6604                     846           BNE.S   ISHIFT23
00A00410  0004 0008                847           ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
00A00414  0004 0030                848  ISHIFT23 ORI.B   #'0',D4
00A00418  1CFC 0023                849           MOVE.B  #'#',(A6)+
00A0041C  1CC4                     850           MOVE.B  D4,(A6)+
00A0041E  6004                     851           BRA.S   ISHIFT44
00A00420                           852  
00A00420  6100 FD2E                853  ISHIFT33 BSR     FORMREGD
00A00424                           854  
00A00424  1CC5                     855  ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00426                           856  
00A00426  3814                     857           MOVE.W  (A4),D4
00A00428  6100 FD26                858           BSR     FORMREGD
00A0042C  6098                     859  CS17     BRA     CS18           COMMON
00A0042E                           860  
00A0042E  1AFC 002E                861  ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
00A00432  1AFC 0057                862           MOVE.B  #'W',(A5)+     .WORD
00A00436                           863  
00A00436  0804 000B                864           BTST    #11,D4
00A0043A  6600 0442                865           BNE     FERROR         BIT 11 MUST BE ZERO
00A0043E                           866  
00A0043E  3E3C 01FC                867           MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
00A00442  6100 0122                868           BSR     EEA
00A00446  60E4                     869           BRA     CS17           COMMON
00A00448                           870  
00A00448  700F                     871  ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
00A0044A  C014                     872           AND.B   (A4),D0        D0 = CCC
00A0044C  E388                     873           LSL.L   #1,D0          D0 = CCC*2
00A0044E                           874  
00A0044E  323B 0010                875           MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
00A00452  1AC1                     876           MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
00A00454  E049                     877           LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
00A00456  0C01 0020                878           CMPI.B  #BLANK,D1          TO THE BUFFER.
00A0045A  6702                     879           BEQ.S   ICCCC9
00A0045C  1AC1                     880           MOVE.B  D1,(A5)+
00A0045E  4E75                     881  ICCCC9   RTS
00A00460                           882  
00A00460= 20 54                    883  BRTBL    DC.B    ' T'      'T '  BRA ACCEPTED
00A00462= 20 46                    884           DC.B    ' F'      'F '
00A00464= 49 48                    885           DC.B    'IH'      'HI'
00A00466= 53 4C                    886           DC.B    'SL'      'LS'
00A00468= 43 43                    887           DC.B    'CC'      'CC'
00A0046A= 53 43                    888           DC.B    'SC'      'CS'
00A0046C= 45 4E                    889           DC.B    'EN'      'NE'
00A0046E= 51 45                    890           DC.B    'QE'      'EQ'
00A00470= 43 56                    891           DC.B    'CV'      'VC'
00A00472= 53 56                    892           DC.B    'SV'      'VS'
00A00474= 4C 50                    893           DC.B    'LP'      'PL'
00A00476= 49 4D                    894           DC.B    'IM'      'MI'
00A00478= 45 47                    895           DC.B    'EG'      'GE'
00A0047A= 54 4C                    896           DC.B    'TL'      'LT'
00A0047C= 54 47                    897           DC.B    'TG'      'GT'
00A0047E= 45 4C                    898           DC.B    'EL'      'LE'
00A00480                           899  
00A00480                           900  *   BIT  5432109876543210
00A00480                           901  *        ....RRRMMM......    DESTINATION REGISTER MODE
00A00480                           902  *        ..........MMMRRR    SOURCE MODE REGISTER
00A00480                           903  *
00A00480                           904  * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
00A00480                           905  *
00A00480                           906  IMOVEA1  DS      0
00A00480  3E3C 0FFF                907           MOVE.W  #$FFF,D7       ALL MODES
00A00484  6100 00E0                908           BSR     EEA
00A00488                           909  
00A00488  1CC5                     910           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A0048A                           911  
00A0048A  3814                     912           MOVE.W  (A4),D4        ....RRRMMM......
00A0048C  E24C                     913           LSR.W   #1,D4          .....RRRMMM.....
00A0048E  EA0C                     914           LSR.B   #5,D4          .....RRR.....MMM
00A00490  E05C                     915           ROR.W   #8,D4          .....MMM.....RRR
00A00492  EB0C                     916           LSL.B   #5,D4          .....MMMRRR.....
00A00494  EA4C                     917           LSR.W   #5,D4          ..........MMMRRR
00A00496                           918  
00A00496                           919  * IF .BYTE DESTINATION A@ NOT ALLOWED
00A00496  3E3C 01FF                920           MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
00A0049A  1014                     921           MOVE.B  (A4),D0
00A0049C  0C00 0001                922           CMPI.B  #$01,D0
00A004A0  6604                     923           BNE.S   IMOVE19        NOT BYTE SIZE
00A004A2                           924  
00A004A2  3E3C 01FD                925           MOVE.W  #$1FD,D7       DATA ALTERABLE
00A004A6                           926  IMOVE19
00A004A6                           927  
00A004A6  6100 00BE                928           BSR     EEA
00A004AA  602C                     929           BRA.S   CS19           COMMON
00A004AC                           930  
00A004AC                           931  *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
00A004AC                           932  IQUICKA  DS      0              ADDQ  SUBQ
00A004AC  612E                     933           BSR.S   FORMSIZE
00A004AE                           934  
00A004AE  1CFC 0023                935           MOVE.B  #'#',(A6)+
00A004B2  EF5C                     936           ROL.W   #7,D4
00A004B4  0204 0007                937           ANDI.B  #7,D4
00A004B8  6604                     938           BNE.S   IQUICK21
00A004BA  0004 0008                939           ORI.B   #8,D4          MAKE ZERO INTO EIGHT
00A004BE  0004 0030                940  IQUICK21 ORI.B   #'0',D4        MAKE ASCII
00A004C2  1CC4                     941           MOVE.B  D4,(A6)+
00A004C4                           942  
00A004C4  1CC5                     943           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A004C6                           944  
00A004C6  3814                     945           MOVE.W  (A4),D4
00A004C8                           946  
00A004C8  3014                     947           MOVE.W  (A4),D0
00A004CA  0240 00C0                948           ANDI.W  #$00C0,D0
00A004CE  6704                     949           BEQ.S   IQUICK31       DATA ALTERABLE
00A004D0  3E3C 01FF                950           MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
00A004D4  6100 0090                951  IQUICK31 BSR     EEA
00A004D8  6000 037C                952  CS19     BRA     COMMON
00A004DC                           953  
00A004DC                           954  *  BIT   5432109876543210
00A004DC                           955  *        ........00......       BYTE
00A004DC                           956  *        ........01......       WORD
00A004DC                           957  *        ........10......       LONG
00A004DC                           958  *        ........11......       ERROR
00A004DC                           959  *
00A004DC                           960  FORMSIZE DS      0
00A004DC  3414                     961           MOVE.W  (A4),D2
00A004DE  1AFC 002E                962           MOVE.B  #'.',(A5)+     STORE PERIOD
00A004E2  EC4A                     963           LSR.W   #6,D2
00A004E4  0242 0003                964           ANDI.W  #$03,D2
00A004E8  6606                     965           BNE.S   FORM91
00A004EA  1AFC 0042                966           MOVE.B  #'B',(A5)+     STORE "B"
00A004EE  6016                     967           BRA.S   FORM95
00A004F0                           968  
00A004F0  103C 0057                969  FORM91   MOVE.B  #'W',D0
00A004F4  0C02 0001                970           CMPI.B  #1,D2
00A004F8  670A                     971           BEQ.S   FORM93
00A004FA  103C 004C                972           MOVE.B  #'L',D0
00A004FE  0C02 0002                973           CMPI.B  #2,D2
00A00502  665E                     974           BNE.S   FE10           FERROR
00A00504  1AC0                     975  FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
00A00506  4E75                     976  FORM95   RTS
00A00508                           977  
00A00508  6100 FC46                978  EA000    BSR     FORMREGD
00A0050C  0807 0000                979           BTST    #0,D7
00A00510  6750                     980           BEQ.S   FE10           FERROR
00A00512  4E75                     981           RTS
00A00514                           982  
00A00514  6100 FC2A                983  EA001    BSR     FORMREGA
00A00518  0807 0001                984           BTST    #1,D7
00A0051C  6744                     985           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A0051E  4E75                     986           RTS
00A00520                           987  
00A00520  1CFC 0028                988  EA010    MOVE.B  #'(',(A6)+
00A00524  6100 FC1A                989           BSR     FORMREGA
00A00528  1CFC 0029                990           MOVE.B  #')',(A6)+
00A0052C  0807 0002                991           BTST    #2,D7
00A00530  6730                     992           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A00532  4E75                     993           RTS
00A00534                           994  
00A00534  1CFC 0028                995  EA011    MOVE.B  #'(',(A6)+
00A00538  6100 FC06                996           BSR     FORMREGA
00A0053C  1CFC 0029                997           MOVE.B  #')',(A6)+
00A00540  1CFC 002B                998           MOVE.B  #'+',(A6)+
00A00544  0807 0003                999           BTST    #3,D7
00A00548  6718                    1000           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A0054A  4E75                    1001  EA011RTS RTS
00A0054C                          1002  
00A0054C  1CFC 002D               1003  EA100    MOVE.B  #'-',(A6)+
00A00550  1CFC 0028               1004           MOVE.B  #'(',(A6)+
00A00554  6100 FBEA               1005           BSR     FORMREGA
00A00558  1CFC 0029               1006           MOVE.B  #')',(A6)+
00A0055C  0807 0004               1007           BTST    #4,D7
00A00560  66E8                    1008           BNE     EA011RTS
00A00562  6000 031A               1009  FE10     BRA     FERROR         THIS MODE NOT ALLOWED
00A00566                          1010  
00A00566                          1011  *  ENTER       A4 = POINTER TO FIRST WORD
00A00566                          1012  *              D3 = OFFSET TO EXTENSION
00A00566                          1013  *              D4 = VALUE TO PROCESS
00A00566                          1014  *              D7 = MODES ALLOWED MASK
00A00566                          1015  *
00A00566                          1016  EEA      DS      0
00A00566  2004                    1017           MOVE.L  D4,D0
00A00568  E648                    1018           LSR.W   #3,D0
00A0056A  0240 0007               1019           ANDI.W  #$7,D0
00A0056E  6798                    1020           BEQ     EA000
00A00570                          1021  
00A00570  0C00 0001               1022           CMPI.B  #1,D0
00A00574  679E                    1023           BEQ     EA001
00A00576                          1024  
00A00576  0C00 0002               1025           CMPI.B  #2,D0
00A0057A  67A4                    1026           BEQ     EA010
00A0057C                          1027  
00A0057C  0C00 0003               1028           CMPI.B  #3,D0
00A00580  67B2                    1029           BEQ     EA011
00A00582                          1030  
00A00582  0C00 0004               1031           CMPI.B  #4,D0
00A00586  67C4                    1032           BEQ     EA100
00A00588                          1033  
00A00588  0C00 0005               1034           CMPI.B  #5,D0
00A0058C  6760                    1035           BEQ.S   EA101
00A0058E                          1036  
00A0058E  0C00 0007               1037           CMPI.B  #7,D0
00A00592  6770                    1038           BEQ.S   EA111
00A00594                          1039  
00A00594                          1040  *    EXTENSION WORD
00A00594                          1041  *   BIT  5432109876543210
00A00594                          1042  *        0...............    DATA REGISTER
00A00594                          1043  *        1...............    ADDRESS REGISTER
00A00594                          1044  *        .RRR............    REGISTER
00A00594                          1045  *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
00A00594                          1046  *        ....1...........    LONG VALUE IN INDEX REGISTER
00A00594                          1047  *        .....000........
00A00594                          1048  *        ........DDDDDDDD    DISPLACEMENT INTEGER
00A00594                          1049  *
00A00594                          1050  * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
00A00594                          1051  
00A00594  0807 0006               1052           BTST    #6,D7
00A00598  67C8                    1053           BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
00A0059A                          1054  
00A0059A  3234 3000               1055           MOVE.W  (A4,D3),D1
00A0059E  0241 0700               1056           ANDI.W  #$0700,D1
00A005A2  66BE                    1057           BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
00A005A4                          1058  
00A005A4  3034 3000               1059           MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
00A005A8  4880                    1060           EXT.W   D0
00A005AA  48C0                    1061           EXT.L   D0
00A005AC  6100 0BFC               1062           BSR     HEX2DEC        DECIMAL
00A005B0  1CFC 0028               1063           MOVE.B  #'(',(A6)+     (
00A005B4                          1064  
00A005B4  6100 FB8A               1065           BSR     FORMREGA       XX(A@
00A005B8                          1066  
00A005B8  1CFC 002C               1067           MOVE.B  #',',(A6)+     XX(A@,
00A005BC                          1068  
00A005BC  1834 3000               1069           MOVE.B  (A4,D3),D4
00A005C0  E804                    1070           ASR.B   #4,D4
00A005C2  6A06                    1071           BPL.S   EA1105
00A005C4  6100 FB7A               1072           BSR     FORMREGA
00A005C8  6004                    1073           BRA.S   EA1107
00A005CA                          1074  
00A005CA  6100 FB84               1075  EA1105   BSR     FORMREGD
00A005CE  1CFC 002E               1076  EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
00A005D2                          1077  
00A005D2  3834 3000               1078           MOVE.W  (A4,D3),D4     D4 = R@
00A005D6  103C 0057               1079           MOVE.B  #'W',D0        ..........W
00A005DA  0804 000B               1080           BTST    #11,D4
00A005DE  6704                    1081           BEQ.S   EA1109
00A005E0  103C 004C               1082           MOVE.B  #'L',D0        ..........L
00A005E4  1CC0                    1083  EA1109   MOVE.B  D0,(A6)+
00A005E6  1CFC 0029               1084           MOVE.B  #')',(A6)+     ...........)
00A005EA  5483                    1085           ADDQ.L  #2,D3
00A005EC  4E75                    1086           RTS
00A005EE                          1087  
00A005EE                          1088  * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
00A005EE                          1089  *
00A005EE  0807 0005               1090  EA101    BTST    #5,D7          101000;   DIS(A@)
00A005F2  6756                    1091           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A005F4                          1092  
00A005F4  3034 3000               1093           MOVE.W  (A4,D3),D0
00A005F8  48C0                    1094           EXT.L   D0
00A005FA  6100 0BAE               1095           BSR     HEX2DEC        DECIMAL
00A005FE  5483                    1096           ADDQ.L  #2,D3          SIZE
00A00600  6000 FF1E               1097           BRA     EA010
00A00604                          1098  
00A00604                          1099  *  111000        ABSOLUTE SHORT
00A00604                          1100  *  111001        ABSOLUTE LONG
00A00604                          1101  *  111010        PROGRAM COUNTER WITH DISPLACEMENT
00A00604                          1102  *  111011        PROGRAM COUNTER WITH INDEX
00A00604                          1103  *  111100        IMMEDIATE OR STATUS REG
00A00604                          1104  *
00A00604                          1105  EA111
00A00604  0244 0007               1106           ANDI.W  #7,D4
00A00608  6618                    1107           BNE.S   EA1112
00A0060A                          1108  
00A0060A  0807 0007               1109           BTST    #7,D7
00A0060E  673A                    1110           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A00610                          1111  
00A00610  3034 3000               1112           MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
00A00614  48C0                    1113           EXT.L   D0
00A00616  1CFC 0024               1114           MOVE.B  #'$',(A6)+
00A0061A  6100 0BF6               1115           BSR     PNT8HX         SIGN EXTENDED VALUE
00A0061E  5483                    1116           ADDQ.L  #2,D3          SIZE + 2
00A00620  4E75                    1117           RTS
00A00622                          1118  
00A00622  0C04 0001               1119  EA1112   CMPI.B  #1,D4
00A00626  6616                    1120           BNE.S   EA1113
00A00628                          1121  
00A00628  0807 0008               1122           BTST    #8,D7
00A0062C  671C                    1123           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A0062E                          1124  
00A0062E  1CFC 0024               1125           MOVE.B  #'$',(A6)+     HEX
00A00632  2034 3000               1126           MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
00A00636  6100 0BDA               1127           BSR     PNT8HX
00A0063A                          1128  *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
00A0063A                          1129  *-       MOVE.B  #'L',(A6)+     IE   .L
00A0063A  5883                    1130           ADDQ.L  #4,D3
00A0063C  4E75                    1131           RTS
00A0063E                          1132  
00A0063E  0C04 0002               1133  EA1113   CMPI.B  #2,D4
00A00642  662C                    1134           BNE.S   EA1114
00A00644                          1135  
00A00644  0807 0009               1136           BTST    #9,D7
00A00648  6604                    1137           BNE.S   EA1113A
00A0064A  6000 0232               1138  FE11     BRA     FERROR         THIS MODE NOT ALLOWED
00A0064E                          1139  EA1113A
00A0064E                          1140  
00A0064E  3034 3000               1141           MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
00A00652  48C0                    1142           EXT.L   D0
00A00654  D0A9 FFFC               1143           ADD.L   HISPC(A1),D0
00A00658  5480                    1144           ADDQ.L  #2,D0
00A0065A  1CFC 0024               1145           MOVE.B  #'$',(A6)+     HEX "$"
00A0065E  6100 0BB2               1146           BSR     PNT8HX         DESTINATION
00A00662  203C 29435028           1147           MOVE.L  #')CP(',D0     (PC)
00A00668  6100 FC3E               1148           BSR     SCHR           STORE WORD
00A0066C  5483                    1149           ADDQ.L  #2,D3          SIZE
00A0066E  4E75                    1150           RTS
00A00670                          1151  
00A00670  0C04 0003               1152  EA1114   CMPI.B  #3,D4
00A00674  6664                    1153           BNE.S   EA1115
00A00676                          1154  
00A00676                          1155  * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
00A00676                          1156  *
00A00676                          1157  *        5432109876543210       SECOND WORD
00A00676                          1158  *        0...............       DATA REGISTER
00A00676                          1159  *        1...............       ADDRESS REGISTER
00A00676                          1160  *        .XXX............       REGISTER
00A00676                          1161  *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
00A00676                          1162  *                               ..IN INDEX REGISTER
00A00676                          1163  *        ....1...........       LONG VALUE IN INDEX REGISTER
00A00676                          1164  *        .....000........
00A00676                          1165  *        ........XXXXXXXX       DISPLACEMENT INTEGER
00A00676                          1166  *
00A00676  0807 000A               1167           BTST    #10,D7
00A0067A  67CE                    1168           BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
00A0067C                          1169  
00A0067C  3234 3000               1170           MOVE.W  (A4,D3),D1
00A00680  0241 0700               1171           ANDI.W  #$0700,D1
00A00684  66C4                    1172           BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
00A00686                          1173  
00A00686  1034 3001               1174           MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
00A0068A  4880                    1175           EXT.W   D0
00A0068C  48C0                    1176           EXT.L   D0
00A0068E  D0A9 FFFC               1177           ADD.L   HISPC(A1),D0
00A00692  5480                    1178           ADDQ.L  #2,D0
00A00694  1CFC 0024               1179           MOVE.B  #'$',(A6)+     HEX "$"
00A00698  6100 0B78               1180           BSR     PNT8HX         DESTINATION
00A0069C                          1181  
00A0069C  203C 2C435028           1182           MOVE.L  #',CP(',D0
00A006A2  6100 FC04               1183           BSR     SCHR           DES(PC,
00A006A6                          1184  
00A006A6  3834 3000               1185           MOVE.W  (A4,D3),D4
00A006AA  E95C                    1186           ROL.W   #4,D4
00A006AC  0804 0003               1187           BTST    #3,D4
00A006B0  6706                    1188           BEQ.S   EAF25
00A006B2  6100 FA8C               1189           BSR     FORMREGA
00A006B6  6004                    1190           BRA.S   EAF27
00A006B8  6100 FA96               1191  EAF25    BSR     FORMREGD       DES(PC,R@
00A006BC                          1192  EAF27
00A006BC                          1193  
00A006BC  1CFC 002E               1194           MOVE.B  #'.',(A6)+     DES(PC,R@.
00A006C0                          1195  
00A006C0  3834 3000               1196           MOVE.W  (A4,D3),D4
00A006C4  303C 4C57               1197           MOVE.W  #'LW',D0
00A006C8  0804 000B               1198           BTST    #11,D4
00A006CC  6702                    1199           BEQ.S   EAF35
00A006CE  E048                    1200           LSR.W   #8,D0
00A006D0  1CC0                    1201  EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
00A006D2                          1202  
00A006D2  1CFC 0029               1203           MOVE.B  #')',(A6)+     DES(PC,R@.X)
00A006D6  5483                    1204           ADDQ.L  #2,D3
00A006D8  4E75                    1205           RTS
00A006DA                          1206  
00A006DA                          1207  *   BIT  5432109876543210
00A006DA                          1208  *        ..........111100       FIRST WORD;  #<IMMEDIATE>
00A006DA                          1209  *
00A006DA  0C04 0004               1210  EA1115   CMPI.B  #4,D4
00A006DE  6600 FF6A               1211           BNE     FE11           FERROR
00A006E2                          1212  
00A006E2  0807 000B               1213           BTST    #11,D7
00A006E6  6700 FF62               1214           BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
00A006EA                          1215  
00A006EA  1CFC 0023               1216           MOVE.B  #'#',(A6)+     IMMEDIATE
00A006EE                          1217  
00A006EE  122D FFFF               1218           MOVE.B  -1(A5),D1
00A006F2  0C01 004C               1219           CMPI.B  #'L',D1
00A006F6  6724                    1220           BEQ.S   EA11155        LONG
00A006F8                          1221  
00A006F8  3034 3000               1222           MOVE.W  (A4,D3),D0
00A006FC                          1223  
00A006FC  0C01 0042               1224           CMPI.B  #'B',D1
00A00700  6610                    1225           BNE.S   EA11153        .WORD
00A00702                          1226  
00A00702                          1227  * BYTE SIZE; DATA ALLOWED
00A00702                          1228  *  0000 0000 XXXX XXXX
00A00702                          1229  *  1111 1111 1XXX XXXX
00A00702  2200                    1230           MOVE.L  D0,D1
00A00704  E049                    1231           LSR.W   #8,D1
00A00706  670A                    1232           BEQ.S   EA11153
00A00708  2200                    1233           MOVE.L  D0,D1
00A0070A  EE41                    1234           ASR.W   #7,D1
00A0070C  5241                    1235           ADDQ.W  #1,D1
00A0070E  6600 FF3A               1236           BNE     FE11           FERROR
00A00712                          1237  
00A00712  48C0                    1238  EA11153  EXT.L   D0
00A00714  6100 0A94               1239           BSR     HEX2DEC
00A00718  5483                    1240           ADDQ.L  #2,D3
00A0071A  4E75                    1241           RTS
00A0071C                          1242  
00A0071C  2034 3000               1243  EA11155  MOVE.L  (A4,D3),D0
00A00720  6100 0A88               1244           BSR     HEX2DEC
00A00724  5883                    1245           ADDQ.L  #4,D3          SIZE
00A00726  4E75                    1246           RTS
00A00728                          1247  
00A00728  1AFC 002E               1248  MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
00A0072C  303C 4C57               1249           MOVE.W  #'LW',D0
00A00730  0804 0006               1250           BTST    #6,D4
00A00734  6702                    1251           BEQ.S   MOVEMS2
00A00736  E048                    1252           LSR.W   #8,D0
00A00738  1AC0                    1253  MOVEMS2  MOVE.B  D0,(A5)+       SIZE
00A0073A  4E75                    1254           RTS
00A0073C                          1255  
00A0073C                          1256  * MOVEM - REGISTER EXPANSION
00A0073C                          1257  *
00A0073C                          1258  MOVEMR   DS      0
00A0073C  342C 0002               1259           MOVE.W  2(A4),D2       D2 = SECOND WORD
00A00740  7020                    1260           MOVEQ   #$20,D0        D0 = SPACE
00A00742  7E2F                    1261           MOVEQ   #$2F,D7        D7 = /
00A00744  538E                    1262           SUBQ.L  #1,A6          ADJUST STORE POINTER
00A00746  7A30                    1263           MOVEQ   #$30,D5        D5 = REGISTER #
00A00748  383C 4144               1264           MOVE.W  #'AD',D4       D4 = REG CLASS
00A0074C                          1265  
00A0074C  0302                    1266  MOVEMR11 BTST    D1,D2
00A0074E  6730                    1267           BEQ.S   MOVEMR77       BIT RESET
00A00750                          1268  
00A00750  B016                    1269           CMP.B   (A6),D0        BIT SET
00A00752  6612                    1270           BNE.S   MOVEMR44       NOT SPACE
00A00754                          1271  
00A00754  1D44 0001               1272  MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
00A00758  1D45 0002               1273           MOVE.B  D5,2(A6)       REG #
00A0075C  1D7C 002D 0003          1274           MOVE.B  #'-',3(A6)     -
00A00762  568E                    1275           ADDQ.L  #3,A6
00A00764  602E                    1276           BRA.S   MOVEMR88
00A00766                          1277  
00A00766  0C16 002C               1278  MOVEMR44 CMPI.B  #',',(A6)
00A0076A  67E8                    1279           BEQ     MOVEMR33       COMMA SEPARATOR
00A0076C                          1280  
00A0076C  BE16                    1281           CMP.B   (A6),D7        / SEPARATOR
00A0076E  67E4                    1282           BEQ     MOVEMR33
00A00770                          1283  
00A00770  1D44 0001               1284           MOVE.B  D4,1(A6)       REG TYPE
00A00774  1D45 0002               1285           MOVE.B  D5,2(A6)       REG #
00A00778  1D7C 002D 0003          1286           MOVE.B  #'-',3(A6)     - SEPARATOR
00A0077E  6014                    1287           BRA.S   MOVEMR88
00A00780                          1288  
00A00780  0C16 002C               1289  MOVEMR77 CMPI.B  #',',(A6)
00A00784  670E                    1290           BEQ.S   MOVEMR88       COMMA
00A00786                          1291  
00A00786  B016                    1292           CMP.B   (A6),D0
00A00788  670A                    1293           BEQ.S   MOVEMR88       SPACE
00A0078A  B02E 0001               1294           CMP.B   1(A6),D0
00A0078E  6702                    1295           BEQ.S   MOVEMR79       SPACE
00A00790  568E                    1296           ADDQ.L  #3,A6
00A00792  1C87                    1297  MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
00A00794                          1298  
00A00794  5285                    1299  MOVEMR88 ADDQ.L  #1,D5
00A00796  D286                    1300           ADD.L   D6,D1          D1 = BIT POSITION
00A00798  0C05 0038               1301           CMPI.B  #'8',D5
00A0079C  66AE                    1302           BNE     MOVEMR11
00A0079E                          1303  
00A0079E  B016                    1304           CMP.B   (A6),D0        SPACE
00A007A0  670A                    1305           BEQ.S   MOVEMR94
00A007A2                          1306  
00A007A2  B02E 0001               1307           CMP.B   1(A6),D0       SPACE
00A007A6  6704                    1308           BEQ.S   MOVEMR94
00A007A8  568E                    1309           ADDQ.L  #3,A6
00A007AA  1C87                    1310           MOVE.B  D7,(A6)        /   SEPARATOR
00A007AC                          1311  
00A007AC  1A3C 0030               1312  MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
00A007B0  E04C                    1313           LSR.W   #8,D4          CHANGE REG TYPE
00A007B2  6698                    1314           BNE     MOVEMR11       MORE
00A007B4                          1315  
00A007B4  1C80                    1316           MOVE.B  D0,(A6)        SPACE
00A007B6  4E75                    1317           RTS
00A007B8                          1318  
00A007B8                          1319  DCODE68K DS      0
00A007B8  4E51 FFF0               1320           LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
00A007BC  48E9 1007 FFF0          1321           MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
00A007C2  49E9 FFF0               1322           LEA     DDATA(A1),A4        POINTS TO THE CODE.
00A007C6                          1323  
00A007C6  264D                    1324           MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
00A007C8  7050                    1325           MOVEQ   #BUFSIZE,D0
00A007CA  2C4B                    1326           MOVE.L  A3,A6
00A007CC  1CFC 0020               1327  DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
00A007D0  5380                    1328           SUBQ.L  #1,D0
00A007D2  66F8                    1329           BNE     DEC311
00A007D4                          1330  
00A007D4  2C4B                    1331           MOVE.L  A3,A6          FORMAT ADDRESS
00A007D6  2029 FFFC               1332           MOVE.L  HISPC(A1),D0
00A007DA  6100 0A68               1333           BSR     FRELADDR
00A007DE                          1334  
00A007DE                          1335  * CHECK FOR KNOWN ILLEGAL CODES
00A007DE  3014                    1336           MOVE.W  (A4),D0
00A007E0                          1337  
00A007E0  4BFA 00C6               1338           LEA     KI(PC),A5
00A007E4  2C4D                    1339           MOVE.L  A5,A6
00A007E6  DDFC 00000002           1340           ADD.L   #KIEND-KI,A6
00A007EC  B05D                    1341  DEC404   CMP.W   (A5)+,D0
00A007EE  671A                    1342           BEQ.S   FE12           FERROR;  ILLEGAL CODE
00A007F0  BBCE                    1343           CMP.L   A6,A5
00A007F2  66F8                    1344           BNE     DEC404
00A007F4                          1345  
00A007F4                          1346  * LOOK FOR MATCH OF OP-CODE
00A007F4                          1347  *
00A007F4  4BFA 00B4               1348           LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
00A007F8  4DFA 02BA               1349           LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
00A007FC  3014                    1350  DEC411   MOVE.W  (A4),D0        FIRST WORD
00A007FE  C05D                    1351           AND.W   (A5)+,D0       MASK
00A00800  B05D                    1352           CMP.W   (A5)+,D0
00A00802  6708                    1353           BEQ.S   DEC425         FOUND MATCH
00A00804  548D                    1354           ADDQ.L  #2,A5          UPDATE POINTER
00A00806  BBCE                    1355           CMP.L   A6,A5
00A00808  66F2                    1356           BNE     DEC411         MORE TABLE
00A0080A  6072                    1357  FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
00A0080C                          1358  
00A0080C  4286                    1359  DEC425   CLR.L   D6
00A0080E  1C1D                    1360           MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
00A00810  E58E                    1361           LSL.L   #2,D6
00A00812                          1362  
00A00812  4287                    1363           CLR.L   D7
00A00814  1E1D                    1364           MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
00A00816                          1365  
00A00816                          1366  * MOVE OP-CODE TO BUFFER
00A00816                          1367  *
00A00816  41FA 029C               1368           LEA     OPCTBL(PC),A0
00A0081A  4A47                    1369  DEC510   TST     D7
00A0081C  6708                    1370           BEQ.S   DEC530         AT INDEX
00A0081E  4A18                    1371  DEC515   TST.B   (A0)+
00A00820  6AFC                    1372           BPL     DEC515         MOVE THROUGH FIELD
00A00822  5387                    1373           SUBQ.L  #1,D7
00A00824  60F4                    1374           BRA     DEC510
00A00826                          1375  
00A00826  701F                    1376  DEC530   MOVEQ   #FOC,D0
00A00828  4BF3 0000               1377           LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
00A0082C  1018                    1378  DEC535   MOVE.B  (A0)+,D0
00A0082E  0880 0007               1379           BCLR    #7,D0
00A00832  6604                    1380           BNE.S   DEC537         END OF MOVE
00A00834  1AC0                    1381           MOVE.B  D0,(A5)+
00A00836  60F4                    1382           BRA     DEC535
00A00838  1AC0                    1383  DEC537   MOVE.B  D0,(A5)+
00A0083A                          1384  
00A0083A                          1385  * CALCULATE GOTO AND GO
00A0083A                          1386  *
00A0083A  7602                    1387           MOVEQ   #2,D3          D3= SIZE
00A0083C  41FA F7CA               1388           LEA     X(PC),A0
00A00840  D1C6                    1389           ADD.L   D6,A0
00A00842                          1390  
00A00842  7027                    1391           MOVEQ   #FOP,D0
00A00844  4DF3 0000               1392           LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
00A00848                          1393  
00A00848  3814                    1394           MOVE.W  (A4),D4        D4 = FIRST WORD
00A0084A                          1395  
00A0084A  1A3C 002C               1396           MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
00A0084E                          1397  
00A0084E  3E3C 01FD               1398           MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
00A00852                          1399  
00A00852  4ED0                    1400           JMP     (A0)
00A00854                          1401  *
00A00854                          1402  *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
00A00854                          1403  *  A5 = POINTER STORE OP-CODE
00A00854                          1404  *  A6 = POINTER STORE OPERAND
00A00854                          1405  *  D3 = SIZE = 2 BYTES
00A00854                          1406  *  D4 = FIRST WORD
00A00854                          1407  *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
00A00854                          1408  
00A00854  5483                    1409  COMMON4  ADDQ.L  #2,D3          SIZE = 4
00A00856                          1410  
00A00856  2C03                    1411  COMMON   MOVE.L  D3,D6          D6 = SIZE
00A00858  1CFC 0020               1412           MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
00A0085C                          1413  
00A0085C  2A4E                    1414           MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
00A0085E  700A                    1415           MOVEQ   #FDATA,D0
00A00860  4DF3 0000               1416           LEA.L   (A3,D0),A6
00A00864                          1417  
00A00864  301C                    1418  COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
00A00866  54A9 FFFC               1419           ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
00A0086A  6100 09B4               1420           BSR     PNT4HX         FORMAT DATA. (A6)+
00A0086E  5503                    1421           SUBQ.B  #2,D3
00A00870  66F2                    1422           BNE     COMMON35
00A00872                          1423  
00A00872  2C4D                    1424           MOVE.L  A5,A6          A6 = RESTORE END POINTER
00A00874                          1425  
00A00874  2A4B                    1426           MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
00A00876                          1427  
00A00876  2869 FFFC               1428           MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
00A0087A  4E59                    1429           UNLK    A1               TO A4 AND UNDO FRAME.
00A0087C                          1430  
00A0087C  4E75                    1431           RTS
00A0087E                          1432  
00A0087E                          1433  
00A0087E                          1434  FERROR   DS      0
00A0087E                          1435  * ILLEGAL INSTRUCTION
00A0087E                          1436  *
00A0087E  701F                    1437           MOVEQ   #FOC,D0
00A00880  4DF3 0000               1438           LEA.L   (A3,D0),A6
00A00884  4BFA 0018               1439           LEA     MSG111(PC),A5
00A00888  101D                    1440  FERROR35 MOVE.B  (A5)+,D0
00A0088A  0C00 0004               1441           CMPI.B  #EOT,D0
00A0088E  6704                    1442           BEQ.S   FERROR39
00A00890  1CC0                    1443           MOVE.B  D0,(A6)+
00A00892  60F4                    1444           BRA     FERROR35
00A00894                          1445  FERROR39 DS      0
00A00894                          1446  
00A00894  3014                    1447           MOVE.W  (A4),D0
00A00896  6100 0988               1448           BSR     PNT4HX
00A0089A                          1449  
00A0089A  7602                    1450           MOVEQ   #2,D3          SIZE
00A0089C                          1451  
00A0089C  60B8                    1452           BRA     COMMON
00A0089E                          1453  
00A0089E= 44 43 2E 57 20 20 ...   1454  MSG111   DC.B    'DC.W    $',EOT
00A008A8                          1455  
00A008A8                          1456  
00A008A8                          1457  
00A008A8= 4AFB                    1458  KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
00A008AA                          1459  KIEND    DS      0
00A008AA                          1460  
00A008AA                          1461  
00A008AA                          1462  *  \1   MASK
00A008AA                          1463  *  \2   OP-CODE PATTERN
00A008AA                          1464  *  \3   GOTO OFFSET
00A008AA                          1465  *  \4   INDEX TO OP-CODE
00A008AA                          1466  C68      MACRO
00A008AA                          1467           DC.W    $\1
00A008AA                          1468           DC.W    $\2
00A008AA                          1469           DC.B    (\3-X)>>2
00A008AA                          1470           DC.B    \4
00A008AA                          1471           ENDM
00A008AA                          1472  
00A008AA                          1473  TBL      DS      0
00A008AA                          1474m          C68     FEC0,E6C0,ISHIFT,56           RO
00A008B0                          1475m          C68     FEC0,E4C0,ISHIFT,57           ROX
00A008B6                          1476m          C68     FEC0,E2C0,ISHIFT,55           LS
00A008BC                          1477m          C68     FEC0,E0C0,ISHIFT,54           AS
00A008C2                          1478m          C68     F018,E018,ISHIFT,56           RO
00A008C8                          1479m          C68     F018,E010,ISHIFT,57           ROX
00A008CE                          1480m          C68     F018,E008,ISHIFT,55           LS
00A008D4                          1481m          C68     F018,E000,ISHIFT,54           AS
00A008DA                          1482m          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
00A008E0                          1483m          C68     F130,D100,FORM12,53           ADDX
00A008E6                          1484m          C68     F000,D000,FORM10EX,4            ADD
00A008EC                          1485m          C68     F1F8,C188,FORM9,50            EXG
00A008F2                          1486m          C68     F1F8,C148,FORM8,50            EXG
00A008F8                          1487m          C68     F1F8,C140,FORM7,50            EXG
00A008FE                          1488m          C68     F1F0,C100,FORM12,49           ABCD
00A00904                          1489m          C68     F1C0,C1C0,FORM6D,48           MULS
00A0090A                          1490m          C68     F1C0,C0C0,FORM6D,47           MULU
00A00910                          1491m          C68     F000,C000,FORM10,2            AND
00A00916                          1492m          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
00A0091C                          1493m          C68     F138,B108,FORM12A,46           CMPM
00A00922                          1494m          C68     F100,B100,FORM10,5            EOR
00A00928                          1495m          C68     F000,B000,FORM10EX,6            CMP
00A0092E                          1496m          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
00A00934                          1497m          C68     F130,9100,FORM12,45           SUBX
00A0093A                          1498m          C68     F000,9000,FORM10EX,44           SUB
00A00940                          1499m          C68     F1F0,8100,FORM12,43           SBCD
00A00946                          1500m          C68     F1C0,81C0,FORM6D,42           DIVS
00A0094C                          1501m          C68     F1C0,80C0,FORM6D,41           DIVU
00A00952                          1502m          C68     F000,8000,FORM10,40           OR
00A00958                          1503m          C68     F100,7000,IMOVEQ,39           MOVEQ
00A0095E                          1504m          C68     FF00,6100,IBSR,51             BSR
00A00964                          1505m          C68     FF00,6000,IBSR,65             BRA
00A0096A                          1506m          C68     F000,6000,ICC,38              B
00A00970                          1507m          C68     F0F8,50C8,IDBCC,37              DB
00A00976                          1508m          C68     F0C0,50C0,ISCC,36             S
00A0097C                          1509m          C68     F100,5100,IQUICK,35           SUBQ
00A00982                          1510m          C68     F100,5000,IQUICK,34           ADDQ
00A00988                          1511m          C68     F1C0,41C0,FORM6A,33           LEA
00A0098E                          1512m          C68     F1C0,4180,FORM6D,32           CHK
00A00994                          1513m          C68     FFC0,4EC0,FORM11SL,31         JMP
00A0099A                          1514m          C68     FFC0,4E80,FORM11SL,30         JSR
00A009A0                          1515m          C68     FFFF,4E77,SCOMMON,29           RTR
00A009A6                          1516m          C68     FFFF,4E76,SCOMMON,28           TRAPV
00A009AC                          1517m          C68     FFFF,4E75,SCOMMON,27           RTS
00A009B2                          1518m          C68     FFFF,4E73,SCOMMON,26           RTE
00A009B8                          1519m          C68     FFFF,4E72,ISTOP,25             STOP
00A009BE                          1520m          C68     FFFF,4E71,SCOMMON,24           NOP
00A009C4                          1521m          C68     FFFF,4E70,SCOMMON,23           RESET
00A009CA                          1522m          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
00A009D0                          1523m          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
00A009D6                          1524m          C68     FFF8,4E58,FORM5,22            UNLINK
00A009DC                          1525m          C68     FFF8,4E50,ILINK,21            LINK
00A009E2                          1526m          C68     FFF0,4E40,FORM4,20            TRAP
00A009E8                          1527m          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
00A009EE                          1528m          C68     FFC0,4AC0,FORM1A,19           TAS
00A009F4                          1529m          C68     FF00,4A00,FORM1,18            TST
00A009FA                          1530m          C68     FFF8,48C0,FORM3,17            EXT.L
00A00A00                          1531m          C68     FFF8,4880,FORM3,16            EXT.W
00A00A06                          1532m          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
00A00A0C                          1533m          C68     FFF8,4840,FORM3,14            SWAP
00A00A12                          1534m          C68     FFC0,4840,FORM11,13           PEA
00A00A18                          1535m          C68     FFC0,4800,FORM1A,12           NBCD
00A00A1E                          1536m          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
00A00A24                          1537m          C68     FF00,4600,FORM1,11            NOT
00A00A2A                          1538m          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
00A00A30                          1539m          C68     FF00,4400,FORM1,10            NEG
00A00A36                          1540m          C68     FF00,4200,FORM1,9             CLR
00A00A3C                          1541m          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
00A00A42                          1542m          C68     FF00,4000,FORM1,8             NEGX
00A00A48                          1543m          C68     F000,3000,IMOVE,59            MOVE.W
00A00A4E                          1544m          C68     F000,2000,IMOVE,60            MOVE.L
00A00A54                          1545m          C68     F000,1000,IMOVE,58            MOVE.B
00A00A5A                          1546m          C68     FF00,0C00,IMMED,6             CMP       #
00A00A60                          1547m          C68     FF00,0A00,IMMED,5             EOR       #
00A00A66                          1548m          C68     FF00,0600,IMMED,4             ADD       #
00A00A6C                          1549m          C68     FF00,0400,IMMED,3             SUB       #
00A00A72                          1550m          C68     FF00,0200,IMMED,2             AND       #
00A00A78                          1551m          C68     FF00,0000,IMMED,1             OR        #
00A00A7E                          1552m          C68     F138,0108,IMOVEP,0            MOVEP
00A00A84                          1553m          C68     FFC0,08C0,ISETS,64            BSET
00A00A8A                          1554m          C68     FFC0,0880,ISETS,63            BCLR
00A00A90                          1555m          C68     FFC0,0840,ISETS,62            BCHG
00A00A96                          1556m          C68     FFC0,0800,ISETS,61            BTST
00A00A9C                          1557m          C68     F1C0,01C0,ISETD,64            BSET
00A00AA2                          1558m          C68     F1C0,0180,ISETD,63            BCLR
00A00AA8                          1559m          C68     F1C0,0140,ISETD,62            BCHG
00A00AAE                          1560m          C68     F1C0,0100,ISETD,61            BTST
00A00AB4                          1561  TBLE     DS      0
00A00AB4                          1562  
00A00AB4                          1563  N68      MACRO
00A00AB4                          1564           DC.B    '\1',128+'\2'        \1\2
00A00AB4                          1565           ENDM
00A00AB4                          1566  
00A00AB4                          1567  OPCTBL   DS      0
00A00AB4                          1568m          N68     MOVE,P    0
00A00AB9                          1569m          N68     O,R       1
00A00ABB                          1570m          N68     AN,D      2
00A00ABE                          1571m          N68     SU,B      3
00A00AC1                          1572m          N68     AD,D      4
00A00AC4                          1573m          N68     EO,R      5
00A00AC7                          1574m          N68     CM,P      6
00A00ACA                          1575m          N68     MOV,E     7
00A00ACE                          1576m          N68     NEG,X     8
00A00AD2                          1577m          N68     CL,R      9
00A00AD5                          1578m          N68     NE,G      10
00A00AD8                          1579m          N68     NO,T      11
00A00ADB                          1580m          N68     NBC,D     12
00A00ADF                          1581m          N68     PEA.,L    13
00A00AE4                          1582m          N68     SWAP.,W   14
00A00AEA                          1583m          N68     MOVE,M    15
00A00AEF                          1584m          N68     EXT.,W    16
00A00AF4                          1585m          N68     EXT.,L    17
00A00AF9                          1586m          N68     TS,T      18
00A00AFC                          1587m          N68     TAS.,B    19
00A00B01                          1588m          N68     TRA,P     20
00A00B05                          1589m          N68     LIN,K     21
00A00B09                          1590m          N68     UNL,K     22
00A00B0D                          1591m          N68     RESE,T    23
00A00B12                          1592m          N68     NO,P      24
00A00B15                          1593m          N68     STO,P     25
00A00B19                          1594m          N68     RT,E      26
00A00B1C                          1595m          N68     RT,S      27
00A00B1F                          1596m          N68     TRAP,V    28
00A00B24                          1597m          N68     RT,R      29
00A00B27                          1598m          N68     JS,R      30
00A00B2A                          1599m          N68     JM,P      31
00A00B2D                          1600m          N68     CHK.,W    32
00A00B32                          1601m          N68     LEA.,L    33
00A00B37                          1602m          N68     ADD,Q     34
00A00B3B                          1603m          N68     SUB,Q     35
00A00B3F= D3                      1604           DC.B    128+'S'   36
00A00B40                          1605m          N68     D,B       37
00A00B42= C2                      1606           DC.B    128+'B'   38
00A00B43                          1607m          N68     MOVEQ.,L  .....39
00A00B4A                          1608m          N68     O,R       40
00A00B4C                          1609m          N68     DIVU.,W   41
00A00B52                          1610m          N68     DIVS.,W   42
00A00B58                          1611m          N68     SBC,D     43
00A00B5C                          1612m          N68     SU,B      44
00A00B5F                          1613m          N68     SUB,X     45
00A00B63                          1614m          N68     CMP,M     46
00A00B67                          1615m          N68     MULU.,W   47
00A00B6D                          1616m          N68     MULS.,W   48
00A00B73                          1617m          N68     ABC,D    49
00A00B77                          1618m          N68     EX,G      50
00A00B7A                          1619m          N68     BS,R      .....51
00A00B7D                          1620m          N68     NUL,L     .....52
00A00B81                          1621m          N68     ADD,X     53
00A00B85                          1622m          N68     A,S       54
00A00B87                          1623m          N68     L,S       55
00A00B89                          1624m          N68     R,O       56
00A00B8B                          1625m          N68     RO,X      57
00A00B8E                          1626m          N68     MOVE.,B   58
00A00B94                          1627m          N68     MOVE.,W   59
00A00B9A                          1628m          N68     MOVE.,L   60
00A00BA0                          1629m          N68     BTS,T     61
00A00BA4                          1630m          N68     BCH,G     62
00A00BA8                          1631m          N68     BCL,R     63
00A00BAC                          1632m          N68     BSE,T     64
00A00BB0                          1633m          N68     BR,A      65
00A00BB3                          1634  
00A00BB3= 00                      1635           DC.B    0              PAD BYTE
00A00BB4                          1636  
00A00BB4                          1637  
00A00BB4                          1638  
00A00BB4                          1639  ;   ORG $2000
00A00BB4                          1640  
00A00BB4  46FC 2700               1641  MAIN MOVE.W #INT_OFF,SR  ; INTERRUPT OFF, SUPERVISOR MODE SET
00A00BB8                          1642  
00A00BB8                          1643  ;      MOVE.L #RAMBASE+USER_STACK,SP ; INIT TOP OF USER STACK
00A00BB8                          1644  ;      movea.l #DOUT,a1
00A00BB8                          1645  ;      move.b #$FF,d2    ; with cpld
00A00BB8                          1646  ;      MOVE.B D2,(A1)    ; OFF LEDS
00A00BB8                          1647  
00A00BB8  6100 015E               1648        BSR INIT_ACIA         ; ACIA init
00A00BBC                          1649  
00A00BBC  6100 0AFA               1650        BSR VECINIT           ; EXCEPTION VECTOR init
00A00BC0                          1651  
00A00BC0  6100 01D0               1652        BSR SCROLL            ; NEW LINE
00A00BC4                          1653  
00A00BC4  6100 08CA               1654        BSR CLEAR_MON_RAM     ; Initialize 1Kbyte from RAMBASE with 0.
00A00BC8                          1655  
00A00BC8  47F9 00A01783           1656        LEA.L TITLE1.L,A3     ; print START MESSAGE
00A00BCE  6100 019A               1657        BSR PSTR
00A00BD2                          1658  
00A00BD2  2C79 000000C0           1659        MOVEA.L RAMBASE.L,A6  ; Initialize Monitor work area 
00A00BD8  2D7C 00000000 00A6      1660        MOVE.L #RAM,POINTER_NOW(A6)
00A00BE0  2D7C 00000400 00F0      1661        MOVE.L #RAM+$400,USER_PC(A6)    ; INIT USER PC TO START OF RAM
00A00BE8                          1662  
00A00BE8  2D7C 0000FFF4 00E6      1663        MOVE.L #SUPER_STACK+USER_STACK,USER_USP(A6) ; INIT USER STACK
00A00BF0  40C0                    1664        MOVE.W SR,D0
00A00BF2  3D40 00EA               1665        MOVE.W D0,USER_SR(A6) 
00A00BF6                          1666  
00A00BF6  42AE 0024               1667        CLR.L FLAG(A6)         ; CLEAR SYSTEM MONITOR FLAG
00A00BFA  46FC 2000               1668        MOVE.W #INT_ON,SR       ; ON INTERRUPT, SUPERVISOR MODE SET
00A00BFE                          1669  
00A00BFE  6100 019E               1670  loop  BSR SEND_PROMPT
00A00C02  6100 0152               1671        BSR CIN
00A00C06  B03C 0040               1672        CMP.B #$40,D0
00A00C0A  6D04                    1673        blt.S NO_CHANGE
00A00C0C                          1674  
00A00C0C  C03C 00DF               1675        AND.B #%11011111,D0
00A00C10                          1676  
00A00C10                          1677  NO_CHANGE
00A00C10                          1678  
00A00C10  B03C 004C               1679        CMP.B #'L',D0
00A00C14  6600 0008               1680        BNE NEXT1
00A00C18  6100 0202               1681        BSR READ_S_REC
00A00C1C  60E0                    1682        BRA LOOP
00A00C1E                          1683  
00A00C1E  B03C 0053               1684  NEXT1 CMP.B #'S',D0       
00A00C22  6600 0008               1685        BNE NEXT2
00A00C26  6100 09EC               1686        BSR VIEW_USP      ; VIEW USER STACK
00A00C2A  60D2                    1687        BRA LOOP
00A00C2C                          1688  
00A00C2C                          1689  
00A00C2C  B03C 0048               1690  NEXT2 CMP.B #'H',D0
00A00C30  6600 0008               1691        BNE NEXT3
00A00C34  6100 0330               1692        BSR HEX_DUMP
00A00C38  60C4                    1693        BRA LOOP
00A00C3A                          1694  
00A00C3A  B03C 004E               1695  NEXT3 CMP.B #'N',D0
00A00C3E  6600 0008               1696        BNE NEXT4
00A00C42  6100 0396               1697        BSR NEW_POINTER
00A00C46  60B6                    1698        BRA LOOP
00A00C48                          1699  
00A00C48  B03C 004A               1700  NEXT4 CMP.B #'J',D0
00A00C4C  6600 0008               1701        BNE NEXT5
00A00C50  6100 0796               1702        BSR JUMP
00A00C54  60A8                    1703        BRA LOOP
00A00C56                          1704  
00A00C56  B03C 005A               1705  NEXT5 CMP.B #'Z',D0
00A00C5A  6600 0008               1706        BNE NEXT6
00A00C5E  6100 095C               1707        BSR UPLOAD         ; PRINT_DEBUG <------ USE Z FOR UPLOAD BINARY IMAGE
00A00C62  609A                    1708        BRA LOOP
00A00C64                          1709  
00A00C64                          1710  
00A00C64  B03C 0046               1711  NEXT6 CMP.B #'F',D0
00A00C68  6600 0008               1712        BNE NEXT7
00A00C6C  6100 0408               1713        BSR FILL_MEMORY
00A00C70  608C                    1714        BRA LOOP
00A00C72                          1715  
00A00C72  B03C 0045               1716  NEXT7 CMP.B #'E',D0
00A00C76  6600 000A               1717        BNE NEXT8
00A00C7A  6100 046E               1718        BSR EDIT_MEMORY
00A00C7E  6000 FF7E               1719        BRA LOOP
00A00C82                          1720  
00A00C82  B03C 0043               1721  NEXT8 CMP.B #'C',D0
00A00C86  6600 000A               1722        BNE NEXT9
00A00C8A  6100 0424               1723        BSR CLEAR_MEMORY
00A00C8E  6000 FF6E               1724        BRA LOOP
00A00C92                          1725  
00A00C92  B03C 0051               1726  NEXT9 CMP.B #'Q',D0
00A00C96  6600 000A               1727        BNE NEXT10
00A00C9A  6100 0382               1728        BSR QUICK_HOME
00A00C9E  6000 FF5E               1729        BRA LOOP
00A00CA2                          1730  
00A00CA2  B03C 003F               1731  NEXT10 CMP.B #'?',D0
00A00CA6  6608                    1732         BNE.S NEXT11
00A00CA8  6100 04CE               1733         BSR HELP
00A00CAC  6000 FF50               1734         BRA LOOP
00A00CB0                          1735  
00A00CB0                          1736  
00A00CB0  B03C 0052               1737  NEXT11 CMP.B #'R',D0
00A00CB4  6608                    1738        BNE.S NEXT12
00A00CB6  6100 05EA               1739        BSR DISPLAY_REG
00A00CBA  6000 FF42               1740        BRA LOOP
00A00CBE                          1741  
00A00CBE  B03C 002E               1742  NEXT12 CMP.B #'.',D0
00A00CC2  6608                    1743        BNE.S NEXT13
00A00CC4  6100 07DE               1744        BSR MODIFY_REG
00A00CC8  6000 FF34               1745        BRA LOOP
00A00CCC                          1746  
00A00CCC  B03C 0044               1747  NEXT13 CMP.B #'D',D0
00A00CD0  6608                    1748         BNE.S NEXT14
00A00CD2  6100 0890               1749         BSR DISASSEMBLE
00A00CD6  6000 FF26               1750         BRA LOOP
00A00CDA                          1751  
00A00CDA  B03C 0041               1752  NEXT14 CMP.B #'A',D0
00A00CDE  6608                    1753         BNE.S NEXT15
00A00CE0  6100 0926               1754         BSR ABOUT
00A00CE4  6000 FF18               1755         BRA LOOP
00A00CE8                          1756  
00A00CE8                          1757  
00A00CE8  B03C 0054               1758  NEXT15 CMP.B #'T',D0
00A00CEC  6608                    1759         BNE.S NEXT16
00A00CEE  6100 075C               1760         BSR TRACE_JUMP
00A00CF2  6000 FF0A               1761         BRA LOOP
00A00CF6                          1762  
00A00CF6  B03C 0047               1763  NEXT16 CMP.B #'G',D0
00A00CFA  6606                    1764         BNE.S NEXT17
00A00CFC  4EF9 00102000           1765         JMP $102000.L       ; USE G COMMAND FOR SIMPLE JUMP TO RAM
00A00D02                          1766  
00A00D02                          1767  
00A00D02  B03C 0042               1768  NEXT17 CMP.B #'B',D0
00A00D06  6604                    1769         BNE.S NEXT18
00A00D08  6000 0976               1770         BRA BOOT_RAM
00A00D0C                          1771  
00A00D0C  6100 006A               1772  NEXT18  BSR NEW_LINE
00A00D10  6100 00A6               1773        BSR SEND_TITLE
00A00D14  6000 FEE8               1774        bra loop
00A00D18                          1775  
00A00D18                          1776  ; CONSOLE IS ACIA1
00A00D18                          1777  
00A00D18                 TRUE     1778        IFEQ  EASY68K_SIM
00A00D18                          1779          
00A00D18                          1780  ; INIT ACIA
00A00D18                          1781  
00A00D18  13FC 0003 00F00009      1782  INIT_ACIA  MOVE.B #3,ACIAC.L   ; RESET ACIA
00A00D20  303C 2710               1783             MOVE.W #10000,D0
00A00D24  51C8 FFFE               1784             DBRA  D0,*
00A00D28  13FC 0015 00F00009      1785             MOVE.B #$15,ACIAC.L   ; rts enabled 9600 8ne
00A00D30  4E75                    1786             RTS
00A00D32                          1787  
00A00D32  0839 0001 00F00009      1788  COUT      BTST.B #TDRE,ACIAC.L
00A00D3A  67F6                    1789            BEQ.S  COUT
00A00D3C  13C0 00F0000B           1790            MOVE.B D0,ACIAD.L
00A00D42  4E75                    1791            RTS
00A00D44                          1792  
00A00D44                          1793  
00A00D44  0839 0000 00F00009      1794  CINS      BTST.B #RDRF,ACIAC.L
00A00D4C  67F6                    1795            BEQ.S  CINS
00A00D4E  1039 00F0000B           1796            MOVE.B ACIAD.L,D0
00A00D54  4E75                    1797            RTS
00A00D56                          1798  
00A00D56                          1799  
00A00D56  0839 0000 00F00009      1800  CIN      BTST.B #RDRF,ACIAC.L
00A00D5E  67F6                    1801           BEQ.S  CIN
00A00D60  1039 00F0000B           1802           MOVE.B ACIAD.L,D0
00A00D66  61CA                    1803           BSR COUT
00A00D68  4E75                    1804           RTS
00A00D6A                          1805  
00A00D6A                          1806      ENDC
00A00D6A                          1807  
00A00D6A                          1808  ; CONSOLE IS EASy68K Sim68K I/O
00A00D6A                          1809  
00A00D6A                 FALSE    1810      IFNE    EASY68K_SIM
00A00D6A                          1811             ;D1.B = 0 to turn off keyboard echo.
00A00D6A                          1812             ;D1.B = non zero to enable it (default).
00A00D6A                          1813             ;Echo is restored on 'Reset' or when a new file is loaded.
00A00D6A                          1814           ENDC
00A00D6A                          1815  
00A00D6A                          1816  
00A00D6A                          1817  ; A3 POINTED TO FIRST BYTE
00A00D6A                          1818  ; END WITH 0
00A00D6A                          1819  
00A00D6A  101B                    1820  PSTR     MOVE.B (A3)+,D0
00A00D6C  B03C 0000               1821           CMP.B  #0,D0
00A00D70  6704                    1822           BEQ.S PSTR1
00A00D72  61BE                    1823           BSR COUT
00A00D74  60F4                    1824           BRA.S PSTR
00A00D76                          1825  
00A00D76  4E75                    1826  PSTR1    RTS
00A00D78                          1827  
00A00D78                          1828  ; NEW LINE
00A00D78                          1829  
00A00D78  2F00                    1830  NEW_LINE MOVE.L D0,-(SP)
00A00D7A  103C 000D               1831           MOVE.B #CR,D0
00A00D7E  61B2                    1832           BSR COUT
00A00D80  103C 000A               1833           MOVE.B #LF,D0
00A00D84  61AC                    1834           BSR COUT
00A00D86  201F                    1835           MOVE.L (SP)+,D0
00A00D88  4E75                    1836           RTS
00A00D8A                          1837  
00A00D8A  103C 0020               1838  SPACE    MOVE.B #SP,D0
00A00D8E  61A2                    1839           BSR COUT
00A00D90  4E75                    1840           RTS
00A00D92                          1841  
00A00D92  323C 0019               1842  SCROLL   MOVE.W #25,D1
00A00D96  61E0                    1843  SCROLL1  BSR NEW_LINE
00A00D98  51C9 FFFC               1844           DBF D1,SCROLL1
00A00D9C  4E75                    1845           RTS
00A00D9E                          1846  
00A00D9E                          1847  SEND_PROMPT
00A00D9E  2C79 000000C0           1848          MOVEA.L RAMBASE.L,A6
00A00DA4  61D2                    1849          BSR NEW_LINE
00A00DA6  202E 00A6               1850          MOVE.L POINTER_NOW(A6),D0
00A00DAA  6100 01A6               1851          BSR OUT6X
00A00DAE  47F9 00A017B1           1852          LEA.L PROMPT.L,A3
00A00DB4  61B4                    1853          BSR PSTR
00A00DB6  4E75                    1854          RTS
00A00DB8                          1855  
00A00DB8  47F9 00A01768           1856  SEND_TITLE LEA.L TITLE.L,A3
00A00DBE  61AA                    1857             BSR PSTR
00A00DC0  4E75                    1858             RTS
00A00DC2                          1859  
00A00DC2                          1860  ; S19 LOADER
00A00DC2                          1861  
00A00DC2                          1862  ; CONVERT ASCII LETTER TO 8-BIT VALUE
00A00DC2                          1863  
00A00DC2  0400 0030               1864  TO_HEX SUBI.B #$30,D0
00A00DC6  0C00 000A               1865         CMPI.B #$A,D0
00A00DCA  6B00 0008               1866         BMI  ZERO_TO_NINE
00A00DCE  C03C 00DF               1867         AND.B #%11011111,D0
00A00DD2  5F00                    1868         SUBI.B #7,D0
00A00DD4                          1869  
00A00DD4                          1870  ZERO_TO_NINE
00A00DD4                          1871  
00A00DD4  1200                    1872         MOVE.B D0,D1
00A00DD6                          1873  
00A00DD6  4E75                    1874          RTS
00A00DD8                          1875  
00A00DD8                          1876  ; READ TWO BYTES ASCII AND CONVERT TO SINGLE BYTE DATA
00A00DD8                          1877  
00A00DD8                          1878  ; ENTRY: D0 FROM CIN 
00A00DD8                          1879  ; EXIT: D1 8-BIT VALUE 
00A00DD8                          1880  ;       
00A00DD8                          1881  
00A00DD8                          1882  
00A00DD8  6100 FF7C               1883  GET_HEX  BSR CIN
00A00DDC                          1884  
00A00DDC  B03C 0020               1885           CMP.B #' ',D0         ; IF BIT_ESC PRESSED
00A00DE0  6608                    1886           BNE.S GET_HEX1
00A00DE2  08EE 0000 0024          1887           BSET.B #BIT_ESC,FLAG(A6)
00A00DE8  4E75                    1888           RTS
00A00DEA                          1889  
00A00DEA                          1890  
00A00DEA  B03C 000D               1891  GET_HEX1 CMP.B #CR,D0
00A00DEE  6608                    1892           BNE.S GET_HEX2
00A00DF0  08EE 0001 0024          1893           BSET.B #1,FLAG(A6)       ; ENTER PRESSED
00A00DF6  4E75                    1894           RTS
00A00DF8                          1895  
00A00DF8                          1896  
00A00DF8  61C8                    1897  GET_HEX2 BSR TO_HEX
00A00DFA  E919                    1898           ROL.B #4,D1
00A00DFC  1401                    1899           MOVE.B D1,D2
00A00DFE  6100 FF56               1900           BSR CIN
00A00E02  61BE                    1901           BSR TO_HEX
00A00E04  D202                    1902           ADD.B D2,D1
00A00E06  4E75                    1903           RTS
00A00E08                          1904  
00A00E08                          1905  
00A00E08  6100 FF3A               1906  GET_HEXS   BSR CINS
00A00E0C  61B4                    1907           BSR TO_HEX
00A00E0E  E919                    1908           ROL.B #4,D1
00A00E10  1401                    1909           MOVE.B D1,D2
00A00E12  6100 FF30               1910           BSR CINS
00A00E16  61AA                    1911           BSR TO_HEX
00A00E18  D202                    1912           ADD.B D2,D1
00A00E1A  4E75                    1913           RTS
00A00E1C                          1914  
00A00E1C                          1915  ;
00A00E1C                          1916  ;S214000400227C00400001143C00006100002C128297
00A00E1C                          1917  ;S804000000FB
00A00E1C                          1918  
00A00E1C                          1919  ; READ S-RECORD
00A00E1C                          1920  ; D5 = BYTE CHECK SUM FOR EACH RECORD
00A00E1C                          1921  ; D4 = NUMBER OF BYTE RECEIVED
00A00E1C                          1922  
00A00E1C  47F9 00A018D5           1923  READ_S_REC      LEA.L LOAD.L,A3
00A00E22  6100 FF46               1924                  BSR PSTR
00A00E26  4284                    1925                  CLR.L D4     ; CLEAR NUMBER OF BYTE 
00A00E28  4285                    1926                  CLR.L D5     ; CLEAR CHECK SUM AND ERROR BYTE
00A00E2A                          1927  
00A00E2A  6100 FF18               1928  READ_S_REC1     BSR CINS
00A00E2E  B03C 0053               1929                  CMP.B #'S',D0
00A00E32  6602                    1930                  BNE.S CHECK_ESC
00A00E34  6008                    1931                  BRA.S GET_TYPE
00A00E36                          1932  
00A00E36                          1933  
00A00E36  B03C 001B               1934  CHECK_ESC       CMP.B #ESC,D0
00A00E3A  66EE                    1935                  BNE.S READ_S_REC1
00A00E3C                          1936  
00A00E3C  4E75                    1937                  RTS
00A00E3E                          1938  
00A00E3E                          1939  
00A00E3E  6100 FF04               1940  GET_TYPE        BSR CINS
00A00E42  B03C 0038               1941                  CMP.B #'8',D0
00A00E46  6600 003A               1942                  BNE CHECK_START
00A00E4A                          1943  
00A00E4A  6100 FEF8               1944  WAIT_CR         BSR CINS
00A00E4E  B03C 000D               1945                  CMP.B #CR,D0
00A00E52  66F6                    1946                  BNE.S WAIT_CR
00A00E54                          1947  
00A00E54  6100 FF22               1948                  BSR NEW_LINE
00A00E58  6100 FF1E               1949                  BSR NEW_LINE
00A00E5C  2004                    1950                  MOVE.L D4,D0
00A00E5E  6100 0324               1951                  BSR PRINT_DEC     ; SHOW NUMBER OF BYTE RECEIVED
00A00E62  267C 00A0190D           1952                  MOVEA.L #NUMBER,A3
00A00E68  6100 FF00               1953                  BSR PSTR
00A00E6C                          1954  
00A00E6C  4845                    1955                  SWAP.W D5
00A00E6E  4280                    1956                  CLR.L D0
00A00E70  3005                    1957                  MOVE.W D5,D0
00A00E72  6100 0310               1958                  BSR PRINT_DEC
00A00E76  267C 00A0191D           1959                  MOVEA.L #ERROR,A3
00A00E7C  6100 FEEC               1960                  BSR PSTR
00A00E80  4E75                    1961                  RTS
00A00E82                          1962  
00A00E82                          1963  
00A00E82  B03C 0032               1964  CHECK_START     CMP.B #'2',D0   ; CHECK S2 RECORD
00A00E86  673C                    1965                  BEQ.S READ_S2
00A00E88                          1966  
00A00E88  B03C 0031               1967                  CMP.B #'1',D0   ; CHECK S1 RECORD
00A00E8C  6716                    1968                  BEQ.S READ_S1
00A00E8E                          1969  
00A00E8E  B03C 0030               1970                  CMP.B #'0',D0   ; CHECK S0 RECORD
00A00E92  6796                    1971                  BEQ.S READ_S_REC1   ; SKIP DATA
00A00E94  6094                    1972                  BRA.S READ_S_REC1   ; SKIP DATA
00A00E96                          1973  
00A00E96                          1974  
00A00E96  4245                    1975  START_FOUND     CLR.W D5          ; CLEAR BYTE CHECK SUM
00A00E98                          1976  
00A00E98  6100 FF6E               1977                  BSR GET_HEXS
00A00E9C  4287                    1978                  CLR.L D7
00A00E9E  1E01                    1979                  MOVE.B D1,D7       ; NUMBER OF BYTE SAVED TO D7
00A00EA0                          1980                  ;SUBQ.B #5,D7
00A00EA0                          1981                  ;MOVE.L D7,D0
00A00EA0                          1982  
00A00EA0  DA01                    1983                  ADD.B  D1,D5       ; ADD CHECK SUM
00A00EA2  4E75                    1984          RTS
00A00EA4                          1985  
00A00EA4                          1986  ;S1 (2 BYTE ADDRESS)
00A00EA4  61F0                    1987  READ_S1     BSR START_FOUND
00A00EA6                          1988  
00A00EA6  5907                    1989                SUBQ.B #4,D7
00A00EA8  2007                    1990                MOVE.L D7,D0
00A00EAA                          1991  
00A00EAA                          1992  ; GET 16-BIT ADDRESS, SAVE TO A6
00A00EAA                          1993  
00A00EAA  4286                    1994                CLR.L D6
00A00EAC  6100 FF5A               1995                BSR GET_HEXS
00A00EB0  1C01                    1996                MOVE.B D1,D6
00A00EB2  DA01                    1997                ADD.B  D1,D5          ; ADD CHECK SUM
00A00EB4                          1998  
00A00EB4  E19E                    1999                ROL.L #8,D6
00A00EB6  6100 FF50               2000                BSR GET_HEXS
00A00EBA  1C01                    2001                MOVE.B D1,D6
00A00EBC  DA01                    2002                ADD.B D1,D5           ; ADD CHECK SUM
00A00EBE                          2003  
00A00EBE  2C46                    2004                MOVEA.L D6,A6
00A00EC0  6000 0028               2005                BRA READ_DATA           
00A00EC4                          2006  
00A00EC4                          2007  
00A00EC4                          2008  ;S2 (3 BYTE ADDRESS)
00A00EC4  61D0                    2009  READ_S2       BSR START_FOUND                
00A00EC6                          2010  
00A00EC6  5B07                    2011                SUBQ.B #5,D7
00A00EC8  2007                    2012                MOVE.L D7,D0
00A00ECA                          2013  
00A00ECA                          2014  ; GET 24-BIT ADDRESS, SAVE TO A6
00A00ECA                          2015  
00A00ECA  4286                    2016                CLR.L D6
00A00ECC  6100 FF3A               2017                BSR GET_HEXS
00A00ED0  1C01                    2018                MOVE.B D1,D6
00A00ED2  DA01                    2019                ADD.B  D1,D5
00A00ED4                          2020  
00A00ED4  E19E                    2021                ROL.L #8,D6
00A00ED6  6100 FF30               2022                BSR GET_HEXS
00A00EDA  1C01                    2023                MOVE.B D1,D6
00A00EDC  DA01                    2024                ADD.B D1,D5
00A00EDE                          2025  
00A00EDE  E19E                    2026                ROL.L #8,D6
00A00EE0                          2027  
00A00EE0  6100 FF26               2028                BSR GET_HEXS
00A00EE4  1C01                    2029                MOVE.B D1,D6
00A00EE6  DA01                    2030                ADD.B D1,D5
00A00EE8                          2031  
00A00EE8  2C46                    2032                MOVEA.L D6,A6
00A00EEA                          2033                           
00A00EEA  6100 FF1C               2034  READ_DATA     BSR GET_HEXS
00A00EEE  DA01                    2035                ADD.B  D1,D5      ; ADD CHECK SUM
00A00EF0  1CC1                    2036                MOVE.B D1,(A6)+
00A00EF2                          2037  
00A00EF2  4601                    2038                not.b d1          ; complement before sending
00A00EF4                          2039  
00A00EF4                          2040                ;MOVE.B D1,DOUT.L  ; INDICATOR WHILE LOADING
00A00EF4                          2041  
00A00EF4  5284                    2042                ADDQ.L #1,D4      ; BUMP NUMBER OF BYTE RECEIVED
00A00EF6  51CF FFF2               2043                DBF D7,READ_DATA
00A00EFA                          2044  
00A00EFA  4605                    2045                NOT.B D5          ; ONE'S COMPLEMENT OF BYTE CHECK SUM         
00A00EFC                          2046  
00A00EFC  6100 FF0A               2047                BSR GET_HEXS      ; GET BYTE CHECK SUM
00A00F00                          2048  
00A00F00  BA01                    2049                CMP.B D1,D5       ; COMPARE CHECK SUM
00A00F02  670C                    2050                BEQ.S NO_ERROR
00A00F04                          2051  
00A00F04  0685 00010000           2052                ADD.L #$10000,D5  ; ADD 1 TO UPPER WORD
00A00F0A  103C 0058               2053                MOVE.B #'X',D0    ; IF NOT EQUAL SEND 'X' FOR ERROR
00A00F0E  6004                    2054                BRA.S CHECKSUM_ERROR
00A00F10                          2055  
00A00F10  103C 005F               2056  NO_ERROR      MOVE.B #'_',D0      ; '_' NO ERROR RECORD
00A00F14  6100 FE1C               2057  CHECKSUM_ERROR BSR COUT
00A00F18                          2058  
00A00F18  6000 FF10               2059                BRA READ_S_REC1
00A00F1C                          2060  
00A00F1C                          2061  
00A00F1C  6100 FE38               2062  LOOP_BACK     BSR CIN
00A00F20  B03C 000D               2063                CMP.B #13,D0
00A00F24  66F6                    2064                BNE LOOP_BACK
00A00F26  4E75                    2065                RTS
00A00F28                          2066  
00A00F28                          2067  
00A00F28                          2068  
00A00F28                          2069  ; PRINT HEX 
00A00F28                          2070  ; OUT1X = PRINT ONE HEX
00A00F28                          2071  ; OUT2X = PRINT TWO
00A00F28                          2072  ; OUT4X = PRINT FOUR
00A00F28                          2073  ; OUT8X = PRINT EIGHT
00A00F28                          2074  ; ENTRY: D0
00A00F28                          2075  
00A00F28  1F00                    2076  OUT1X        MOVE.B D0,-(SP)    ;SAVE D0
00A00F2A  C03C 000F               2077               AND.B #$F,D0
00A00F2E  0600 0030               2078               ADD.B #'0',D0
00A00F32  B03C 0039               2079               CMP.B #'9',D0
00A00F36  6302                    2080               BLS.S   OUT1X1
00A00F38  5E00                    2081               ADD.B #7,D0
00A00F3A  6100 FDF6               2082  OUT1X1       BSR COUT
00A00F3E  101F                    2083               MOVE.B (SP)+,D0    ;RESTORE D0
00A00F40  4E75                    2084               RTS
00A00F42                          2085  
00A00F42  E818                    2086  OUT2X        ROR.B #4,D0
00A00F44  61E2                    2087               BSR.S OUT1X
00A00F46  E918                    2088               ROL.B #4,D0
00A00F48  60DE                    2089               BRA OUT1X
00A00F4A                          2090  
00A00F4A  E058                    2091  OUT4X        ROR.W #8,D0
00A00F4C  61F4                    2092               BSR.S OUT2X
00A00F4E  E158                    2093               ROL.W #8,D0
00A00F50  60F0                    2094               BRA.S OUT2X
00A00F52                          2095  
00A00F52  4840                    2096  OUT6X        SWAP.W D0        ; OUT 24-BIT HEX NUMBER
00A00F54  61EC                    2097               BSR.S OUT2X
00A00F56  4840                    2098               SWAP.W D0
00A00F58  60F0                    2099               BRA.S OUT4X
00A00F5A                          2100  
00A00F5A  4840                    2101  OUT8X        SWAP.W D0        ; OUT 32-BIT HEX NUMBER
00A00F5C  61EC                    2102               BSR.S  OUT4X
00A00F5E  4840                    2103               SWAP.W D0
00A00F60  60E8                    2104               BRA.S  OUT4X
00A00F62                          2105  
00A00F62                          2106  
00A00F62                          2107  ; PRINT D0 CONTENT
00A00F62                          2108  
00A00F62  61F6                    2109  PRINT_D0  BSR.S OUT8X
00A00F64  4E75                    2110            RTS
00A00F66                          2111  
00A00F66                          2112  ; HEX DUMP
00A00F66                          2113  ; DUMP MEMORY CONTENT
00A00F66                          2114  ; A3: START ADDRESS
00A00F66                          2115  
00A00F66  47F9 00A0188C           2116  HEX_DUMP    LEA.L HEX.L,A3
00A00F6C  6100 FDFC               2117              BSR PSTR
00A00F70                          2118  
00A00F70  2C79 000000C0           2119              MOVEA.L RAMBASE.L,A6
00A00F76  266E 00A6               2120              MOVEA.L POINTER_NOW(A6),A3
00A00F7A  3C3C 000F               2121              MOVE.W #15,D6
00A00F7E  6100 FDF8               2122              BSR NEW_LINE
00A00F82                          2123  
00A00F82  6100 FDF4               2124  HEX_DUMP2   BSR NEW_LINE
00A00F86  200B                    2125              MOVE.L A3,D0
00A00F88  61C8                    2126              BSR OUT6X
00A00F8A  6100 FDFE               2127              BSR SPACE
00A00F8E  6100 FDFA               2128              BSR SPACE
00A00F92                          2129  
00A00F92  3E3C 000F               2130              MOVE.W #15,D7
00A00F96                          2131  
00A00F96  101B                    2132  HEX_DUMP1   MOVE.B (A3)+,D0
00A00F98  61A8                    2133              BSR OUT2X
00A00F9A  6100 FDEE               2134              BSR SPACE
00A00F9E                          2135  
00A00F9E  51CF FFF6               2136              DBF D7,HEX_DUMP1
00A00FA2                          2137  
00A00FA2  6100 FDE6               2138              BSR SPACE
00A00FA6  97FC 00000010           2139              SUBA.L #16,A3       ; GET BACK TO BEGINING 
00A00FAC  3E3C 000F               2140              MOVE.W #15,D7
00A00FB0                          2141  
00A00FB0  101B                    2142  HEX_DUMP6   MOVE.B (A3)+,D0
00A00FB2                          2143  
00A00FB2  B03C 0020               2144              CMP.B #$20,D0
00A00FB6  6C06                    2145              BGE.S HEX_DUMP3
00A00FB8                          2146  
00A00FB8  103C 002E               2147  HEX_DUMP4   MOVE.B #'.',D0
00A00FBC  6006                    2148              BRA.S  HEX_DUMP5
00A00FBE                          2149  
00A00FBE  B03C 007F               2150  HEX_DUMP3   CMP.B #$7F,D0
00A00FC2  6EF4                    2151              BGT.S HEX_DUMP4
00A00FC4                          2152  
00A00FC4  6100 FD6C               2153  HEX_DUMP5   BSR COUT
00A00FC8  51CF FFE6               2154              DBF D7,HEX_DUMP6
00A00FCC                          2155  
00A00FCC                          2156  
00A00FCC  51CE FFB4               2157              DBF D6,HEX_DUMP2
00A00FD0                          2158  
00A00FD0  2D4B 00A6               2159              MOVE.L A3,POINTER_NOW(A6)   ; UPDATE POINTER_NOW
00A00FD4  6100 FDA2               2160              BSR NEW_LINE
00A00FD8  4E75                    2161              RTS
00A00FDA                          2162  
00A00FDA                          2163  
00A00FDA                          2164  ; NEW POINTER
00A00FDA                          2165  ; CHANGE 24-BIT ADDRESS-> POINTER_NOW
00A00FDA                          2166  
00A00FDA  47F9 00A01853           2167  NEW_POINTER   LEA.L NEW.L,A3
00A00FE0  6100 FD88               2168                BSR PSTR
00A00FE4                          2169  
00A00FE4  6100 FDB8               2170                BSR SEND_PROMPT
00A00FE8                          2171  
00A00FE8  2C79 000000C0           2172                MOVEA.L RAMBASE.L,A6
00A00FEE  4286                    2173                CLR.L D6
00A00FF0  6100 FDE6               2174                BSR GET_HEX
00A00FF4  1C01                    2175                MOVE.B D1,D6
00A00FF6  E19E                    2176                ROL.L #8,D6
00A00FF8  6100 FDDE               2177                BSR GET_HEX
00A00FFC  1C01                    2178                MOVE.B D1,D6
00A00FFE  E19E                    2179                ROL.L #8,D6
00A01000  6100 FDD6               2180                BSR GET_HEX
00A01004  1C01                    2181                MOVE.B D1,D6
00A01006                          2182  
00A01006  0886 0000               2183                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00A0100A                          2184  
00A0100A  2D46 00A6               2185                MOVE.L D6,POINTER_NOW(A6)
00A0100E  4E75                    2186                RTS
00A01010                          2187  
00A01010  6100 FD66               2188  PRINT_DEBUG   BSR NEW_LINE
00A01014  202E 0020               2189                MOVE.L DEBUG(A6),D0
00A01018  6100 FF40               2190                BSR OUT8X
00A0101C  4E75                    2191                RTS
00A0101E                          2192  
00A0101E  47F9 00A01865           2193  QUICK_HOME    LEA.L QUICK.L,A3
00A01024  6100 FD44               2194                BSR PSTR
00A01028  2C79 000000C0           2195                MOVEA.L RAMBASE.L,A6
00A0102E  2D7C 00000000 00A6      2196                MOVE.L #RAM,POINTER_NOW(A6)
00A01036  4E75                    2197                RTS  
00A01038                          2198  
00A01038                          2199  ; TEST RAM
00A01038                          2200  
00A01038                          2201  ; GET 32BIT DATA
00A01038                          2202  ; EXIT: D6 CONTAINS 32-BIT ADDRESS
00A01038                          2203  
00A01038  4286                    2204  GET_32BIT     CLR.L D6
00A0103A  6100 FD9C               2205                BSR GET_HEX
00A0103E  1C01                    2206                MOVE.B D1,D6
00A01040  E19E                    2207                ROL.L #8,D6
00A01042  6100 FD94               2208                BSR GET_HEX
00A01046  1C01                    2209                MOVE.B D1,D6
00A01048  E19E                    2210                ROL.L #8,D6
00A0104A  6100 FD8C               2211                BSR GET_HEX
00A0104E  1C01                    2212                MOVE.B D1,D6
00A01050  E19E                    2213                ROL.L #8,D6
00A01052  6100 FD84               2214                BSR GET_HEX
00A01056  1C01                    2215                MOVE.B D1,D6
00A01058  4E75                    2216                RTS
00A0105A                          2217  
00A0105A                          2218  
00A0105A                          2219  ; GET_ADDRESS
00A0105A                          2220  ; EXIT: D6 CONTAINS 24-BIT ADDRESS
00A0105A                          2221  
00A0105A  4286                    2222  GET_ADDRESS   CLR.L D6
00A0105C  6100 FD7A               2223                BSR GET_HEX
00A01060                          2224  
00A01060  1C01                    2225  GET_ADDRESS1  MOVE.B D1,D6
00A01062  E19E                    2226                ROL.L #8,D6
00A01064  6100 FD72               2227                BSR GET_HEX
00A01068  1C01                    2228                MOVE.B D1,D6
00A0106A  E19E                    2229                ROL.L #8,D6
00A0106C  6100 FD6A               2230                BSR GET_HEX
00A01070  1C01                    2231                MOVE.B D1,D6
00A01072  4E75                    2232                RTS
00A01074                          2233  
00A01074  4E75                    2234  TEST_RAM      RTS
00A01076                          2235  
00A01076                          2236  ; FILL MEMORY WITH 0xFF
00A01076                          2237  
00A01076  47F9 00A017CB           2238  FILL_MEMORY   LEA.L FILL.L,A3
00A0107C  6100 FCEC               2239                BSR PSTR
00A01080                          2240  
00A01080  47F9 00A017E2           2241                LEA.L START.L,A3
00A01086  6100 FCE2               2242                BSR PSTR
00A0108A  61CE                    2243                BSR GET_ADDRESS
00A0108C  2846                    2244                MOVEA.L D6,A4             ; A4 START ADDRESS
00A0108E                          2245  
00A0108E  47F9 00A017F4           2246                LEA.L STOP.L,A3
00A01094  6100 FCD4               2247                BSR PSTR
00A01098  61C0                    2248                BSR GET_ADDRESS
00A0109A  2A46                    2249                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00A0109C                          2250  
00A0109C  38FC FFFF               2251  FILL_MEMORY1  MOVE.W #$FFFF,(A4)+
00A010A0  BBCC                    2252                CMPA.L A4,A5
00A010A2  6CF8                    2253                BGE.S FILL_MEMORY1
00A010A4                          2254  
00A010A4  267C 00A01805           2255                MOVEA.L #DONE,A3
00A010AA  6100 FCBE               2256                BSR PSTR
00A010AE  4E75                    2257                RTS
00A010B0                          2258  
00A010B0                          2259  ; CLEAR MEMORY WITH 0x00
00A010B0                          2260  
00A010B0  47F9 00A017B3           2261  CLEAR_MEMORY  LEA.L CLEAR.L,A3
00A010B6  6100 FCB2               2262                BSR PSTR
00A010BA                          2263  
00A010BA  47F9 00A017E2           2264                LEA.L START.L,A3
00A010C0  6100 FCA8               2265                BSR PSTR
00A010C4  6194                    2266                BSR GET_ADDRESS
00A010C6  2846                    2267                MOVEA.L D6,A4             ; A4 START ADDRESS
00A010C8                          2268  
00A010C8  47F9 00A017F4           2269                LEA.L STOP.L,A3
00A010CE  6100 FC9A               2270                BSR PSTR
00A010D2  6186                    2271                BSR GET_ADDRESS
00A010D4  2A46                    2272                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00A010D6                          2273  
00A010D6  38FC 0000               2274  CLEAR_MEMORY1 MOVE.W #$0000,(A4)+
00A010DA  BBCC                    2275                CMPA.L A4,A5
00A010DC  6CF8                    2276                BGE.S CLEAR_MEMORY1
00A010DE                          2277  
00A010DE  267C 00A01805           2278                MOVEA.L #DONE,A3
00A010E4  6100 FC84               2279                BSR PSTR
00A010E8  4E75                    2280                RTS
00A010EA                          2281  
00A010EA                          2282  ; EDIT MEMORY
00A010EA                          2283  ; PRESS SPACE BAR TO QUIT
00A010EA                          2284  
00A010EA  47F9 00A0180F           2285  EDIT_MEMORY   LEA.L EDIT1.L,A3
00A010F0  6100 FC78               2286                BSR PSTR
00A010F4                          2287  
00A010F4  47F9 00A01841           2288                LEA.L EDIT.L,A3
00A010FA  6100 FC6E               2289                BSR PSTR
00A010FE  6100 FF5A               2290                BSR GET_ADDRESS
00A01102                          2291  
00A01102  0886 0000               2292                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00A01106  2646                    2293                MOVEA.L D6,A3       ; EDIT ADDRESS
00A01108                          2294  
00A01108                          2295               ; MOVEA.L POINTER_NOW.L,A3
00A01108                          2296  
00A01108  6100 FC6E               2297  EDIT_MEMORY2  BSR NEW_LINE
00A0110C  200B                    2298                MOVE.L A3,D0
00A0110E  6100 FE42               2299                BSR OUT6X
00A01112  6100 FC76               2300                BSR SPACE
00A01116  6100 FC72               2301                BSR SPACE
00A0111A                          2302  
00A0111A  103C 005B               2303                MOVE.B #'[',D0
00A0111E  6100 FC12               2304                BSR COUT
00A01122  3013                    2305                MOVE.W (A3),D0
00A01124  6100 FE24               2306                BSR OUT4X
00A01128  103C 005D               2307                MOVE.B #']',D0
00A0112C  6100 FC04               2308                BSR COUT
00A01130                          2309  
00A01130  6100 FC58               2310                BSR SPACE
00A01134                          2311  
00A01134  4241                    2312                CLR.W D1
00A01136  6100 FCA0               2313                BSR GET_HEX
00A0113A                          2314  
00A0113A  08AE 0000 0024          2315                BCLR.B #BIT_ESC,FLAG(A6)  ; TEST BIT_ESC BIT
00A01140  6630                    2316                BNE.S EDIT_MEMORY3  ; IF BIT = 1 THEN EXIT
00A01142                          2317  
00A01142  08AE 0001 0024          2318                BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00A01148  6624                    2319                BNE.S EDIT_MEMORY4  ; SKIP WRITE TO RAM
00A0114A                          2320  
00A0114A  E159                    2321                ROL.W #8,D1
00A0114C  6100 FC8A               2322                BSR GET_HEX
00A01150                          2323  
00A01150  36BC 0000               2324                MOVE.W #0,(A3)
00A01154                          2325  
00A01154  3013                    2326                MOVE.W (A3),D0   ; TEST RAM OR ROM BY WRITING 0 AND READ BACK
00A01156  B07C 0000               2327                CMP.W #0,D0
00A0115A  6604                    2328                BNE.S EDIT_MEMORY5
00A0115C                          2329  
00A0115C  3681                    2330                MOVE.W D1,(A3)     ; OK WRITE TO RAM
00A0115E  600E                    2331                BRA.S EDIT_MEMORY4 
00A01160                          2332  
00A01160  2F0B                    2333  EDIT_MEMORY5  MOVE.L A3,-(SP)
00A01162  47F9 00A0184D           2334                LEA.L ROM.L,A3
00A01168  6100 FC00               2335                BSR PSTR
00A0116C  265F                    2336                MOVEA.L (SP)+,A3
00A0116E                          2337  
00A0116E  548B                    2338  EDIT_MEMORY4  ADDQ.L #2,A3     ; BUMP A3
00A01170                          2339  
00A01170  6096                    2340                BRA.S EDIT_MEMORY2
00A01172                          2341  
00A01172  6100 FC04               2342  EDIT_MEMORY3  BSR NEW_LINE
00A01176  4E75                    2343                RTS
00A01178                          2344  
00A01178                          2345  
00A01178                          2346  ; HELP LIST MONITOR COMMANDS
00A01178                          2347  
00A01178  47F9 00A01AE8           2348  HELP          LEA.L HELP_LIST.L,A3
00A0117E  6100 FBEA               2349                BSR PSTR
00A01182  4E75                    2350                RTS
00A01184                          2351  
00A01184                          2352  ;----------------------------------------------------------------------
00A01184                          2353  ; PRINT_DEC
00A01184                          2354  ; D0 32-BIT BINARY NUMBER
00A01184                          2355  
00A01184  2F00                    2356  PRINT_DEC MOVE.L D0,-(SP)  ; SAVE D0
00A01186  2C79 000000C0           2357            MOVEA.L RAMBASE.L,A6
00A0118C  DDFC 00000026           2358            ADDA.L #BUFFER,A6
00A01192  6100 0016               2359            BSR HEX2DEC
00A01196  2679 000000C0           2360            MOVEA.L RAMBASE.L,A3
00A0119C  D7FC 00000026           2361            ADDA.L #BUFFER,A3
00A011A2  6100 FBC6               2362            BSR PSTR
00A011A6  201F                    2363            MOVE.L (SP)+,D0 ; RESTORE D0
00A011A8  4E75                    2364            RTS
00A011AA                          2365  
00A011AA                          2366  ;**************************************************************************
00A011AA                          2367  ; The portion of code within STAR lines are modified from Tutor source code
00A011AA                          2368  ;
00A011AA                          2369  ;
00A011AA                          2370  ; HEX2DEC   HEX2DEC convert hex to decimal                   
00A011AA                          2371  ; CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
00A011AA                          2372  
00A011AA  48E7 7F00               2373  HEX2DEC  MOVEM.L D1-D7,-(SP)   ;SAVE REGISTERS
00A011AE  2E00                    2374           MOVE.L  D0,D7               ;SAVE IT HERE
00A011B0  6A08                    2375           BPL.S   HX2DC
00A011B2  4487                    2376           NEG.L   D7             ;CHANGE TO POSITIVE
00A011B4  6B4E                    2377           BMI.S   HX2DC57        ;SPECIAL CASE (-0)
00A011B6  1CFC 002D               2378           MOVE.B  #'-',(A6)+     ;PUT IN NEG SIGN
00A011BA  4244                    2379  HX2DC    CLR.W   D4             ;FOR ZERO SURPRESS
00A011BC  7C0A                    2380           MOVEQ.L   #10,D6         ;COUNTER
00A011BE  7401                    2381  HX2DC0   MOVEQ.L   #1,D2          ;VALUE TO SUB
00A011C0  2206                    2382           MOVE.L  D6,D1          ;COUNTER
00A011C2  5381                    2383           SUBQ.L  #1,D1          ;ADJUST - FORM POWER OF TEN
00A011C4  671A                    2384           BEQ.S   HX2DC2         ;IF POWER IS ZERO
00A011C6  3602                    2385  HX2DC1   MOVE.W  D2,D3          ;D3=LOWER WORD
00A011C8  C6FC 000A               2386           MULU.W    #10,D3
00A011CC  4842                    2387           SWAP.W    D2             ;D2=UPPER WORD
00A011CE  C4FC 000A               2388           MULU.W    #10,D2
00A011D2  4843                    2389           SWAP.W    D3             ;ADD UPPER TO UPPER
00A011D4  D443                    2390           ADD.W   D3,D2
00A011D6  4842                    2391           SWAP.W    D2             ;PUT UPPER IN UPPER
00A011D8  4843                    2392           SWAP.W    D3             ;PUT LOWER IN LOWER
00A011DA  3403                    2393           MOVE.W  D3,D2          ;D2=UPPER & LOWER
00A011DC  5381                    2394           SUBQ.L  #1,D1
00A011DE  66E6                    2395           BNE     HX2DC1
00A011E0  4280                    2396  HX2DC2   CLR.L   D0             ;HOLDS SUB AMT
00A011E2  BE82                    2397  HX2DC22  CMP.L   D2,D7
00A011E4  6D06                    2398           BLT.S   HX2DC3         ;IF NO MORE SUB POSSIBLE
00A011E6  5280                    2399           ADDQ.L  #1,D0          ;BUMP SUBS
00A011E8  9E82                    2400           SUB.L   D2,D7          ;COUNT DOWN BY POWERS OF TEN
00A011EA  60F6                    2401           BRA.S   HX2DC22        ;DO MORE
00A011EC  4A00                    2402  HX2DC3   TST.B   D0             ;ANY VALUE?
00A011EE  6604                    2403           BNE.S   HX2DC4
00A011F0  4A44                    2404           TST.W   D4             ;ZERO SURPRESS
00A011F2  6708                    2405           BEQ.S   HX2DC5
00A011F4  0600 0030               2406  HX2DC4   ADDI.B  #$30,D0        ;BINARY TO ASCII
00A011F8  1CC0                    2407           MOVE.B  D0,(A6)+       ;PUT IN BUFFER
00A011FA  1800                    2408           MOVE.B  D0,D4          ;MARK AS NON ZERO SURPRESS
00A011FC  5386                    2409  HX2DC5   SUBQ.L  #1,D6          ;NEXT POWER
00A011FE  66BE                    2410           BNE     HX2DC0
00A01200  4A44                    2411           TST.W   D4             ;SEE IF ANYTHING PRINTED
00A01202  6604                    2412           BNE.S   HX2DC6
00A01204  1CFC 0030               2413  HX2DC57  MOVE.B  #'0',(A6)+     ;PRINT AT LEST A ZERO
00A01208  1CBC 0000               2414  HX2DC6   MOVE.B  #0,(A6)        ; PUT TERMINATOR
00A0120C  4CDF 00FE               2415           MOVEM.L (SP)+,D1-D7   ;RESTORE REGISTERS
00A01210  4E75                    2416           RTS                    ;END OF ROUTINE
00A01212                          2417  
00A01212                          2418  *
00A01212                          2419  *  PRINT HEX ROUTINES
00A01212                          2420  *
00A01212                          2421  *
00A01212                          2422  * PRINT 8 HEX CHARACTERS
00A01212                          2423  *
00A01212                          2424  *  D0,D1,D2 DESTROYED
00A01212                          2425  *
00A01212  4840                    2426  PNT8HX   SWAP    D0             FLIP REG HALVES
00A01214  610A                    2427           BSR.S   PNT4HX         DO TOP WORD
00A01216  4840                    2428           SWAP    D0             NOW DO LOWER WORD
00A01218  6006                    2429           BRA.S   PNT4HX
00A0121A                          2430  * PRINT 6 HEX CHARACTERS
00A0121A  4840                    2431  PNT6HX   SWAP    D0             FLIP REGISTER HALVES
00A0121C  610A                    2432           BSR.S   PNT2HX
00A0121E  4840                    2433           SWAP    D0             FLIP BACK REG HALVES
00A01220                          2434  * PRINT 4 HEX CHARACTERS IN D0.W
00A01220  3200                    2435  PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
00A01222  E058                    2436           ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
00A01224  6102                    2437           BSR.S   PNT2HX         PRINT IT
00A01226  3001                    2438           MOVE.W  D1,D0          PULL IT BACK
00A01228                          2439  * PRINT 2 HEX CHARACTERS IN D0.B
00A01228  3400                    2440  PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
00A0122A  E850                    2441           ROXR.W  #4,D0          FORM UPPER NIBBLE
00A0122C  6102                    2442           BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
00A0122E  3002                    2443           MOVE.W  D2,D0          GET BACK FROM TEMP
00A01230                          2444  * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
00A01230                          2445  *
00A01230  0200 000F               2446  PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
00A01234  0000 0030               2447           ORI.B   #$30,D0        CONVERT TO ASCII
00A01238  0C00 0039               2448           CMPI.B  #$39,D0        SEE IF IT IS>9
00A0123C  6F02                    2449           BLE.S   SAVHEX
00A0123E  5E40                    2450           ADD     #7,D0          ADD TO MAKE 10=>A
00A01240  1CC0                    2451  SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
00A01242  4E75                    2452           RTS
00A01244                          2453  
00A01244                          2454  * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
00A01244                          2455  *        ENTER     D0 = VALUE
00A01244                          2456  *                  A6 = STORE POINTER
00A01244                          2457  *
00A01244  48E7 4780               2458  FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
00A01248  2079 000000C0           2459           MOVEA.L RAMBASE.L,A0   ;LEA     OFFSET,A0
00A0124E  7EFF                    2460           MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
00A01250  4286                    2461           CLR.L   D6             D6 = OFFSET POSITION
00A01252                          2462  
00A01252  2200                    2463  FREL10   MOVE.L  D0,D1
00A01254  4A90                    2464           TST.L   (A0)
00A01256  670C                    2465           BEQ.S   FREL15         ZERO OFFSET
00A01258  9290                    2466           SUB.L   (A0),D1        D1 = DIFF.
00A0125A  6B08                    2467           BMI.S   FREL15         NO FIT
00A0125C                          2468  
00A0125C  B287                    2469           CMP.L   D7,D1
00A0125E  6404                    2470           BCC.S   FREL15         OLD FIT BETTER
00A01260                          2471  
00A01260  2E01                    2472           MOVE.L  D1,D7          D7 = NEW BEST FIT
00A01262  2A06                    2473           MOVE.L  D6,D5          D5 = POSITION
00A01264                          2474  
00A01264  5888                    2475  FREL15   ADDQ.L  #4,A0
00A01266  5286                    2476           ADDQ.L  #1,D6
00A01268  0C46 0008               2477           CMPI.W  #8,D6
00A0126C  66E4                    2478           BNE     FREL10         MORE OFFSETS TO CHECK
00A0126E                          2479  
00A0126E  4A87                    2480           TST.L   D7
00A01270  6B1E                    2481           BMI.S   FREL25         NO FIT
00A01272  4A46                    2482           TST     D6
00A01274  6608                    2483           BNE.S   FREL20
00A01276  4AB9 000000C0           2484           TST.L   RAMBASE.L      ;TST.L    OFFSET
00A0127C  6712                    2485           BEQ.S   FREL25         R0 = 000000; NO FIT
00A0127E                          2486  
00A0127E  2007                    2487  FREL20   MOVE.L  D7,D0
00A01280  6198                    2488           BSR     PNT6HX         FORMAT OFFSET
00A01282  1CFC 002B               2489           MOVE.B  #'+',(A6)+     +
00A01286  1CFC 0052               2490           MOVE.B  #'R',(A6)+     R
00A0128A  0605 0030               2491           ADDI.B  #'0',D5        MAKE ASCII
00A0128E  600A                    2492           BRA.S   FREL30
00A01290                          2493  
00A01290  6188                    2494  FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
00A01292  1A3C 0020               2495           MOVE.B  #BLANK,D5
00A01296  1CC5                    2496           MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
00A01298  1CC5                    2497           MOVE.B  D5,(A6)+
00A0129A  1CC5                    2498  FREL30   MOVE.B  D5,(A6)+
00A0129C                          2499  
00A0129C  4CDF 01E2               2500           MOVEM.L (A7)+,D1/D5-D7/A0
00A012A0  4E75                    2501           RTS
00A012A2                          2502  
00A012A2                          2503  ;******************************************************************************
00A012A2                          2504  
00A012A2                          2505  
00A012A2                          2506  ; DISPLAY USER REGISTERS D0-D7 AND A0-A7
00A012A2                          2507  ;
00A012A2                          2508  
00A012A2  47F9 00A01956           2509  DISPLAY_REG  LEA.L REGISTER_DISP.L,A3
00A012A8  6100 FAC0               2510               BSR PSTR
00A012AC                          2511  
00A012AC  2C79 000000C0           2512  DISPLAY_REG1 MOVEA.L RAMBASE.L,A6
00A012B2  6100 FAC4               2513               BSR NEW_LINE
00A012B6  6100 FAC0               2514               BSR NEW_LINE
00A012BA  267C 00A01AD1           2515               MOVEA.L #PC_REG,A3
00A012C0  6100 FAA8               2516               BSR PSTR
00A012C4  202E 00F0               2517               MOVE.L USER_PC(A6),D0
00A012C8  6100 FC88               2518               BSR OUT6X
00A012CC                          2519  
00A012CC  6100 FABC               2520               BSR SPACE
00A012D0                          2521  
00A012D0  267C 00A01AD5           2522               MOVEA.L #SR_REG,A3
00A012D6  6100 FA92               2523               BSR PSTR
00A012DA  302E 00EA               2524               MOVE.W USER_SR(A6),D0
00A012DE  6100 FC6A               2525               BSR OUT4X
00A012E2                          2526  
00A012E2                          2527  ; NOW PRINT FLAG LOGIC IN BINARY
00A012E2  1800                    2528               MOVE.B D0,D4       ; SAVE TO D4
00A012E4                          2529  
00A012E4  E70C                    2530               LSL.B #3,D4        ; BIT POSITION BEFORE SHIFTING OUT
00A012E6                          2531  
00A012E6  6100 FAA2               2532               BSR SPACE
00A012EA  267C 00A01AE5           2533               MOVEA.L #X_FLAG,A3
00A012F0  6100 FA78               2534               BSR PSTR
00A012F4  E30C                    2535               LSL.B #1,D4
00A012F6  6100 00DA               2536               BSR PRINT_BIT
00A012FA                          2537  
00A012FA  6100 FA8E               2538               BSR SPACE
00A012FE  267C 00A01AE2           2539               MOVEA.L #N_FLAG,A3
00A01304  6100 FA64               2540               BSR PSTR
00A01308  E30C                    2541               LSL.B #1,D4
00A0130A  6100 00C6               2542               BSR PRINT_BIT
00A0130E                          2543  
00A0130E  6100 FA7A               2544               BSR SPACE
00A01312  267C 00A01ADF           2545               MOVEA.L #Z_FLAG,A3
00A01318  6100 FA50               2546               BSR PSTR
00A0131C  E30C                    2547               LSL.B #1,D4
00A0131E  6100 00B2               2548               BSR PRINT_BIT
00A01322                          2549  
00A01322  6100 FA66               2550               BSR SPACE
00A01326  267C 00A01ADC           2551               MOVEA.L #V_FLAG,A3
00A0132C  6100 FA3C               2552               BSR PSTR
00A01330  E30C                    2553               LSL.B #1,D4
00A01332  6100 009E               2554               BSR PRINT_BIT
00A01336                          2555  
00A01336  6100 FA52               2556               BSR SPACE
00A0133A  267C 00A01AD9           2557               MOVEA.L #CARRY_FLAG,A3
00A01340  6100 FA28               2558               BSR PSTR
00A01344  E30C                    2559               LSL.B #1,D4
00A01346  6100 008A               2560               BSR PRINT_BIT
00A0134A                          2561  
00A0134A                          2562  
00A0134A  6100 FA2C               2563               BSR NEW_LINE
00A0134E  143C 0000               2564               MOVE.B #0,D2
00A01352                          2565  
00A01352  2C79 000000C0           2566               MOVEA.L RAMBASE.L,A6
00A01358                          2567  
00A01358  47EE 00AA               2568               LEA.L USER_DATA(A6),A3
00A0135C                          2569  
00A0135C  103C 0044               2570  REG1         MOVE.B #'D',D0
00A01360  6100 F9D0               2571               BSR COUT
00A01364  1002                    2572               MOVE.B D2,D0
00A01366  6100 FBC0               2573               BSR OUT1X
00A0136A  103C 003D               2574               MOVE.B #'=',D0
00A0136E  6100 F9C2               2575               BSR COUT
00A01372                          2576  
00A01372  201B                    2577               MOVE.L (A3)+,D0
00A01374  6100 FBE4               2578               BSR OUT8X
00A01378  5202                    2579               ADDQ.B #1,D2
00A0137A  0C02 0008               2580               CMPI.B #8,D2
00A0137E  6710                    2581               BEQ.S REG4
00A01380  6100 FA08               2582               BSR SPACE
00A01384                          2583  
00A01384  0C02 0004               2584               CMPI.B #4,D2
00A01388  66D2                    2585               BNE.S REG1
00A0138A  6100 F9EC               2586               BSR NEW_LINE
00A0138E  60CC                    2587               BRA.S REG1
00A01390                          2588  
00A01390  6100 F9E6               2589  REG4         BSR NEW_LINE
00A01394  143C 0000               2590               MOVE.B #0,D2
00A01398                          2591  
00A01398  103C 0041               2592  REG3         MOVE.B #'A',D0
00A0139C  6100 F994               2593               BSR COUT
00A013A0  1002                    2594               MOVE.B D2,D0
00A013A2  6100 FB84               2595               BSR OUT1X
00A013A6  103C 003D               2596               MOVE.B #'=',D0
00A013AA  6100 F986               2597               BSR COUT
00A013AE                          2598  
00A013AE  201B                    2599               MOVE.L (A3)+,D0
00A013B0  6100 FBA8               2600               BSR OUT8X
00A013B4  5202                    2601               ADDQ.B #1,D2
00A013B6  0C02 0008               2602               CMPI.B #8,D2
00A013BA  6710                    2603               BEQ.S REG2
00A013BC  6100 F9CC               2604               BSR SPACE
00A013C0                          2605  
00A013C0  0C02 0004               2606               CMPI.B #4,D2
00A013C4  66D2                    2607               BNE.S REG3
00A013C6  6100 F9B0               2608               BSR NEW_LINE
00A013CA  60CC                    2609               BRA.S REG3
00A013CC                          2610  
00A013CC  6100 F9AA               2611  REG2         BSR NEW_LINE
00A013D0  4E75                    2612               RTS
00A013D2                          2613  
00A013D2                          2614  
00A013D2                          2615  
00A013D2                          2616  
00A013D2                          2617  ; SEND '0' OR '1' TO SCREEN
00A013D2                          2618  
00A013D2  650A                    2619  PRINT_BIT   BCS.S WRITE_1
00A013D4  103C 0030               2620              MOVE.B #'0',D0
00A013D8  6100 F958               2621              BSR COUT
00A013DC  4E75                    2622              RTS
00A013DE                          2623  
00A013DE  103C 0031               2624  WRITE_1     MOVE.B #'1',D0
00A013E2  6100 F94E               2625              BSR COUT
00A013E6  4E75                    2626              RTS
00A013E8                          2627  
00A013E8                          2628  ; JUMP TO USER PROGRAM
00A013E8                          2629  ; 
00A013E8                          2630  
00A013E8  47F9 00A01937           2631  JUMP       LEA.L JUMP_TO.L,A3
00A013EE  6100 F97A               2632             BSR PSTR
00A013F2                          2633  
00A013F2  2C79 000000C0           2634             MOVEA.L RAMBASE.L,A6
00A013F8  202E 00F0               2635             MOVE.L USER_PC(A6),D0
00A013FC  6100 FB54               2636             BSR OUT6X
00A01400  103C 003E               2637             MOVE.B #'>',D0
00A01404                          2638  
00A01404  6100 F92C               2639             BSR COUT
00A01408                          2640  
00A01408  6100 F9CE               2641             BSR GET_HEX
00A0140C                          2642  
00A0140C  08AE 0000 0024          2643             BCLR.B #BIT_ESC,FLAG(A6) ; TEST BIT_ESC BIT
00A01412  6614                    2644             BNE.S ABORT             ; IF BIT = 1 THEN EXIT
00A01414                          2645  
00A01414  08AE 0001 0024          2646             BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00A0141A  660E                    2647             BNE.S JUMP1         ; RUN USER PROGRAM
00A0141C                          2648  
00A0141C  4286                    2649             CLR.L D6
00A0141E  6100 FC40               2650             BSR GET_ADDRESS1
00A01422                          2651  
00A01422                          2652  ; GOT D6 FOR DESTINATION
00A01422                          2653  
00A01422  2D46 00F0               2654             MOVE.L D6,USER_PC(A6)  ; SAVE TO USER PC
00A01426  6002                    2655             BRA.S JUMP1
00A01428                          2656  
00A01428  4E75                    2657  ABORT      RTS                 ; GET BACK MONITOR
00A0142A                          2658  
00A0142A  2C79 000000C0           2659  JUMP1      MOVEA.L RAMBASE.L,A6     ; POINTED TO START MONITOR RAM
00A01430                          2660  
00A01430  206E 00E6               2661             MOVEA.L USER_USP(A6),A0
00A01434  4E60                    2662             MOVE.L  A0,USP           ; WRITE TO REAL USER STACK (A7)
00A01436                          2663  
00A01436  2F2E 00F0               2664             MOVE.L  USER_PC(A6),-(SP)     ; PUSH PC
00A0143A                          2665  
00A0143A  08AE 0005 00EA          2666             BCLR.B   #5,USER_SR(A6) ; SET USER MODE     
00A01440                          2667  
00A01440  3F2E 00EA               2668             MOVE.W  USER_SR(A6),-(SP)
00A01444  4CEE 7FFF 00AA          2669             MOVEM.L USER_DATA(A6),D0-D7/A0-A6
00A0144A  4E73                    2670             RTE                     ; JUMP TO USER PROGRAM
00A0144C                          2671  
00A0144C                          2672  
00A0144C                          2673  ; TRACE JUMP
00A0144C                          2674  ; SET TRACE BIT IN SAVED STATUS REGISTER
00A0144C                          2675  
00A0144C  47F9 00A01A41           2676  TRACE_JUMP LEA.L TRACE_MSG.L,A3
00A01452  6100 F916               2677             BSR PSTR
00A01456  6100 F920               2678             BSR NEW_LINE
00A0145A                          2679  
00A0145A  2C79 000000C0           2680             MOVEA.L RAMBASE.L,A6
00A01460  286E 00F0               2681             MOVEA.L USER_PC(A6),A4
00A01464  4CD4 0007               2682             MOVEM.L (A4),D0-D2
00A01468  2A79 000000C0           2683             MOVEA.L RAMBASE.L,A5
00A0146E  DBFC 00000026           2684             ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00A01474                          2685  
00A01474  4EB9 00A007B8           2686             JSR  DCODE68K.L
00A0147A                          2687  
00A0147A  6100 F8FC               2688             BSR NEW_LINE
00A0147E  6100 0130               2689             BSR PRINT_LINE
00A01482                          2690  
00A01482  2C79 000000C0           2691             MOVEA.L RAMBASE.L,A6
00A01488                          2692  
00A01488  08EE 0007 00EA          2693             BSET.B #TRACE_BIT,USER_SR(A6)  ; SET TRACE BIT
00A0148E  609A                    2694             BRA JUMP1                    ; BORROW JUMP ROUTINE
00A01490                          2695  
00A01490                          2696  ; CLEAR MONITOR RAM
00A01490                          2697  
00A01490  2C79 000000C0           2698  CLEAR_MON_RAM MOVEA.L RAMBASE.L,A6
00A01496  3E3C 0200               2699                MOVE.W  #512,D7
00A0149A                          2700  
00A0149A  3CFC 0000               2701  CLEAR1        MOVE.W #0000,(A6)+
00A0149E  51CF FFFA               2702                DBRA D7,CLEAR1
00A014A2  4E75                    2703                RTS
00A014A4                          2704  
00A014A4                          2705  
00A014A4                          2706  
00A014A4                          2707  ; MODIFY USER REGISTERS
00A014A4                          2708  
00A014A4  2C79 000000C0           2709  MODIFY_REG    MOVEA.L RAMBASE.L,A6
00A014AA  6100 F8AA               2710                BSR CIN
00A014AE  C03C 00DF               2711                AND.B #%11011111,D0
00A014B2  0C00 0050               2712                CMPI.B #'P',D0
00A014B6  661A                    2713                BNE.S DATA_REG1
00A014B8                          2714  
00A014B8  103C 0043               2715                MOVE.B #'C',D0
00A014BC  6100 F874               2716                BSR COUT
00A014C0  103C 003D               2717                MOVE.B #'=',D0
00A014C4  6100 F86C               2718                BSR COUT
00A014C8  6100 FB90               2719                BSR GET_ADDRESS
00A014CC                          2720  
00A014CC  2D46 00F0               2721                MOVE.L D6,USER_PC(A6)
00A014D0  4E75                    2722                RTS
00A014D2                          2723  
00A014D2  0C00 0044               2724  DATA_REG1     CMPI.B #'D',D0
00A014D6  6622                    2725                BNE.S ADDRESS_REG2
00A014D8  6100 F87C               2726                BSR CIN
00A014DC  0400 0030               2727                SUB.B #'0',D0
00A014E0                          2728  
00A014E0  4287                    2729                CLR.L D7
00A014E2  1E00                    2730                MOVE.B D0,D7
00A014E4                          2731  
00A014E4  103C 003D               2732                MOVE.B #'=',D0
00A014E8  6100 F848               2733                BSR COUT
00A014EC                          2734  
00A014EC  6100 FB4A               2735                BSR GET_32BIT
00A014F0                          2736  
00A014F0  E50F                    2737                LSL.B #2,D7        ; D7*4
00A014F2  DCC7                    2738                ADDA.W D7,A6
00A014F4  2D46 00AA               2739                MOVE.L D6,USER_DATA(A6)  ; SAVE TO USER DATA REGISTERS
00A014F8                          2740  
00A014F8  4E75                    2741                RTS
00A014FA                          2742                
00A014FA  0C00 0041               2743  ADDRESS_REG2  CMPI.B #'A',D0
00A014FE  6620                    2744                BNE.S WHAT3
00A01500  6100 F854               2745                BSR CIN
00A01504  0400 0030               2746                SUB.B #'0',D0
00A01508                          2747  
00A01508  4287                    2748                CLR.L D7
00A0150A  1E00                    2749                MOVE.B D0,D7
00A0150C                          2750  
00A0150C  103C 003D               2751                MOVE.B #'=',D0
00A01510  6100 F820               2752                BSR COUT
00A01514                          2753  
00A01514  6100 FB22               2754                BSR GET_32BIT
00A01518                          2755  
00A01518  E50F                    2756                LSL.B #2,D7        ; D7*4
00A0151A  DCC7                    2757                ADDA.W D7,A6
00A0151C  2D46 00CA               2758                MOVE.L D6,USER_ADDR(A6)  ; SAVE TO USER ADDRESS REGISTERS
00A01520                          2759  
00A01520  4E75                    2760  WHAT3         RTS
00A01522                          2761  
00A01522                          2762  ;=======================================================================
00A01522                          2763  ; TRAP #N SERVICES
00A01522                          2764  ;
00A01522                          2765  
00A01522  2F08                    2766  SERVICE_TRAP0   MOVE.L A0,-(SP)      ; SAVE A0 BEFOREHAND
00A01524  2079 000000C0           2767                  MOVEA.L RAMBASE.L,A0  ; USE A0 AS THE POINTER
00A0152A  41E8 00AA               2768                  LEA.L USER_DATA(A0),A0
00A0152E  48D0 7FFF               2769                  MOVEM.L D0-D7/A0-A6,(A0)
00A01532  215F 0020               2770                  MOVE.L (SP)+,32(A0)  ; RESTORE A0
00A01536                          2771  
00A01536  2079 000000C0           2772                  MOVEA.L RAMBASE.L,A0
00A0153C  315F 00EA               2773                  MOVE.W (SP)+,USER_SR(A0)
00A01540  08A8 0007 00EA          2774                  BCLR.B #TRACE_BIT,USER_SR(A0) ; TURN TRACE BIT OFF
00A01546  215F 00F0               2775                  MOVE.L (SP)+,USER_PC(A0)
00A0154A                          2776  
00A0154A  4E6A                    2777                  MOVE.L USP,A2
00A0154C  214A 00E6               2778                  MOVE.L A2,USER_USP(A0)
00A01550                          2779  
00A01550  6100 FD5A               2780                  BSR DISPLAY_REG1
00A01554                          2781  
00A01554  2E7C 0000E000           2782                  MOVE.L #SUPER_STACK,SP  ; REINIT SYSTEM STACK
00A0155A  46FC 2000               2783                  MOVE.W #INT_ON,SR   ; REENTER SUPERVISOR MODE
00A0155E                          2784  
00A0155E  4EF9 00A00BFE           2785                  JMP LOOP.L        ; GET BACK MONITOR
00A01564                          2786  
00A01564                          2787  
00A01564                          2788  ; DISASSEMBLE THE MACHNIE CODE INTO MNEMONIC
00A01564                          2789  
00A01564  47F9 00A01985           2790  DISASSEMBLE     LEA.L DIS.L,A3
00A0156A  6100 F7FE               2791                  BSR PSTR
00A0156E                          2792  
00A0156E                          2793             ;   LEA.L $102000.L,A4
00A0156E                          2794  
00A0156E  2C79 000000C0           2795                 MOVEA.L RAMBASE.L,A6
00A01574                          2796  
00A01574  3E3C 0013               2797                 MOVE.W #19,D7       ; 20 LINES DISASSEMBLE
00A01578                          2798  
00A01578  286E 00A6               2799                 MOVEA.L POINTER_NOW(A6),A4
00A0157C                          2800  
00A0157C  4CD4 0007               2801  DIS1           MOVEM.L (A4),D0-D2
00A01580  2A79 000000C0           2802                 MOVEA.L RAMBASE.L,A5
00A01586  DBFC 00000026           2803                 ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00A0158C                          2804  
00A0158C  48E7 0102               2805                 MOVEM.L A6/D7,-(SP)
00A01590                          2806  
00A01590  4EB9 00A007B8           2807                 JSR  DCODE68K.L
00A01596                          2808  
00A01596  6100 F7E0               2809                 BSR NEW_LINE
00A0159A  6100 0014               2810                 BSR PRINT_LINE
00A0159E                          2811  
00A0159E  4CDF 4080               2812                 MOVEM.L (SP)+,D7/A6
00A015A2                          2813  
00A015A2  51CF FFD8               2814                 DBRA D7,DIS1
00A015A6                          2815  
00A015A6  2D4C 00A6               2816                 MOVE.L A4,POINTER_NOW(A6) ; NEXT BLOCK
00A015AA  6100 F7CC               2817                 BSR NEW_LINE
00A015AE  4E75                    2818                 RTS
00A015B0                          2819  
00A015B0  101D                    2820  PRINT_LINE     MOVE.B (A5)+,D0
00A015B2  6100 F77E               2821                 BSR COUT
00A015B6  BDCD                    2822                 CMPA.L A5,A6
00A015B8  66F6                    2823                 BNE.S PRINT_LINE
00A015BA  4E75                    2824                 RTS
00A015BC                          2825  
00A015BC                          2826  
00A015BC                          2827  ; UPLOAD BINARY IMAGE FROM MEMORY
00A015BC                          2828  ; SEND IT TO TERMINAL AS HEX CODE IN LONG WORD FORMAT
00A015BC                          2829  ; USE FOR DISASSEMBLER HEX CODE PREPARATION
00A015BC                          2830  
00A015BC  47F9 00A019AB           2831  UPLOAD        LEA.L UPLOAD1.L,A3
00A015C2  6100 F7A6               2832                BSR PSTR
00A015C6  6100 F78E               2833                BSR CIN
00A015CA                          2834  
00A015CA  4BF9 00100400           2835                LEA.L $100400.L,A5    ; START
00A015D0  4DF9 00102000           2836                LEA.L $102000.L,A6    ; STOP
00A015D6                          2837  
00A015D6  6100 F7A0               2838  UPLOAD3       BSR NEW_LINE
00A015DA  47F9 00A019D5           2839                LEA.L STRING1.L,A3
00A015E0  6100 F788               2840                BSR PSTR
00A015E4                          2841  
00A015E4  3E3C 0007               2842                MOVE.W #7,D7
00A015E8                          2843  
00A015E8  103C 0024               2844  UPLOAD2       MOVE.B #'$',D0
00A015EC  6100 F744               2845                BSR COUT
00A015F0  201D                    2846                MOVE.L (A5)+,D0
00A015F2  6100 F966               2847                BSR OUT8X
00A015F6  103C 002C               2848                MOVE.B #',',D0
00A015FA  6100 F736               2849                BSR COUT
00A015FE  51CF FFE8               2850                DBRA D7,UPLOAD2
00A01602                          2851  
00A01602  BDCD                    2852                CMPA.L A5,A6
00A01604  6ED0                    2853                BGT  UPLOAD3
00A01606                          2854  
00A01606  4E75                    2855                RTS
00A01608                          2856  
00A01608                          2857  ; ABOUT zBUG V1.0
00A01608                          2858  
00A01608  47F9 00A019DC           2859  ABOUT         LEA.L ABOUTZBUG.L,A3
00A0160E  6100 F75A               2860                BSR PSTR
00A01612  4E75                    2861                RTS
00A01614                          2862  
00A01614                          2863  ; VIEW USER STACK
00A01614                          2864  
00A01614  47F9 00A01A52           2865  VIEW_USP      LEA.L VIEW.L,A3
00A0161A  6100 F74E               2866                BSR PSTR
00A0161E                          2867  
00A0161E  6100 F758               2868                BSR NEW_LINE
00A01622                          2869  
00A01622  227C 0000FFF4           2870                MOVEA.L #SUPER_STACK+USER_STACK,A1 ; TOP OF USER STACK
00A01628                          2871  
00A01628  41E9 FFE0               2872                LEA.L -32(A1),A0    ; EACH COMPOSED OF TWO BYTES
00A0162C                          2873  
00A0162C  3E3C 0010               2874                MOVE.W #16,D7
00A01630  2C79 000000C0           2875                MOVEA.L RAMBASE.L,A6
00A01636                          2876  
00A01636                          2877  
00A01636  2008                    2878  VIEW1         MOVE.L A0,D0
00A01638                          2879  
00A01638  2F00                    2880                MOVE.L D0,-(SP)
00A0163A                          2881  
00A0163A  B1EE 00E6               2882                CMPA.L USER_USP(A6),A0
00A0163E  660C                    2883                BNE.S NOT_TOS
00A01640                          2884  
00A01640  47F9 00A01AC1           2885                LEA.L TOP_OF_STACK.L,A3
00A01646  6100 F722               2886                BSR PSTR
00A0164A  600A                    2887                BRA.S SKIP_PRINT_BLANK
00A0164C                          2888  
00A0164C  47F9 00A01AC9           2889  NOT_TOS       LEA.L BLANK_BLOCK.L,A3
00A01652  6100 F716               2890                BSR PSTR
00A01656                          2891  
00A01656                          2892  SKIP_PRINT_BLANK
00A01656                          2893  
00A01656  201F                    2894                MOVE.L (SP)+,D0
00A01658  6100 F8F8               2895                BSR OUT6X
00A0165C  6100 F72C               2896                BSR SPACE
00A01660                          2897  
00A01660  103C 005B               2898                MOVE.B #'[',D0
00A01664  6100 F6CC               2899                BSR COUT
00A01668                          2900  
00A01668  3018                    2901                MOVE.W (A0)+,D0
00A0166A  6100 F8DE               2902                BSR OUT4X
00A0166E                          2903  
00A0166E  103C 005D               2904                MOVE.B #']',D0
00A01672  6100 F6BE               2905                BSR COUT
00A01676                          2906  
00A01676  6100 F700               2907                BSR NEW_LINE
00A0167A  51CF FFBA               2908                DBRA D7,VIEW1
00A0167E                          2909  
00A0167E  4E75                    2910                RTS
00A01680                          2911  
00A01680                          2912  
00A01680                          2913  ; LOAD SP WITH [RAM] AND PC [RAM+4]
00A01680                          2914  
00A01680  2E79 00000000           2915  BOOT_RAM      MOVEA.L RAM.L,SP
00A01686  2079 00000004           2916                MOVEA.L 4+RAM.L,A0
00A0168C  4ED0                    2917                JMP     (A0)
00A0168E                          2918  
00A0168E                          2919  ; SERVICE BUS ERROR
00A0168E  2679 00A01A7D           2920  SERVICE_BUSERROR MOVEA.L BUSERROR_MSG.L,A3
00A01694  6000 001C               2921                  BRA SERVICE_MSG
00A01698                          2922  
00A01698                          2923  ; SERVICE ADDRESS ERROR
00A01698  2679 00A01A8A           2924  SERVICE_ADDRESSERR MOVEA.L ADDRESSERR_MSG.L,A3
00A0169E  6000 0012               2925                  BRA SERVICE_MSG
00A016A2                          2926  
00A016A2                          2927  ; SERVICE ILLEGAL INTSRUCTION
00A016A2  2679 00A01A9B           2928  SERVICE_ILLEGAL MOVEA.L ILLEGAL_MSG.L,A3
00A016A8  6000 0008               2929                  BRA SERVICE_MSG
00A016AC                          2930  
00A016AC                          2931  ; SERVICE ZERO DIVIDE
00A016AC  2679 00A01AB2           2932  SERVICE_ZERODIV MOVEA.L ZERODIV_MSG.L,A3
00A016B2  6100 F6B6               2933  SERVICE_MSG     BSR PSTR
00A016B6  4E40                    2934                  TRAP #0
00A016B8                          2935  
00A016B8                          2936  ; vector table initrize
00A016B8  41FA 0026               2937  VECINIT   LEA   VECTABLE(pc),a0
00A016BC  327C 0008               2938            MOVEA.W   #$0008,a1
00A016C0  700A                    2939            MOVEQ     #10,D0
00A016C2  22D8                    2940  VECINIT1  MOVE.L    (a0)+,(a1)+
00A016C4  5300                    2941            SUBQ.B    #1,D0
00A016C6  66FA                    2942            BNE       VECINIT1
00A016C8  327C 0060               2943            MOVEA.W   #$60,A1
00A016CC  7018                    2944            MOVEQ     #24,D0
00A016CE  22D8                    2945  VECINIT2  MOVE.L    (a0)+,(a1)+
00A016D0  5300                    2946            SUBQ.B    #1,D0
00A016D2  66FA                    2947            BNE       VECINIT2
00A016D4  327C 00C0               2948            MOVEA.W   #$C0,A1
00A016D8  22BC 0000E000           2949            MOVE.L    #RAMBASE_INIT,(a1)
00A016DE  4E75                    2950            RTS
00A016E0                          2951  
00A016E0                          2952  ;----------------- M68000 EXCEPTION VECTOR TABLE -----------------------------
00A016E0= 00A0168E                2953  VECTABLE  DC.L  SERVICE_BUSERROR     ; 2 Bus error
00A016E4= 00A01698                2954            DC.L  SERVICE_ADDRESSERR   ; 3 Address error
00A016E8= 00A016A2                2955            DC.L  SERVICE_ILLEGAL      ; 4 Illegal instruction
00A016EC= 00A016AC                2956            DC.L  SERVICE_ZERODIV      ; 5 Zero divide
00A016F0= 00A01522                2957            DC.L  SERVICE_TRAP0        ; 6 CHK instruction
00A016F4= 00A01522                2958            DC.L  SERVICE_TRAP0        ; 7 TRAPV instruction
00A016F8= 00A01522                2959            DC.L  SERVICE_TRAP0        ; 8 Privilege violation
00A016FC= 00A01522                2960            DC.L  SERVICE_TRAP0        ; 9 Trace
00A01700= 00A01522                2961            DC.L  SERVICE_TRAP0    ; 10 Line 1010 emulator
00A01704= 00A01522                2962            DC.L  SERVICE_TRAP0    ; 11 Line 1111 emulator
00A01708                          2963  
00A01708= 00A01522                2964            DC.L  SERVICE_TRAP0    ; 24 Spurious Interupt
00A0170C= 00A01522                2965            DC.L  SERVICE_TRAP0    ; 25 LEVEL 1 Interupt autovector
00A01710= 00A01522                2966            DC.L  SERVICE_TRAP0    ; 26 LEVEL 2 Interupt autovector
00A01714= 00A01522                2967            DC.L  SERVICE_TRAP0    ; 27 LEVEL 3 Interupt autovector
00A01718= 00A01522                2968            DC.L  SERVICE_TRAP0    ; 28 LEVEL 4 Interupt autovector
00A0171C= 00A01522                2969            DC.L  SERVICE_TRAP0    ; 29 LEVEL 5 Interupt autovector
00A01720= 00A01522                2970            DC.L  SERVICE_TRAP0    ; 30 LEVEL 6 Interupt autovector
00A01724= 00A01522                2971            DC.L  SERVICE_TRAP0    ; 31 LEVEL 7 Interupt autovector
00A01728= 00A01522                2972            DC.L  SERVICE_TRAP0    ; 32 TRAP #0
00A0172C= 00A01522                2973            DC.L  SERVICE_TRAP0    ; 33 TRAP #1
00A01730= 00A01522                2974            DC.L  SERVICE_TRAP0    ; 34 TRAP #2
00A01734= 00A01522                2975            DC.L  SERVICE_TRAP0    ; 35 TRAP #3
00A01738= 00A01522                2976            DC.L  SERVICE_TRAP0    ; 36 TRAP #4
00A0173C= 00A01522                2977            DC.L  SERVICE_TRAP0    ; 37 TRAP #5
00A01740= 00A01522                2978            DC.L  SERVICE_TRAP0    ; 38 TRAP #6
00A01744= 00A01522                2979            DC.L  SERVICE_TRAP0    ; 39 TRAP #7
00A01748= 00A01522                2980            DC.L  SERVICE_TRAP0    ; 40 TRAP #8
00A0174C= 00A01522                2981            DC.L  SERVICE_TRAP0    ; 41 TRAP #9
00A01750= 00A01522                2982            DC.L  SERVICE_TRAP0    ; 42 TRAP #10
00A01754= 00A01522                2983            DC.L  SERVICE_TRAP0    ; 43 TRAP #11
00A01758= 00A01522                2984            DC.L  SERVICE_TRAP0    ; 44 TRAP #12
00A0175C= 00A01522                2985            DC.L  SERVICE_TRAP0    ; 45 TRAP #13
00A01760= 00A01522                2986            DC.L  SERVICE_TRAP0    ; 46 TRAP #14
00A01764= 00A01522                2987            DC.L  SERVICE_TRAP0    ; 47 TRAP #15
00A01768                          2988  ;----------------------- STRING CONSTANT -------------------------------------
00A01768                          2989  
00A01768= 0D 0A 7A 42 75 67 ...   2990  TITLE  DC.B 13,10,'zBug V1.0.1 for MIC68K',13,10,0
00A01783= 0D 0A 7A 42 75 67 ...   2991  TITLE1 DC.B 13,10,'zBug V1.0.1 for MIC68K (press ? for help)',13,10,0
00A017B1                          2992  
00A017B1= 3E 00                   2993  PROMPT DC.B '>',0
00A017B3                          2994  
00A017B3= 6C 65 61 72 20 6D ...   2995  CLEAR  DC.B 'lear memory with 0x0000',0
00A017CB= 69 6C 6C 20 6D 65 ...   2996  FILL   DC.B 'ill memory with 0xFFFF',0 
00A017E2= 0D 0A 0A 73 74 61 ...   2997  START  DC.B 13,10,10,'start address=',0
00A017F4= 0D 0A 73 74 6F 70 ...   2998  STOP   DC.B 13,10,'stop  address=',0
00A01805= 0D 0A 64 6F 6E 65 ...   2999  DONE   DC.B 13,10,'done...',0
00A0180F                          3000  
00A0180F= 64 69 74 20 6D 65 ...   3001  EDIT1  DC.B 'dit memory (quit: SPACE BAR, next address: ENTER)',0
00A01841= 0D 0A 0A 41 64 64 ...   3002  EDIT   DC.B 13,10,10,'Address=',0
00A0184D= 20 20 72 6F 6D 00       3003  ROM    DC.B '  rom',0
00A01853                          3004  
00A01853= 65 77 20 32 34 2D ...   3005  NEW    DC.B 'ew 24-bit pointer',0
00A01865                          3006  
00A01865= 75 69 63 6B 20 68 ...   3007  QUICK  DC.B 'uick home, get back to start of RAM!',13,10,0
00A0188C= 65 78 20 64 75 6D ...   3008  HEX    DC.B 'ex dump memory',13,10,10
00A0189D= 41 44 44 52 45 53 ...   3009         DC.B 'ADDRESS  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
00A018D5                          3010  
00A018D5= 6F 61 64 20 4D 6F ...   3011  LOAD   DC.B 'oad Motorola s-record (accept s1,s2 and s8) quit: ESC',13,10,0
00A0190D                          3012  
00A0190D= 20 62 79 74 65 73 ...   3013  NUMBER DC.B ' bytes loaded, ',0
00A0191D= 20 72 65 63 6F 72 ...   3014  ERROR  DC.B ' records checksum error',13,10,0
00A01937                          3015  
00A01937= 75 6D 70 20 74 6F ...   3016  JUMP_TO DC.B 'ump to user program ',0 
00A0194C                          3017  
00A0194C= 20 54 52 41 50 20 ...   3018  TRAP_0 DC.B ' TRAP 0 !',0
00A01956                          3019  
00A01956= 65 67 69 73 74 65 ...   3020  REGISTER_DISP DC.B 'egister(user) display (A7= user stack pointer)',0
00A01985                          3021  
00A01985= 69 73 61 73 73 65 ...   3022  DIS    DC.B 'isassemble machine code to mnemonic',13,10,0
00A019AB                          3023  
00A019AB= 70 6C 6F 61 64 20 ...   3024  UPLOAD1 DC.B 'pload binary image, hit any key to begin ',0
00A019D5= 20 20 44 46 4C 20 00    3025  STRING1 DC.B '  DFL ',0
00A019DC                          3026  
00A019DC= 62 6F 75 74 20 7A ...   3027  ABOUTZBUG DC.B 'bout zBuG V1.0',13,10,10
00A019ED= 7A 42 75 67 20 56 ...   3028            DC.B 'zBug V1.0 Copyright (C) 2002 W.SIRICHOTE',13,10,10
00A01A18= 7A 42 75 67 20 56 ...   3029            DC.B 'zBug V1.0.1 MIC68K Version by @kanpapa',13,10,0
00A01A41                          3030  
00A01A41= 72 61 63 65 20 69 ...   3031  TRACE_MSG DC.B 'race instruction',0
00A01A52                          3032  
00A01A52= 74 61 63 6B 20 28 ...   3033  VIEW      DC.B 'tack (user)s content, shows 16-WORD deep',13,10,0
00A01A7D                          3034  
00A01A7D= 62 75 73 20 65 72 ...   3035  BUSERROR_MSG DC.B 'bus error...',0
00A01A8A= 61 64 64 72 65 73 ...   3036  ADDRESSERR_MSG DC.B 'address error...',0
00A01A9B= 69 6C 6C 65 67 61 ...   3037  ILLEGAL_MSG DC.B 'illegal instruction...',0
00A01AB2= 7A 65 72 6F 20 64 ...   3038  ZERODIV_MSG DC.B 'zero divide...',0
00A01AC1                          3039  
00A01AC1= 54 4F 53 2D 2D 2D ...   3040  TOP_OF_STACK DC.B 'TOS--->',0
00A01AC9= 20 20 20 20 20 20 ...   3041  BLANK_BLOCK  DC.B '       ',0
00A01AD1                          3042  
00A01AD1= 50 43 3D 00             3043  PC_REG DC.B 'PC=',0
00A01AD5= 53 52 3D 00             3044  SR_REG DC.B 'SR=',0
00A01AD9                          3045  
00A01AD9= 43 3D 00                3046  CARRY_FLAG DC.B 'C=',0
00A01ADC= 56 3D 00                3047  V_FLAG     DC.B 'V=',0
00A01ADF= 5A 3D 00                3048  Z_FLAG     DC.B 'Z=',0
00A01AE2= 4E 3D 00                3049  N_FLAG     DC.B 'N=',0
00A01AE5= 58 3D 00                3050  X_FLAG     DC.B 'X=',0
00A01AE8                          3051  
00A01AE8                          3052  
00A01AE8= 20 6D 6F 6E 69 74 ...   3053  HELP_LIST DC.B ' monitor commands',13,10,10
00A01AFC                          3054  
00A01AFC= 41 20 20 20 41 62 ...   3055         DC.B 'A   About zBug V1.0',13,10
00A01B11= 42 20 20 20 42 6F ...   3056         DC.B 'B   Boot from RAM [000000] -> SP [000004] ->PC',13,10
00A01B41= 43 20 20 20 43 6C ...   3057         DC.B 'C   Clear memory with 0x0000',13,10
00A01B5F= 44 20 20 20 44 69 ...   3058         DC.B 'D   Disassemble machine code to mnemonic',13,10
00A01B89= 45 20 20 20 45 64 ...   3059         DC.B 'E   Edit memory',13,10
00A01B9A= 46 20 20 20 46 69 ...   3060         DC.B 'F   Fill memory with 0xFFFF',13,10
00A01BB7= 48 20 20 20 48 65 ...   3061         DC.B 'H   Hex dump memory',13,10
00A01BCC= 4A 20 20 20 4A 75 ...   3062         DC.B 'J   Jump to address',13,10
00A01BE1= 4C 20 20 20 4C 6F ...   3063         DC.B 'L   Load Motorola s-record',13,10
00A01BFD= 4E 20 20 20 4E 65 ...   3064         DC.B 'N   New 24-bit pointer',13,10
00A01C15= 52 20 20 20 52 65 ...   3065         DC.B 'R   Register(user) display',13,10
00A01C31= 53 20 20 20 53 74 ...   3066         DC.B 'S   Stack(user)s content',13,10
00A01C4B= 54 20 20 20 54 72 ...   3067         DC.B 'T   Trace instruction',13,10
00A01C62= 2E 20 20 20 4D 6F ...   3068         DC.B '.   Modify user registers, exp .PC .D0 .A0',13,10
00A01C8E= 3F 20 20 20 4D 6F ...   3069         DC.B '?   Monitor commands list',13,10,0
00A01CAA                          3070  
00A01CAA                          3071  
00A01CAA                          3072  ; MONITOR'S RAM AREA
00A01CAA                          3073  ; MUST BE EVEN ADDRESS FOE RAMBASE
00A01CAA                          3074  ; THE A6 WAS LOADED WITH RAMBASE AS THE BASE MEMORY POINTER
00A01CAA                          3075  ; THE FOLLOWING VARIABLE CAN BE ACCEESED BY USING INDIRECT WITH DISPLACMENT
00A01CAA                          3076  
00A01CAA                          3077  ;RAMBASE     DC.L   $130000     ; RAM BASE ADDRESS
00A01CAA                          3078  
00A01CAA                          3079  ; DCODE68K
00A01CAA  =FFFFFFF0               3080  DDATA    EQU     $FFFFFFF0       ; DS.L 3
00A01CAA  =FFFFFFFC               3081  HISPC    EQU     $FFFFFFFC       ; DS.L 1
00A01CAA                          3082  
00A01CAA                          3083  ; OFFSET(DISPLACEMENT) DEFINITION
00A01CAA                          3084  
00A01CAA  =00000000               3085  OFFSET      EQU  0               ; FOR DISASSEMBLER USAGE
00A01CAA  =00000020               3086  DEBUG       EQU  OFFSET+32
00A01CAA  =00000024               3087  FLAG        EQU  DEBUG+4         ; 16-BIT MONITOR FLAG
00A01CAA  =00000026               3088  BUFFER      EQU  FLAG+2
00A01CAA  =000000A6               3089  POINTER_NOW EQU  BUFFER+128
00A01CAA  =000000AA               3090  USER_DATA   EQU  POINTER_NOW+4   ; USER D0-D7 AND A0-A7
00A01CAA  =000000CA               3091  USER_ADDR   EQU  USER_DATA+32    ; USER ADDRESS REGISTERS, A0-A7
00A01CAA  =000000E6               3092  USER_USP    EQU  USER_ADDR+28    ; A7 = USP
00A01CAA  =000000EA               3093  USER_SR     EQU  USER_USP+4      ; 
00A01CAA  =000000EC               3094  USER_SS     EQU  USER_SR+2
00A01CAA  =000000F0               3095  USER_PC     EQU  USER_SS+4
00A01CAA                          3096  
00A01CAA  =000000F4               3097  STACK_AREA  EQU  USER_PC+4           ; 32kB USER STACK -> 2kB
00A01CAA                          3098  ;USER_STACK  EQU  STACK_AREA+$7000    ; TOP OF STACK
00A01CAA  =00001FF4               3099  USER_STACK  EQU  STACK_AREA+$1F00    ; TOP OF STACK
00A01CAA                          3100  
00A01CAA                          3101  
00A01CAA                          3102  
00A01CAA                          3103         END  MAIN

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABORT               A01428
ABOUT               A01608
ABOUTZBUG           A019DC
ACIA2C              F20009
ACIA2D              F2000B
ACIAC               F00009
ACIAD               F0000B
ADDRESSERR_MSG      A01A8A
ADDRESS_ERROR       C
ADDRESS_REG2        A014FA
BIT_ESC             0
BLANK               20
BLANK_BLOCK         A01AC9
BOOT_RAM            A01680
BRTBL               A00460
BS                  8
BUFFER              26
BUFSIZE             50
BUSERROR_MSG        A01A7D
BUS_ERROR           8
C68                 3D
CARRY_FLAG          A01AD9
CHECKSUM_ERROR      A00F14
CHECK_ESC           A00E36
CHECK_START         A00E82
CIN                 A00D56
CINS                A00D44
CLEAR               A017B3
CLEAR1              A0149A
CLEAR_MEMORY        A010B0
CLEAR_MEMORY1       A010D6
CLEAR_MON_RAM       A01490
COMMON              A00856
COMMON35            A00864
COMMON4             A00854
COUT                A00D32
CR                  D
CS11                A00288
CS12                A001F2
CS13                A00170
CS14                A00100
CS15                A000C0
CS16                A00052
CS17                A0042C
CS18                A003C6
CS19                A004D8
CS20                A00328
DATA_REG1           A014D2
DCODE68K            A007B8
DDATA               FFFFFFF0
DEBUG               20
DEC311              A007CC
DEC404              A007EC
DEC411              A007FC
DEC425              A0080C
DEC510              A0081A
DEC515              A0081E
DEC530              A00826
DEC535              A0082C
DEC537              A00838
DIS                 A01985
DIS1                A0157C
DISASSEMBLE         A01564
DISPLAY_REG         A012A2
DISPLAY_REG1        A012AC
DONE                A01805
EA000               A00508
EA001               A00514
EA010               A00520
EA011               A00534
EA011RTS            A0054A
EA100               A0054C
EA101               A005EE
EA1105              A005CA
EA1107              A005CE
EA1109              A005E4
EA111               A00604
EA1112              A00622
EA1113              A0063E
EA1113A             A0064E
EA1114              A00670
EA1115              A006DA
EA11153             A00712
EA11155             A0071C
EAF25               A006B8
EAF27               A006BC
EAF35               A006D0
EASY68K_SIM         0
EDIT                A01841
EDIT1               A0180F
EDIT_MEMORY         A010EA
EDIT_MEMORY2        A01108
EDIT_MEMORY3        A01172
EDIT_MEMORY4        A0116E
EDIT_MEMORY5        A01160
EEA                 A00566
EEA10               A0017A
EOT                 4
ERROR               A0191D
ESC                 1B
FDATA               A
FE10                A00562
FE11                A0064A
FE12                A0080A
FERROR              A0087E
FERROR35            A00888
FERROR39            A00894
FILL                A017CB
FILL_MEMORY         A01076
FILL_MEMORY1        A0109C
FLAG                24
FOC                 1F
FOP                 27
FORM1               A000F8
FORM10              A001C0
FORM103             A001C6
FORM104             A001CA
FORM105             A001DC
FORM10E3            A001A2
FORM10E4            A001AA
FORM10E6            A001B6
FORM10EX            A00180
FORM11              A001F8
FORM112             A00218
FORM114             A00226
FORM11SL            A00204
FORM12              A00228
FORM125             A00242
FORM12A             A00264
FORM1A              A000FC
FORM3               A00104
FORM4               A00108
FORM5               A0011C
FORM6A              A00120
FORM6D              A00130
FORM7               A00158
FORM8               A00164
FORM815             A00168
FORM9               A00174
FORM91              A004F0
FORM93              A00504
FORM95              A00506
FORMREG5            A00144
FORMREGA            A00140
FORMREGD            A00150
FORMSIZE            A004DC
FREL10              A01252
FREL15              A01264
FREL20              A0127E
FREL25              A01290
FREL30              A0129A
FRELADDR            A01244
GET_32BIT           A01038
GET_ADDRESS         A0105A
GET_ADDRESS1        A01060
GET_HEX             A00DD8
GET_HEX1            A00DEA
GET_HEX2            A00DF8
GET_HEXS            A00E08
GET_TYPE            A00E3E
HELP                A01178
HELP_LIST           A01AE8
HEX                 A0188C
HEX2DEC             A011AA
HEX_DUMP            A00F66
HEX_DUMP1           A00F96
HEX_DUMP2           A00F82
HEX_DUMP3           A00FBE
HEX_DUMP4           A00FB8
HEX_DUMP5           A00FC4
HEX_DUMP6           A00FB0
HISPC               FFFFFFFC
HX2DC               A011BA
HX2DC0              A011BE
HX2DC1              A011C6
HX2DC2              A011E0
HX2DC22             A011E2
HX2DC3              A011EC
HX2DC4              A011F4
HX2DC5              A011FC
HX2DC57             A01204
HX2DC6              A01208
IBSR                A00380
ICC                 A0037C
ICC35               A00392
ICC55               A003A8
ICCCC               A00448
ICCCC9              A0045E
IDBCC               A00368
ILINK               A000E0
ILLEGAL_INSTRUCTION  10
ILLEGAL_MSG         A01A9B
IM7788              A0001C
IM7799              A00020
IMMED               A00068
IMMED45             A0008E
IMMED55             A000C2
IMMED65             A000C8
IMMED75             A000D8
IMOVE               A000DC
IMOVE19             A004A6
IMOVEA1             A00480
IMOVEMFR            A00008
IMOVEMTR            A00038
IMOVEP              A00300
IMOVEP11            A00310
IMOVEP35            A0032C
IMOVEP66            A0033A
IMOVEQ              A00290
IMVFSR              A002B0
IMVFUSP             A002C0
IMVT44              A002DE
IMVTCCR             A002F0
IMVTSR              A002D0
IMVTUSP             A002E4
INIT_ACIA           A00D18
INT_OFF             2700
INT_ON              2000
IQUICK              A0028C
IQUICK21            A004BE
IQUICK31            A004D4
IQUICKA             A004AC
ISCC                A0035C
ISETD               A003B8
ISETD12             A003BE
ISETS               A003C8
ISHIFT              A003E4
ISHIFT13            A003F0
ISHIFT23            A00414
ISHIFT33            A00420
ISHIFT44            A00424
ISHIFTM1            A0042E
ISTOP               A00054
JUMP                A013E8
JUMP1               A0142A
JUMP_TO             A01937
KI                  A008A8
KIEND               A008AA
LF                  A
LOAD                A018D5
LOCVARSZ            10
LONG                0
LOOP                A00BFE
LOOP_BACK           A00F1C
MAIN                A00BB4
MODIFY_REG          A014A4
MOVEMR              A0073C
MOVEMR11            A0074C
MOVEMR33            A00754
MOVEMR44            A00766
MOVEMR77            A00780
MOVEMR79            A00792
MOVEMR88            A00794
MOVEMR94            A007AC
MOVEMS              A00728
MOVEMS2             A00738
MSG111              A0089E
N68                 A9
NEW                 A01853
NEW_LINE            A00D78
NEW_POINTER         A00FDA
NEXT1               A00C1E
NEXT10              A00CA2
NEXT11              A00CB0
NEXT12              A00CBE
NEXT13              A00CCC
NEXT14              A00CDA
NEXT15              A00CE8
NEXT16              A00CF6
NEXT17              A00D02
NEXT18              A00D0C
NEXT2               A00C2C
NEXT3               A00C3A
NEXT4               A00C48
NEXT5               A00C56
NEXT6               A00C64
NEXT7               A00C72
NEXT8               A00C82
NEXT9               A00C92
NOT_TOS             A0164C
NO_CHANGE           A00C10
NO_ERROR            A00F10
NUMBER              A0190D
N_FLAG              A01AE2
OFFSET              0
OPCTBL              A00AB4
OUT1X               A00F28
OUT1X1              A00F3A
OUT2X               A00F42
OUT4X               A00F4A
OUT6X               A00F52
OUT8X               A00F5A
PC_REG              A01AD1
PNT2HX              A01228
PNT4HX              A01220
PNT6HX              A0121A
PNT8HX              A01212
POINTER_NOW         A6
PRINT_BIT           A013D2
PRINT_D0            A00F62
PRINT_DEBUG         A01010
PRINT_DEC           A01184
PRINT_LINE          A015B0
PROMPT              A017B1
PSTR                A00D6A
PSTR1               A00D76
PUTHEX              A01230
QUICK               A01865
QUICK_HOME          A0101E
RAM                 0
RAMBASE             C0
RAMBASE_INIT        E000
RDRF                0
READ_DATA           A00EEA
READ_S1             A00EA4
READ_S2             A00EC4
READ_S_REC          A00E1C
READ_S_REC1         A00E2A
REG1                A0135C
REG2                A013CC
REG3                A01398
REG4                A01390
REGISTER_DISP       A01956
ROM                 A0184D
RS                  1E
SAVHEX              A01240
SCHR                A002A8
SCOMMON             A00358
SCROLL              A00D92
SCROLL1             A00D96
SEND_PROMPT         A00D9E
SEND_TITLE          A00DB8
SERVICE_ADDRESSERR  A01698
SERVICE_BUSERROR    A0168E
SERVICE_ILLEGAL     A016A2
SERVICE_MSG         A016B2
SERVICE_TRAP0       A01522
SERVICE_ZERODIV     A016AC
SKIP_PRINT_BLANK    A01656
SP                  20
SPACE               A00D8A
SR_REG              A01AD5
STACK_AREA          F4
START               A017E2
START_FOUND         A00E96
STOP                A017F4
STRING1             A019D5
SUPERVISOR_BIT      5
SUPER_STACK         E000
TBL                 A008AA
TBLE                A00AB4
TDRE                1
TEST_RAM            A01074
TITLE               A01768
TITLE1              A01783
TOP_OF_STACK        A01AC1
TO_HEX              A00DC2
TRACE_BIT           7
TRACE_JUMP          A0144C
TRACE_MSG           A01A41
TRAP0               80
TRAP1               84
TRAP10              A8
TRAP11              AC
TRAP12              B0
TRAP13              B4
TRAP14              B8
TRAP15              BC
TRAP2               88
TRAP3               8C
TRAP4               90
TRAP5               94
TRAP6               98
TRAP7               9C
TRAP8               A0
TRAP9               A4
TRAP_0              A0194C
UPLOAD              A015BC
UPLOAD1             A019AB
UPLOAD2             A015E8
UPLOAD3             A015D6
USER_ADDR           CA
USER_DATA           AA
USER_PC             F0
USER_SR             EA
USER_SS             EC
USER_STACK          1FF4
USER_USP            E6
VECINIT             A016B8
VECINIT1            A016C2
VECINIT2            A016CE
VECTABLE            A016E0
VIEW                A01A52
VIEW1               A01636
VIEW_USP            A01614
V_FLAG              A01ADC
WAIT_CR             A00E4A
WHAT3               A01520
WRITE_1             A013DE
X                   A00008
X_FLAG              A01AE5
ZERODIV_MSG         A01AB2
ZERO_TO_NINE        A00DD4
Z_FLAG              A01ADF
