00E00BC0 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 29/05/2021 19:19:59

00000000                             1  ; FILE NAME zbug_mic68k.x68
00000000                             2  ; zBug V1.0.1 for MIC68K by @kanpapa
00000000                             3  ; The source code was assembled using Easy68K 
00000000                             4  ; V1.0 1st release
00000000                             5  ; V1.0.1 Added function to Load Motorola S-record S1 format
00000000                             6  
00000000                             7  ;
00000000                             8  ; Original FILE NAME U68K.ASM 
00000000                             9  ; 
00000000                            10  ; zBug V1.0 is a small monitor program for 68000-Based Single Board Computer
00000000                            11  ; The source code was assembled using C32 CROSS ASSEMBLER VERSION 3.0
00000000                            12  ;
00000000                            13  
00000000                            14  ; Copyright (c) 2002 WICHIT SIRICHOTE email kswichit@kmitl.ac.th
00000000                            15  ; 
00000000                            16  ;
00000000                            17  ; This program is free software; you can redistribute it and/or modify
00000000                            18  ; it under the terms of the GNU General Public License as published by
00000000                            19  ; the Free Software Foundation; either version 2 of the License, orRAM
00000000                            20  ; (at your option) any later version.
00000000                            21  ;
00000000                            22  ; This program is distributed in the hope that it will be useful,
00000000                            23  ; but WITHOUT ANY WARRANTY; without even the implied warranty of
00000000                            24  ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
00000000                            25  ; GNU General Public License for more details.
00000000                            26  ;
00000000                            27  
00000000                            28  * MACROS
00000000                            29  
00000000                            30  
00000000                            31  ADDR2MEM MACRO
00000000                            32        PEA     \1(PC)         MOVE ADDRESS TO MEMORY; POSITION
00000000                            33        MOVE.L  (A7)+,\2       INDEPENDANT = TO "MOVE.L #\1,\2"
00000000                            34        ENDM
00000000                            35  
00000000                            36  
00000000                            37  SAVEREGS MACRO
00000000                            38        MOVE.L  A7,REGA7       SAVE STACK POINTER
00000000                            39        LEA     SV\@(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
00000000                            40        MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
00000000                            41        BRA     SAVE           BSR WITHOUT USING STACK
00000000                            42  SV\@  DS      0
00000000                            43        ENDM
00000000                            44  
00000000                            45  ; Use EASy68k Simulator
00000000                            46  ;EASY68K_SIM    EQU 0       ; set 0 to use ACIA1
00000000  =00000001                 47  EASY68K_SIM EQU 1       ; set 1 to use EASy68K Sim68K I/O  
00000000                            48  
00000000  =00000000                 49  BIT_ESC      EQU 0              ; ESC BIT POSITION
00000000  =00000000                 50  RAM      EQU $000000            ; RAM START ADDRESS
00000000                            51  
00000000                            52  
00000000  =00F00009                 53  ACIAC    EQU $F00009
00000000  =00F0000B                 54  ACIAD    EQU ACIAC+2
00000000                            55  
00000000  =00F20009                 56  ACIA2C    EQU $F20009
00000000  =00F2000B                 57  ACIA2D    EQU ACIA2C+2
00000000                            58  
00000000  =00F30009                 59  ACIA3C    EQU $F30009
00000000  =00F3000B                 60  ACIA3D    EQU ACIA3C+2
00000000                            61  
00000000  =00002000                 62  INT_ON   EQU  $2000    ; BOTH, SET SUPERVISOR MODE, S=1
00000000  =00002700                 63  INT_OFF  EQU  $2700
00000000                            64  
00000000  =00000000                 65  RDRF    EQU 0           ; ACIAC Receive Data Register Full
00000000  =00000001                 66  TDRE    EQU 1           ; ACIAC Transmit Data Register Empty
00000000                            67  
00000000  =00000005                 68  SUPERVISOR_BIT EQU 5
00000000                            69  
00000000  =00000007                 70  TRACE_BIT EQU 7
00000000                            71  
00000000  =0000000D                 72  CR      EQU 13
00000000  =0000000A                 73  LF      EQU 10
00000000  =00000020                 74  SP      EQU 32
00000000  =00000008                 75  BS      EQU 8
00000000  =0000001E                 76  RS      EQU $1E
00000000  =0000001B                 77  ESC     EQU $1B
00000000                            78  
00000000  =00DF0000                 79  SUPER_STACK   EQU $DF0000   ; SUPER STACK TOP Address
00000000  =00DF0000                 80  RAMBASE_INIT  EQU $DF0000   
00000000                            81  
00000000                            82  ;
00000000                            83  ; EXCEPTION VECTOR address
00000000                            84  ;
00000000  =00000080                 85  TRAP0   EQU RAM+$80
00000000  =00000084                 86  TRAP1   EQU TRAP0+4
00000000  =00000088                 87  TRAP2   EQU TRAP1+4
00000000  =0000008C                 88  TRAP3   EQU TRAP2+4
00000000  =00000090                 89  TRAP4   EQU TRAP3+4
00000000  =00000094                 90  TRAP5   EQU TRAP4+4
00000000  =00000098                 91  TRAP6   EQU TRAP5+4
00000000  =0000009C                 92  TRAP7   EQU TRAP6+4
00000000  =000000A0                 93  TRAP8   EQU TRAP7+4
00000000  =000000A4                 94  TRAP9   EQU TRAP8+4
00000000  =000000A8                 95  TRAP10  EQU TRAP9+4
00000000  =000000AC                 96  TRAP11  EQU TRAP10+4
00000000  =000000B0                 97  TRAP12  EQU TRAP11+4
00000000  =000000B4                 98  TRAP13  EQU TRAP12+4
00000000  =000000B8                 99  TRAP14  EQU TRAP13+4
00000000  =000000BC                100  TRAP15  EQU TRAP14+4
00000000                           101  
00000000  =00000008                102  BUS_ERROR EQU RAM+8
00000000  =0000000C                103  ADDRESS_ERROR EQU RAM+$C
00000000  =00000010                104  ILLEGAL_INSTRUCTION EQU RAM+$10
00000000                           105  
000000C0                           106           ORG $C0
000000C0                           107  RAMBASE  DS.L   1          ; RAM BASE ADDRESS
000000C4                           108  
000000C4                           109  ;
000000C4                           110  ; ROM START
000000C4                           111  ;
00E00000                           112      ORG $E00000
00E00000                           113     ; Reset start vector
00E00000= 00DF0000                 114     DC.L SUPER_STACK        ; TOP OF SUPERVISOR STACK $130000
00E00004= 00E00BC0                 115     DC.L MAIN               ; MONITOR START
00E00008                           116  
00E00008= 00000008                 117     DC.L BUS_ERROR
00E0000C= 0000000C                 118     DC.L ADDRESS_ERROR
00E00010= 00000010                 119     DC.L ILLEGAL_INSTRUCTION
00E00014                           120  
00E00014                           121  
00E00014  =0000000A                122  FDATA   EQU    10             ;OFFSET TO DATA
00E00014  =0000001F                123  FOC     EQU    31             ;OFFSET TO OP-CODE (NO LABEL FIELD)
00E00014  =00000027                124  FOP     EQU    39             ;OFFSET TO OPERAND (NO LABEL FIELD)
00E00014                           125  
00E00014  =00000020                126  BLANK    EQU   $20
00E00014  =00000050                127  BUFSIZE  EQU   80
00E00014  =00000010                128  LOCVARSZ EQU   16
00E00014  =00000004                129  EOT      EQU   $04
00E00014                           130  
00E00014                           131  ; CAUSES ORGIN MODULO 4
00E00014                           132  LONG     MACRO
00E00014                           133           DS      0
00E00014                           134           DS.B    (*-X)&2
00E00014                           135           ENDM
00E00014                           136  
00E00014                           137  
00E00014                           138  X        DS      0              BASE ADDRESS THIS MODULE
00E00014                           139m          LONG
00E00014                           140m          DS      0
00E00014                           141m          DS.B    (*-X)&2
00E00014                           142m          ENDM
00E00014                           143  
00E00014                           144  *  MOVEM REGISTERS TO EA
00E00014                           145  *
00E00014                           146  *        01001D001S......
00E00014                           147  *        ..........XXXXXX       EFFECTIVE ADDRESS
00E00014                           148  *        .........0......       WORD
00E00014                           149  *        .........1......       LONG
00E00014                           150  *        .....0..........       REGISTER TO MEMORY
00E00014                           151  *        .....1..........       MEMORY TO REGISTER
00E00014                           152  *
00E00014                           153  
00E00014                           154  IMOVEMFR DS      0
00E00014  6100 071E                155           BSR     MOVEMS         SIZE
00E00018                           156  
00E00018  7C38                     157           MOVEQ   #$0038,D6
00E0001A  CC54                     158           AND.W   (A4),D6
00E0001C  0C46 0020                159           CMPI.W  #$0020,D6
00E00020  6706                     160           BEQ.S   IM7788         PREDECREMENT MODE
00E00022                           161  
00E00022  7C01                     162           MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
00E00024  7200                     163           MOVEQ   #0,D1          D1 = BIT POSITION
00E00026  6004                     164           BRA.S   IM7799
00E00028                           165  
00E00028  7CFF                     166  IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
00E0002A  720F                     167           MOVEQ   #15,D1         D1 = BIT POSITION
00E0002C  6100 071A                168  IM7799   BSR     MOVEMR         BUILD MASK WORD
00E00030                           169  
00E00030  1CFC 002C                170           MOVE.B  #',',(A6)+     STORE COMMA
00E00034                           171  
00E00034  5483                     172           ADDQ.L  #2,D3
00E00036  3814                     173           MOVE.W  (A4),D4
00E00038  3E3C 01F4                174           MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
00E0003C  6100 0534                175           BSR     EEA
00E00040  601C                     176           BRA.S   CS16           COMMON
00E00042                           177  
00E00042                           178m          LONG
00E00042                           179m          DS      0
00E00042                           180m          DS.B    (*-X)&2
00E00044                           181m          ENDM
00E00044                           182  * MOVEM  EA  TO REGISTERS
00E00044                           183  *
00E00044  6100 06EE                184  IMOVEMTR BSR     MOVEMS         SIZE
00E00048  5483                     185           ADDQ.L  #2,D3
00E0004A  3E3C 07EC                186           MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
00E0004E  6100 0522                187           BSR     EEA
00E00052                           188  
00E00052  1CFC 002C                189           MOVE.B  #',',(A6)+     STORE COMMA
00E00056                           190  
00E00056  7C01                     191           MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
00E00058  7200                     192           MOVEQ   #0,D1          D1 = BIT POSITION
00E0005A  6100 06EC                193           BSR     MOVEMR
00E0005E                           194  
00E0005E  606C                     195  CS16     BRA.S   CS15           COMMON
00E00060                           196  
00E00060                           197  
00E00060                           198m          LONG
00E00060                           199m          DS      0
00E00060                           200m          DS.B    (*-X)&2
00E00060                           201m          ENDM
00E00060                           202  ISTOP    DS      0
00E00060  302C 0002                203           MOVE.W  2(A4),D0
00E00064  1CFC 0023                204           MOVE.B  #'#',(A6)+     IMMEDIATE
00E00068  1CFC 0024                205           MOVE.B  #'$',(A6)+     HEX
00E0006C  6100 11A2                206           BSR     PNT4HX         VALUE
00E00070  6000 07EE                207           BRA     COMMON4
00E00074                           208  
00E00074                           209m          LONG
00E00074                           210m          DS      0
00E00074                           211m          DS.B    (*-X)&2
00E00074                           212m          ENDM
00E00074                           213  IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
00E00074  6100 0472                214           BSR     FORMSIZE
00E00078  5483                     215           ADDQ.L  #2,D3          SIZE = 4
00E0007A  1CFC 0023                216           MOVE.B  #'#',(A6)+     IMMEDIATE
00E0007E                           217  
00E0007E  4280                     218           CLR.L   D0
00E00080  302C 0002                219           MOVE.W  2(A4),D0       D0 = EXTENSION WORD
00E00084  3214                     220           MOVE.W  (A4),D1
00E00086  EC49                     221           LSR.W   #6,D1
00E00088  0241 0003                222           ANDI.W  #3,D1
00E0008C  6746                     223           BEQ.S   IMMED65        .BYTE
00E0008E                           224  
00E0008E  0C01 0001                225           CMPI.B  #1,D1
00E00092  6750                     226           BEQ.S   IMMED75        .WORD
00E00094                           227  
00E00094  5483                     228           ADDQ.L  #2,D3          .LONG    SIZE = 6
00E00096  202C 0002                229           MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
00E0009A                           230  
00E0009A  6100 10FE                231  IMMED45  BSR     HEX2DEC        DECIMAL
00E0009E                           232  
00E0009E  1CC5                     233           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E000A0                           234  
00E000A0  3014                     235           MOVE    (A4),D0
00E000A2  0240 003F                236           ANDI.W  #$003F,D0
00E000A6  0C40 003C                237           CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
00E000AA  6622                     238           BNE.S   IMMED55        NOT FOUND
00E000AC                           239  
00E000AC  3014                     240           MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
00E000AE  0240 4000                241           ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
00E000B2  6600 07D6                242           BNE     FERROR         0600   0400  0C00
00E000B6                           243  
00E000B6  3214                     244           MOVE.W  (A4),D1
00E000B8  0241 00C0                245           ANDI.W  #$00C0,D1
00E000BC  0C41 0080                246           CMPI.W  #$0080,D1
00E000C0  6700 07C8                247           BEQ     FERROR         .LONG NOT ALLOWED
00E000C4                           248  
00E000C4  1CFC 0053                249           MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
00E000C8  1CFC 0052                250           MOVE.B  #'R',(A6)+
00E000CC  603E                     251  CS15     BRA.S   CS14           COMMON
00E000CE                           252  
00E000CE  6100 04A2                253  IMMED55  BSR     EEA
00E000D2  6038                     254           BRA.S   CS14           COMMON
00E000D4                           255  
00E000D4  2200                     256  IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
00E000D6  E049                     257           LSR.W   #8,D1          D1 = 00000000XXXXXXXX
00E000D8  670A                     258           BEQ.S   IMMED75
00E000DA  2200                     259           MOVE.L  D0,D1
00E000DC  EE41                     260           ASR.W   #7,D1
00E000DE  5241                     261           ADDQ.W  #1,D1          CHECK FOR NEGATIVE
00E000E0  6600 07A8                262           BNE     FERROR
00E000E4                           263  
00E000E4  48C0                     264  IMMED75  EXT.L   D0
00E000E6  60B2                     265           BRA     IMMED45
00E000E8                           266  
00E000E8                           267  *  BIT   5432109876543210
00E000E8                           268  *        ....RRRMMM......       DESTINATION REGISTER MODE
00E000E8                           269  *        ..........MMMRRR       SOURCE MODE REGISTER
00E000E8                           270  *        0001............       .BYTE
00E000E8                           271  *        0011............       .WORD
00E000E8                           272  *        0010............       .LONG
00E000E8                           273  *
00E000E8                           274  * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
00E000E8                           275m          LONG
00E000E8                           276m          DS      0
00E000E8                           277m          DS.B    (*-X)&2
00E000E8                           278m          ENDM
00E000E8                           279  IMOVE    DS      0
00E000E8  6000 03A2                280           BRA     IMOVEA1
00E000EC                           281  
00E000EC                           282m          LONG
00E000EC                           283m          DS      0
00E000EC                           284m          DS.B    (*-X)&2
00E000EC                           285m          ENDM
00E000EC                           286  ILINK    DS      0
00E000EC  615E                     287           BSR.S   FORMREGA
00E000EE                           288  
00E000EE  1CC5                     289           MOVE.B  D5,(A6)+       COMMA SERARATOR
00E000F0                           290  
00E000F0  1CFC 0023                291           MOVE.B  #'#',(A6)+
00E000F4  302C 0002                292           MOVE.W  2(A4),D0
00E000F8  48C0                     293           EXT.L   D0
00E000FA  6100 109E                294           BSR     HEX2DEC        DECIMAL DISPLACEMENT
00E000FE  6000 0760                295           BRA     COMMON4
00E00102                           296  
00E00102                           297m          LONG
00E00102                           298m          DS      0
00E00102                           299m          DS.B    (*-X)&2
00E00104                           300m          ENDM
00E00104                           301  FORM1    DS      0              CLR  NEG  NEGX  NOT TST
00E00104  6100 03E2                302           BSR.L   FORMSIZE
00E00108                           303  
00E00108                           304  
00E00108                           305  *                               NBCD TAS
00E00108  6100 0468                306  FORM1A   BSR     EEA            DATA ALTERABLE ONLY
00E0010C  606E                     307  CS14     BRA.S   CS13           COMMON
00E0010E                           308  
00E0010E                           309m          LONG
00E0010E                           310m          DS      0
00E0010E                           311m          DS.B    (*-X)&2
00E00110                           312m          ENDM
00E00110                           313  FORM3    DS      0              EXT  SWAP
00E00110  614A                     314           BSR.S   FORMREGD
00E00112  6068                     315           BRA.S   CS13           COMMON
00E00114                           316  
00E00114                           317m          LONG
00E00114                           318m          DS      0
00E00114                           319m          DS.B    (*-X)&2
00E00114                           320m          ENDM
00E00114                           321  FORM4    DS      0              TRAP
00E00114  1CFC 0023                322           MOVE.B  #'#',(A6)+
00E00118  3014                     323           MOVE.W  (A4),D0
00E0011A  0280 0000000F            324           ANDI.L  #$0F,D0
00E00120  6100 1078                325           BSR     HEX2DEC        DECIMAL
00E00124  6056                     326           BRA.S   CS13           COMMON
00E00126                           327  
00E00126                           328m          LONG
00E00126                           329m          DS      0
00E00126                           330m          DS.B    (*-X)&2
00E00128                           331m          ENDM
00E00128                           332  FORM5    DS      0              UNLNK
00E00128  6122                     333           BSR.S   FORMREGA
00E0012A  6050                     334           BRA.S   CS13           COMMON
00E0012C                           335  
00E0012C                           336  *  BIT   5432109876543210
00E0012C                           337  *        ....RRR.........       ADDRESS REGISTER
00E0012C                           338  *        ..........XXXXXX       EFFECTIVE ADDRESS
00E0012C                           339  *
00E0012C                           340m          LONG
00E0012C                           341m          DS      0
00E0012C                           342m          DS.B    (*-X)&2
00E0012C                           343m          ENDM
00E0012C                           344  FORM6A   DS      0              LEA
00E0012C  3E3C 07E4                345           MOVE.W  #$7E4,D7       CONTROL ADDRESSING
00E00130  6154                     346           BSR.S   EEA10
00E00132                           347  
00E00132  1CC5                     348           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E00134                           349  
00E00134  3814                     350           MOVE.W  (A4),D4
00E00136  EF5C                     351           ROL.W   #7,D4
00E00138  6112                     352           BSR.S   FORMREGA
00E0013A  6040                     353           BRA.S   CS13           COMMON
00E0013C                           354  
00E0013C                           355  *  BIT   5432109876543210
00E0013C                           356  *        ....DDD.........       DATA REGISTER
00E0013C                           357  *        ..........XXXXXX       EFFECTIVE ADDRESS
00E0013C                           358  *
00E0013C                           359m          LONG
00E0013C                           360m          DS      0
00E0013C                           361m          DS.B    (*-X)&2
00E0013C                           362m          ENDM
00E0013C                           363  FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
00E0013C  3E3C 0FFD                364           MOVE.W  #$FFD,D7       DATA ADDRESSING
00E00140  6144                     365           BSR.S   EEA10
00E00142                           366  
00E00142  1CC5                     367           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E00144                           368  
00E00144  3814                     369           MOVE.W  (A4),D4
00E00146  EF5C                     370           ROL.W   #7,D4
00E00148  6112                     371           BSR.S   FORMREGD
00E0014A  6030                     372           BRA.S   CS13           COMMON
00E0014C                           373  
00E0014C  1CFC 0041                374  FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
00E00150  0204 0007                375  FORMREG5 ANDI.B  #$07,D4
00E00154  0004 0030                376           ORI.B   #'0',D4
00E00158  1CC4                     377           MOVE.B  D4,(A6)+
00E0015A  4E75                     378           RTS
00E0015C                           379  
00E0015C  1CFC 0044                380  FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
00E00160  60EE                     381           BRA     FORMREG5
00E00162                           382  
00E00162                           383  *  BIT   5432109876543210
00E00162                           384  *        ....DDD......DDD       DATA REGISTERS
00E00162                           385  *
00E00162                           386m          LONG
00E00162                           387m          DS      0
00E00162                           388m          DS.B    (*-X)&2
00E00164                           389m          ENDM
00E00164                           390  FORM7    DS      0              EXG
00E00164  EF5C                     391           ROL.W   #7,D4
00E00166  61F4                     392           BSR     FORMREGD
00E00168                           393  
00E00168  1CC5                     394           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E0016A                           395  
00E0016A  3814                     396           MOVE.W  (A4),D4
00E0016C  61EE                     397           BSR     FORMREGD
00E0016E  600C                     398           BRA.S   CS13           COMMON
00E00170                           399  
00E00170                           400  *  BIT   5432109876543210
00E00170                           401  *        ....AAA......AAA       ADDRESS REGISTERS
00E00170                           402  *
00E00170                           403m          LONG
00E00170                           404m          DS      0
00E00170                           405m          DS.B    (*-X)&2
00E00170                           406m          ENDM
00E00170                           407  FORM8    DS      0              EXG
00E00170  EF5C                     408           ROL.W   #7,D4
00E00172  61D8                     409           BSR     FORMREGA
00E00174                           410  
00E00174  1CFC 002C                411  FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
00E00178                           412  
00E00178  3814                     413           MOVE.W  (A4),D4
00E0017A  61D0                     414           BSR     FORMREGA
00E0017C  6000 0080                415  CS13     BRA     CS12           COMMON
00E00180                           416  
00E00180                           417  *  BIT   5432109876543210
00E00180                           418  *        ....DDD.........       DATA REGISTER
00E00180                           419  *        .............AAA       ADDRESS REGISTER
00E00180                           420  *
00E00180                           421m          LONG
00E00180                           422m          DS      0
00E00180                           423m          DS.B    (*-X)&2
00E00180                           424m          ENDM
00E00180                           425  FORM9    DS      0              EXG
00E00180  EF5C                     426           ROL.W   #7,D4
00E00182  61D8                     427           BSR     FORMREGD       DATA REGISTER
00E00184  60EE                     428           BRA     FORM815
00E00186                           429  
00E00186  6000 03EA                430  EEA10    BRA     EEA
00E0018A                           431  
00E0018A                           432  *  BIT   5432109876543210
00E0018A                           433  *        ..........AAAAAA         EFFECTIVE ADDRESS
00E0018A                           434  *        .......MMM......         OP-MODE
00E0018A                           435  *        ....RRR.........         D-REGISTER
00E0018A                           436  *        .......011......         WORD  EA,A@
00E0018A                           437  *        .......111......         LONG  EA,A@
00E0018A                           438  *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
00E0018A                           439  *        .......0........         EA,D@
00E0018A                           440  *        .......1........         D@,EA
00E0018A                           441  *        ........00......         BYTE
00E0018A                           442  *        ........01......         WORD
00E0018A                           443  *        ........10......         LONG
00E0018A                           444  *
00E0018A                           445m          LONG
00E0018A                           446m          DS      0
00E0018A                           447m          DS.B    (*-X)&2
00E0018C                           448m          ENDM
00E0018C                           449  *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
00E0018C                           450  FORM10EX DS      0              ADD  CMP  SUB
00E0018C  3E3C 0FFF                451           MOVE.W  #$FFF,D7       ALL MODES ALLOWED
00E00190  2004                     452           MOVE.L  D4,D0
00E00192  0240 01C0                453           ANDI.W  #$01C0,D0
00E00196  673A                     454           BEQ.S   FORM103        .......000......
00E00198  0C40 01C0                455           CMPI.W  #$01C0,D0
00E0019C  6710                     456           BEQ.S   FORM10E3       .......111......
00E0019E  0C40 00C0                457           CMPI.W  #$00C0,D0
00E001A2  661E                     458           BNE.S   FORM10E6
00E001A4                           459  
00E001A4  1AFC 002E                460           MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
00E001A8  1AFC 0057                461           MOVE.B  #'W',(A5)+
00E001AC  6008                     462           BRA.S   FORM10E4
00E001AE                           463  
00E001AE  1AFC 002E                464  FORM10E3 MOVE.B  #'.',(A5)+
00E001B2  1AFC 004C                465           MOVE.B  #'L',(A5)+
00E001B6                           466  
00E001B6  61CE                     467  FORM10E4 BSR     EEA10
00E001B8                           468  
00E001B8  1CC5                     469           MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
00E001BA                           470  
00E001BA  3814                     471           MOVE.W  (A4),D4
00E001BC  EF5C                     472           ROL.W   #7,D4
00E001BE  618C                     473           BSR     FORMREGA       <EA>,A@
00E001C0  603C                     474           BRA.S   CS12           COMMON
00E001C2                           475  
00E001C2  0814 0000                476  FORM10E6 BTST.B  #0,(A4)
00E001C6  6620                     477           BNE.S   FORM105        .......1........    D@,<EA>
00E001C8  600C                     478           BRA.S   FORM104        .......0........    <EA>,D@
00E001CA                           479  
00E001CA                           480  *  BIT   5432109876543210
00E001CA                           481  *        ..........AAAAAA       EFFECTIVE ADDRESS
00E001CA                           482  *        .......MMM......       OP-MODE
00E001CA                           483  *        ....RRR.........       D-REGISTER
00E001CA                           484  *        .......0........       EA,D@
00E001CA                           485  *        .......1........       D@,EA
00E001CA                           486  *        ........00......       BYTE
00E001CA                           487  *        ........01......       WORD
00E001CA                           488  *        ........10......       LONG
00E001CA                           489m          LONG
00E001CA                           490m          DS      0
00E001CA                           491m          DS.B    (*-X)&2
00E001CC                           492m          ENDM
00E001CC                           493  FORM10   DS      0              AND  EOR  OR
00E001CC  0814 0000                494           BTST.B  #0,(A4)
00E001D0  6616                     495           BNE.S   FORM105
00E001D2                           496  
00E001D2  3E3C 0FFD                497  FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
00E001D6  6100 0310                498  FORM104  BSR     FORMSIZE
00E001DA  61AA                     499           BSR     EEA10          <EA>,D@
00E001DC                           500  
00E001DC  1CC5                     501           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E001DE                           502  
00E001DE  1814                     503           MOVE.B  (A4),D4
00E001E0  E20C                     504           LSR.B   #1,D4
00E001E2  6100 FF78                505           BSR     FORMREGD
00E001E6  6016                     506           BRA.S   CS12           COMMON
00E001E8                           507  
00E001E8  6100 02FE                508  FORM105  BSR     FORMSIZE       D@,<EA>
00E001EC  1814                     509           MOVE.B  (A4),D4
00E001EE  E20C                     510           LSR.B   #1,D4
00E001F0  6100 FF6A                511           BSR     FORMREGD
00E001F4                           512  
00E001F4  1CC5                     513           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E001F6                           514  
00E001F6  3814                     515           MOVE.W  (A4),D4
00E001F8  3E3C 01FD                516           MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
00E001FC  6188                     517           BSR     EEA10
00E001FE  6000 0662                518  CS12     BRA     COMMON
00E00202                           519  
00E00202                           520m          LONG
00E00202                           521m          DS      0
00E00202                           522m          DS.B    (*-X)&2
00E00204                           523m          ENDM
00E00204                           524  *                               PEA     (JMP  JSR)
00E00204  3E3C 07E4                525  FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
00E00208  6100 FF7C                526           BSR     EEA10
00E0020C  60F0                     527           BRA     CS12           COMMON
00E0020E                           528  
00E0020E                           529m          LONG
00E0020E                           530m          DS      0
00E0020E                           531m          DS.B    (*-X)&2
00E00210                           532m          ENDM
00E00210                           533  *                               JMP  JSR
00E00210  2004                     534  FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
00E00212  0240 003F                535           ANDI.W  #$3F,D0
00E00216  0C40 0038                536           CMPI.W  #$38,D0
00E0021A  6608                     537           BNE.S   FORM112        NOT .S
00E0021C  1AFC 002E                538           MOVE.B  #'.',(A5)+     PERIOD
00E00220  1AFC 0053                539           MOVE.B  #'S',(A5)+     S
00E00224  0C40 0039                540  FORM112  CMPI.W  #$39,D0
00E00228  6608                     541           BNE.S   FORM114
00E0022A  1AFC 002E                542           MOVE.B  #'.',(A5)+     PERIOD
00E0022E  1AFC 004C                543           MOVE.B  #'L',(A5)+     L
00E00232  60D0                     544  FORM114  BRA     FORM11
00E00234                           545  
00E00234                           546  *  BIT   5432109876543210
00E00234                           547  *        ....XXX.....0...       DATA DESTINATION REGISTER
00E00234                           548  *        ....XXX.....1...       ADDRESS REGISTER
00E00234                           549  *        ....XXX.00......       BYTE
00E00234                           550  *        ........01......       WORD
00E00234                           551  *        ........10......       LONG
00E00234                           552  *        ............0...       DATA REGISTER TO DATA REGISTER
00E00234                           553  *        ............1...       MEMORY TO MEMORY
00E00234                           554  *        ............0XXX       DATA SOURCE REGISTER
00E00234                           555  *        ............1XXX       ADDRESS SOURCE REGISTER
00E00234                           556  *
00E00234                           557m          LONG
00E00234                           558m          DS      0
00E00234                           559m          DS.B    (*-X)&2
00E00234                           560m          ENDM
00E00234                           561  FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
00E00234  6100 02B2                562           BSR     FORMSIZE
00E00238                           563  
00E00238  0804 0003                564           BTST    #3,D4
00E0023C  6610                     565           BNE.S   FORM125
00E0023E                           566  
00E0023E  6100 FF1C                567           BSR     FORMREGD       D@,D@;   FORMAT SOURCE
00E00242                           568  
00E00242  1CC5                     569           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E00244                           570  
00E00244  1814                     571           MOVE.B  (A4),D4
00E00246  E20C                     572           LSR.B   #1,D4
00E00248  6100 FF12                573           BSR     FORMREGD       FORMAT DESTINATION
00E0024C  6046                     574           BRA.S   CS11           COMMON
00E0024E                           575  
00E0024E  1CFC 002D                576  FORM125  MOVE.B  #'-',(A6)+     -
00E00252  1CFC 0028                577           MOVE.B  #'(',(A6)+     (
00E00256  6100 FEF4                578           BSR     FORMREGA       A@    SOURCE
00E0025A                           579  
00E0025A  203C 282D2C29            580           MOVE.L  #'(-,)',D0     ),-(
00E00260  6152                     581           BSR.S   SCHR           STORE CHARS
00E00262                           582  
00E00262  1814                     583           MOVE.B  (A4),D4
00E00264  E20C                     584           LSR.B   #1,D4
00E00266  6100 FEE4                585           BSR     FORMREGA       A@   DESTINATION
00E0026A  1CFC 0029                586           MOVE.B  #')',(A6)+
00E0026E  6024                     587           BRA.S   CS11           COMMON
00E00270                           588  
00E00270                           589  *  BIT   5432109876543210
00E00270                           590  *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
00E00270                           591  *        ....XXX.00......       BYTE
00E00270                           592  *        ........01......       WORD
00E00270                           593  *        ........10......       LONG
00E00270                           594  *        ............1...       MEMORY TO MEMORY
00E00270                           595  *        ............1XXX       ADDRESS SOURCE REGISTER
00E00270                           596  *
00E00270                           597m          LONG
00E00270                           598m          DS      0
00E00270                           599m          DS.B    (*-X)&2
00E00270                           600m          ENDM
00E00270                           601  FORM12A  DS      0              CMPM
00E00270  6100 0276                602           BSR     FORMSIZE
00E00274                           603  
00E00274  1CFC 0028                604           MOVE.B  #'(',(A6)+     (
00E00278  6100 FED2                605           BSR     FORMREGA       A@
00E0027C                           606  
00E0027C  203C 282C2B29            607           MOVE.L  #'(,+)',D0     )+,(
00E00282  6130                     608           BSR.S   SCHR           STORE CHARS
00E00284                           609  
00E00284  1814                     610           MOVE.B  (A4),D4
00E00286  E20C                     611           LSR.B   #1,D4
00E00288  6100 FEC2                612           BSR     FORMREGA       A@
00E0028C  1CFC 0029                613           MOVE.B  #')',(A6)+
00E00290  1CFC 002B                614           MOVE.B  #'+',(A6)+
00E00294  6000 05CC                615  CS11     BRA     COMMON
00E00298                           616  
00E00298                           617m          LONG
00E00298                           618m          DS      0
00E00298                           619m          DS.B    (*-X)&2
00E00298                           620m          ENDM
00E00298  6000 021E                621  IQUICK   BRA     IQUICKA        ADDQ  SUBQ
00E0029C                           622  
00E0029C                           623  *  BIT   5432109876543210
00E0029C                           624  *        0111...0........       FIXED
00E0029C                           625  *        ....RRR.........       DATA REGISTER
00E0029C                           626  *        ........DDDDDDDD       SIGN EXTENDED DATA
00E0029C                           627  *
00E0029C                           628m          LONG
00E0029C                           629m          DS      0
00E0029C                           630m          DS.B    (*-X)&2
00E0029C                           631m          ENDM
00E0029C                           632  IMOVEQ   DS      0
00E0029C  1CFC 0023                633           MOVE.B  #'#',(A6)+     IMMEDIATE
00E002A0                           634  
00E002A0  3014                     635           MOVE.W  (A4),D0
00E002A2  4880                     636           EXT.W   D0
00E002A4  48C0                     637           EXT.L   D0
00E002A6  6100 0EF2                638           BSR     HEX2DEC        DECIMAL
00E002AA                           639  
00E002AA  1CC5                     640           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E002AC                           641  
00E002AC  EF5C                     642           ROL.W   #7,D4
00E002AE  6100 FEAC                643           BSR     FORMREGD
00E002B2  60E0                     644           BRA     CS11           COMMON
00E002B4                           645  
00E002B4  1CC0                     646  SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
00E002B6  E088                     647           LSR.L   #8,D0
00E002B8  66FA                     648           BNE     SCHR           MORE TO OUTPUT
00E002BA  4E75                     649           RTS
00E002BC                           650  
00E002BC                           651  * MOVE FROM SR  (STATUS REGISTER)
00E002BC                           652  *
00E002BC                           653m          LONG
00E002BC                           654m          DS      0
00E002BC                           655m          DS.B    (*-X)&2
00E002BC                           656m          ENDM
00E002BC  203C 2C525300            657  IMVFSR   MOVE.L  #',RS'+0,D0   SR,
00E002C2                           658  
00E002C2  61F0                     659           BSR     SCHR
00E002C4  6100 02AC                660           BSR     EEA            DATA ALTERABLE
00E002C8  60CA                     661           BRA     CS11           COMMON
00E002CA                           662  
00E002CA                           663  * MOVE FROM USP (USER STACK POINTER)
00E002CA                           664  *
00E002CA                           665m          LONG
00E002CA                           666m          DS      0
00E002CA                           667m          DS.B    (*-X)&2
00E002CC                           668m          ENDM
00E002CC  203C 2C505355            669  IMVFUSP  MOVE.L  #',PSU',D0     USP,
00E002D2  61E0                     670           BSR     SCHR
00E002D4  6100 FE76                671           BSR     FORMREGA
00E002D8  60BA                     672           BRA     CS11           COMMON
00E002DA                           673  
00E002DA                           674  * MOVE TO SR (STATUS REGISTER)
00E002DA                           675  *
00E002DA                           676m          LONG
00E002DA                           677m          DS      0
00E002DA                           678m          DS.B    (*-X)&2
00E002DC                           679m          ENDM
00E002DC  3E3C 0FFD                680  IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
00E002E0  6100 0290                681           BSR     EEA
00E002E4  203C 52532C00            682           MOVE.L  #'RS,'+0,D0   ,SR
00E002EA  61C8                     683  IMVT44   BSR     SCHR
00E002EC  60A6                     684           BRA     CS11           COMMON
00E002EE                           685  
00E002EE                           686  * MOVE TO USP (USER STACK POINTER)
00E002EE                           687  *
00E002EE                           688m          LONG
00E002EE                           689m          DS      0
00E002EE                           690m          DS.B    (*-X)&2
00E002F0                           691m          ENDM
00E002F0  6100 FE5A                692  IMVTUSP  BSR     FORMREGA
00E002F4  203C 5053552C            693           MOVE.L  #'PSU,',D0     ,USP
00E002FA  60EE                     694           BRA     IMVT44
00E002FC                           695  
00E002FC                           696  *  MOVE TO CCR (CONDITION CODE REGISTER)
00E002FC                           697  *
00E002FC                           698m          LONG
00E002FC                           699m          DS      0
00E002FC                           700m          DS.B    (*-X)&2
00E002FC                           701m          ENDM
00E002FC  3E3C 0FFD                702  IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
00E00300  6100 0270                703           BSR     EEA
00E00304  203C 5243432C            704           MOVE.L  #'RCC,',D0     ,CCR
00E0030A  60DE                     705           BRA     IMVT44
00E0030C                           706  
00E0030C                           707  *  BIT   5432109876543210
00E0030C                           708  *        0000...1..001...       FIXED
00E0030C                           709  *        ....XXX.........       DATA REGISTER
00E0030C                           710  *        ........0.......       MEMORY TO REGISTER
00E0030C                           711  *        ........1.......       REGISTER TO MEMORY
00E0030C                           712  *        .........0......       WORD
00E0030C                           713  *        .........1......       LONG
00E0030C                           714  *        .............XXX       ADDRESS REGISTER
00E0030C                           715  *
00E0030C                           716m          LONG
00E0030C                           717m          DS      0
00E0030C                           718m          DS.B    (*-X)&2
00E0030C                           719m          ENDM
00E0030C                           720  IMOVEP   DS      0
00E0030C  1AFC 002E                721           MOVE.B  #'.',(A5)+     D@,#(A@)
00E00310  303C 4C57                722           MOVE.W  #'LW',D0
00E00314  0804 0006                723           BTST    #6,D4
00E00318  6702                     724           BEQ.S   IMOVEP11       USE "W"
00E0031A  E048                     725           LSR.W   #8,D0          USE "L"
00E0031C  1AC0                     726  IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
00E0031E                           727  
00E0031E  1814                     728           MOVE.B  (A4),D4
00E00320  E20C                     729           LSR.B   #1,D4
00E00322                           730  
00E00322  082C 0007 0001           731           BTST.B  #7,1(A4)
00E00328  670E                     732           BEQ.S   IMOVEP35
00E0032A                           733  
00E0032A  6100 FE30                734           BSR     FORMREGD       D@,$HHHH(A@)
00E0032E                           735  
00E0032E  1CC5                     736           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E00330                           737  
00E00330  3814                     738           MOVE.W  (A4),D4
00E00332  6112                     739           BSR.S   IMOVEP66
00E00334  6000 052A                740  CS20     BRA     COMMON4
00E00338                           741  
00E00338  610C                     742  IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
00E0033A                           743  
00E0033A  1CC5                     744           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E0033C                           745  
00E0033C  1814                     746           MOVE.B  (A4),D4
00E0033E  E20C                     747           LSR.B   #1,D4
00E00340  6100 FE1A                748           BSR     FORMREGD
00E00344  60EE                     749           BRA     CS20           COMMON4
00E00346                           750  
00E00346  1CFC 0024                751  IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
00E0034A  302C 0002                752           MOVE.W  2(A4),D0
00E0034E  6100 0EC0                753           BSR     PNT4HX
00E00352                           754  
00E00352  1CFC 0028                755           MOVE.B  #'(',(A6)+
00E00356                           756  
00E00356  3814                     757           MOVE.W  (A4),D4
00E00358  6100 FDF2                758           BSR     FORMREGA
00E0035C  1CFC 0029                759           MOVE.B  #')',(A6)+
00E00360  4E75                     760           RTS
00E00362                           761  
00E00362                           762m          LONG
00E00362                           763m          DS      0
00E00362                           764m          DS.B    (*-X)&2
00E00364                           765m          ENDM
00E00364  6000 04FC                766  SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
00E00368                           767  
00E00368                           768m          LONG
00E00368                           769m          DS      0
00E00368                           770m          DS.B    (*-X)&2
00E00368                           771m          ENDM
00E00368  6100 00EA                772  ISCC     BSR     ICCCC          GET REST OF OP-CODE
00E0036C  6100 0204                773           BSR     EEA            DATA ALTERABLE
00E00370  60F2                     774           BRA     SCOMMON
00E00372                           775  
00E00372                           776  
00E00372                           777m          LONG
00E00372                           778m          DS      0
00E00372                           779m          DS.B    (*-X)&2
00E00374                           780m          ENDM
00E00374                           781  IDBCC    DS      0              DB--
00E00374  3814                     782           MOVE.W  (A4),D4
00E00376  6100 FDE4                783           BSR     FORMREGD
00E0037A                           784  
00E0037A  1CC5                     785           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E0037C  1CFC 0024                786           MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
00E00380                           787  
00E00380  6100 00D2                788           BSR     ICCCC
00E00384  602E                     789           BRA.S   ICC55
00E00386                           790  
00E00386                           791  *  BIT   5432109876543210
00E00386                           792  *        0110............       FIXED
00E00386                           793  *        ....CCCC........       CONDITION
00E00386                           794  *        ........DDDDDDD0       DISPLACEMENT
00E00386                           795  *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
00E00386                           796  *
00E00386                           797m          LONG
00E00386                           798m          DS      0
00E00386                           799m          DS.B    (*-X)&2
00E00388                           800m          ENDM
00E00388                           801  ICC      DS      0              B--
00E00388  6100 00CA                802           BSR     ICCCC
00E0038C                           803  
00E0038C  1CFC 0024                804  IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
00E00390                           805  
00E00390  4A04                     806           TST.B   D4
00E00392  6720                     807           BEQ.S   ICC55          16 BIT DISPLACEMENT
00E00394                           808  
00E00394  1AFC 002E                809           MOVE.B  #'.',(A5)+
00E00398  1AFC 0053                810           MOVE.B  #'S',(A5)+
00E0039C  4884                     811           EXT.W   D4             8 BIT DISPLACEMENT
00E0039E                           812  
00E0039E  48C4                     813  ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
00E003A0  D8A9 FFFC                814           ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
00E003A4  5484                     815           ADDQ.L  #2,D4          + TWO
00E003A6  2004                     816           MOVE.L  D4,D0
00E003A8                           817  
00E003A8  E284                     818           ASR.L   #1,D4
00E003AA  6500 04DE                819           BCS     FERROR         ODD BOUNDRY DISPLACEMENT
00E003AE                           820  
00E003AE  6100 0E5A                821           BSR     PNT6HX
00E003B2  60B0                     822           BRA     SCOMMON
00E003B4                           823  
00E003B4  5483                     824  ICC55    ADDQ.L  #2,D3          SIZE
00E003B6  382C 0002                825           MOVE.W  2(A4),D4
00E003BA  1AFC 002E                826           MOVE.B  #'.',(A5)+
00E003BE  1AFC 004C                827           MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
00E003C2  60DA                     828           BRA     ICC35
00E003C4                           829  
00E003C4                           830m          LONG
00E003C4                           831m          DS      0
00E003C4                           832m          DS.B    (*-X)&2
00E003C4                           833m          ENDM
00E003C4                           834  *                               BCHG  BCLR  BSET  BTST
00E003C4                           835  ISETD    DS      0              DYNAMIC BIT
00E003C4  EF5C                     836           ROL.W   #7,D4
00E003C6  6100 FD94                837           BSR     FORMREGD       DATA REGISTER
00E003CA                           838  
00E003CA  1CC5                     839  ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E003CC                           840  
00E003CC  3814                     841           MOVE.W  (A4),D4
00E003CE  6100 01A2                842           BSR     EEA            DATA ALTERABLE
00E003D2  6090                     843  CS18     BRA     SCOMMON
00E003D4                           844  
00E003D4                           845m          LONG
00E003D4                           846m          DS      0
00E003D4                           847m          DS.B    (*-X)&2
00E003D4                           848m          ENDM
00E003D4                           849  *                            BCHG  BCLR  BSET  BTST
00E003D4                           850  *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
00E003D4                           851  *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
00E003D4                           852  *
00E003D4                           853  ISETS    DS      0              STATIC BIT
00E003D4  5483                     854           ADDQ.L  #2,D3     SIZE
00E003D6  1CFC 0023                855           MOVE.B  #'#',(A6)+     IMMEDIATE
00E003DA                           856  
00E003DA  4280                     857           CLR.L   D0
00E003DC  302C 0002                858           MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
00E003E0  2200                     859           MOVE.L  D0,D1
00E003E2  EA89                     860           LSR.L   #5,D1
00E003E4  6600 04A4                861           BNE     FERROR
00E003E8  6100 0DB0                862           BSR     HEX2DEC        DECIMAL
00E003EC                           863  
00E003EC  60DC                     864           BRA     ISETD12
00E003EE                           865  
00E003EE                           866  *   BIT  5432109876543210
00E003EE                           867  *        ....XXX.........       IMMEDIATE COUNT/REGISTER
00E003EE                           868  *        .......0........       RIGHT SHIFT
00E003EE                           869  *        .......1........       LEFT SHIFT
00E003EE                           870  *        ........00......       BYTE
00E003EE                           871  *        ........01......       WORD
00E003EE                           872  *        ........10......       LONG
00E003EE                           873  *        ....0...11......       WORD (MEMORY)
00E003EE                           874  *        ....0...11AAAAAA       EFFECTIVE ADDRESS
00E003EE                           875  *        ..........0.....       SHIFT IMMEDIATE COUNT
00E003EE                           876  *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
00E003EE                           877  *
00E003EE                           878m          LONG
00E003EE                           879m          DS      0
00E003EE                           880m          DS.B    (*-X)&2
00E003F0                           881m          ENDM
00E003F0                           882  ISHIFT   DS      0              AS-  LS-  RO-  ROX-
00E003F0  303C 4C52                883           MOVE.W  #'LR',D0
00E003F4  0804 0008                884           BTST    #8,D4          DIRECTION BIT
00E003F8  6702                     885           BEQ.S   ISHIFT13       RIGHT
00E003FA  E048                     886           LSR.W   #8,D0          LEFT
00E003FC  1AC0                     887  ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
00E003FE                           888  
00E003FE  3014                     889           MOVE.W  (A4),D0
00E00400  0240 00C0                890           ANDI.W  #$00C0,D0
00E00404  0C40 00C0                891           CMPI.W  #$00C0,D0
00E00408  6730                     892           BEQ.S   ISHIFTM1       MEMORY SHIFT
00E0040A                           893  
00E0040A  6100 00DC                894           BSR     FORMSIZE
00E0040E                           895  
00E0040E  EF5C                     896           ROL.W   #7,D4
00E00410  0804 000C                897           BTST    #12,D4         I/R BIT
00E00414  6616                     898           BNE.S   ISHIFT33       COUNT IN REGISTER
00E00416                           899  
00E00416  0204 0007                900           ANDI.B  #$07,D4        IMMEDIATE COUNT
00E0041A  6604                     901           BNE.S   ISHIFT23
00E0041C  0004 0008                902           ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
00E00420  0004 0030                903  ISHIFT23 ORI.B   #'0',D4
00E00424  1CFC 0023                904           MOVE.B  #'#',(A6)+
00E00428  1CC4                     905           MOVE.B  D4,(A6)+
00E0042A  6004                     906           BRA.S   ISHIFT44
00E0042C                           907  
00E0042C  6100 FD2E                908  ISHIFT33 BSR     FORMREGD
00E00430                           909  
00E00430  1CC5                     910  ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E00432                           911  
00E00432  3814                     912           MOVE.W  (A4),D4
00E00434  6100 FD26                913           BSR     FORMREGD
00E00438  6098                     914  CS17     BRA     CS18           COMMON
00E0043A                           915  
00E0043A  1AFC 002E                916  ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
00E0043E  1AFC 0057                917           MOVE.B  #'W',(A5)+     .WORD
00E00442                           918  
00E00442  0804 000B                919           BTST    #11,D4
00E00446  6600 0442                920           BNE     FERROR         BIT 11 MUST BE ZERO
00E0044A                           921  
00E0044A  3E3C 01FC                922           MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
00E0044E  6100 0122                923           BSR     EEA
00E00452  60E4                     924           BRA     CS17           COMMON
00E00454                           925  
00E00454  700F                     926  ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
00E00456  C014                     927           AND.B   (A4),D0        D0 = CCC
00E00458  E388                     928           LSL.L   #1,D0          D0 = CCC*2
00E0045A                           929  
00E0045A  323B 0010                930           MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
00E0045E  1AC1                     931           MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
00E00460  E049                     932           LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
00E00462  0C01 0020                933           CMPI.B  #BLANK,D1          TO THE BUFFER.
00E00466  6702                     934           BEQ.S   ICCCC9
00E00468  1AC1                     935           MOVE.B  D1,(A5)+
00E0046A  4E75                     936  ICCCC9   RTS
00E0046C                           937  
00E0046C= 20 54                    938  BRTBL    DC.B    ' T'      'T '  BRA ACCEPTED
00E0046E= 20 46                    939           DC.B    ' F'      'F '
00E00470= 49 48                    940           DC.B    'IH'      'HI'
00E00472= 53 4C                    941           DC.B    'SL'      'LS'
00E00474= 43 43                    942           DC.B    'CC'      'CC'
00E00476= 53 43                    943           DC.B    'SC'      'CS'
00E00478= 45 4E                    944           DC.B    'EN'      'NE'
00E0047A= 51 45                    945           DC.B    'QE'      'EQ'
00E0047C= 43 56                    946           DC.B    'CV'      'VC'
00E0047E= 53 56                    947           DC.B    'SV'      'VS'
00E00480= 4C 50                    948           DC.B    'LP'      'PL'
00E00482= 49 4D                    949           DC.B    'IM'      'MI'
00E00484= 45 47                    950           DC.B    'EG'      'GE'
00E00486= 54 4C                    951           DC.B    'TL'      'LT'
00E00488= 54 47                    952           DC.B    'TG'      'GT'
00E0048A= 45 4C                    953           DC.B    'EL'      'LE'
00E0048C                           954  
00E0048C                           955  *   BIT  5432109876543210
00E0048C                           956  *        ....RRRMMM......    DESTINATION REGISTER MODE
00E0048C                           957  *        ..........MMMRRR    SOURCE MODE REGISTER
00E0048C                           958  *
00E0048C                           959  * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
00E0048C                           960  *
00E0048C                           961  IMOVEA1  DS      0
00E0048C  3E3C 0FFF                962           MOVE.W  #$FFF,D7       ALL MODES
00E00490  6100 00E0                963           BSR     EEA
00E00494                           964  
00E00494  1CC5                     965           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E00496                           966  
00E00496  3814                     967           MOVE.W  (A4),D4        ....RRRMMM......
00E00498  E24C                     968           LSR.W   #1,D4          .....RRRMMM.....
00E0049A  EA0C                     969           LSR.B   #5,D4          .....RRR.....MMM
00E0049C  E05C                     970           ROR.W   #8,D4          .....MMM.....RRR
00E0049E  EB0C                     971           LSL.B   #5,D4          .....MMMRRR.....
00E004A0  EA4C                     972           LSR.W   #5,D4          ..........MMMRRR
00E004A2                           973  
00E004A2                           974  * IF .BYTE DESTINATION A@ NOT ALLOWED
00E004A2  3E3C 01FF                975           MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
00E004A6  1014                     976           MOVE.B  (A4),D0
00E004A8  0C00 0001                977           CMPI.B  #$01,D0
00E004AC  6604                     978           BNE.S   IMOVE19        NOT BYTE SIZE
00E004AE                           979  
00E004AE  3E3C 01FD                980           MOVE.W  #$1FD,D7       DATA ALTERABLE
00E004B2                           981  IMOVE19
00E004B2                           982  
00E004B2  6100 00BE                983           BSR     EEA
00E004B6  602C                     984           BRA.S   CS19           COMMON
00E004B8                           985  
00E004B8                           986  *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
00E004B8                           987  IQUICKA  DS      0              ADDQ  SUBQ
00E004B8  612E                     988           BSR.S   FORMSIZE
00E004BA                           989  
00E004BA  1CFC 0023                990           MOVE.B  #'#',(A6)+
00E004BE  EF5C                     991           ROL.W   #7,D4
00E004C0  0204 0007                992           ANDI.B  #7,D4
00E004C4  6604                     993           BNE.S   IQUICK21
00E004C6  0004 0008                994           ORI.B   #8,D4          MAKE ZERO INTO EIGHT
00E004CA  0004 0030                995  IQUICK21 ORI.B   #'0',D4        MAKE ASCII
00E004CE  1CC4                     996           MOVE.B  D4,(A6)+
00E004D0                           997  
00E004D0  1CC5                     998           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00E004D2                           999  
00E004D2  3814                    1000           MOVE.W  (A4),D4
00E004D4                          1001  
00E004D4  3014                    1002           MOVE.W  (A4),D0
00E004D6  0240 00C0               1003           ANDI.W  #$00C0,D0
00E004DA  6704                    1004           BEQ.S   IQUICK31       DATA ALTERABLE
00E004DC  3E3C 01FF               1005           MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
00E004E0  6100 0090               1006  IQUICK31 BSR     EEA
00E004E4  6000 037C               1007  CS19     BRA     COMMON
00E004E8                          1008  
00E004E8                          1009  *  BIT   5432109876543210
00E004E8                          1010  *        ........00......       BYTE
00E004E8                          1011  *        ........01......       WORD
00E004E8                          1012  *        ........10......       LONG
00E004E8                          1013  *        ........11......       ERROR
00E004E8                          1014  *
00E004E8                          1015  FORMSIZE DS      0
00E004E8  3414                    1016           MOVE.W  (A4),D2
00E004EA  1AFC 002E               1017           MOVE.B  #'.',(A5)+     STORE PERIOD
00E004EE  EC4A                    1018           LSR.W   #6,D2
00E004F0  0242 0003               1019           ANDI.W  #$03,D2
00E004F4  6606                    1020           BNE.S   FORM91
00E004F6  1AFC 0042               1021           MOVE.B  #'B',(A5)+     STORE "B"
00E004FA  6016                    1022           BRA.S   FORM95
00E004FC                          1023  
00E004FC  103C 0057               1024  FORM91   MOVE.B  #'W',D0
00E00500  0C02 0001               1025           CMPI.B  #1,D2
00E00504  670A                    1026           BEQ.S   FORM93
00E00506  103C 004C               1027           MOVE.B  #'L',D0
00E0050A  0C02 0002               1028           CMPI.B  #2,D2
00E0050E  665E                    1029           BNE.S   FE10           FERROR
00E00510  1AC0                    1030  FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
00E00512  4E75                    1031  FORM95   RTS
00E00514                          1032  
00E00514  6100 FC46               1033  EA000    BSR     FORMREGD
00E00518  0807 0000               1034           BTST    #0,D7
00E0051C  6750                    1035           BEQ.S   FE10           FERROR
00E0051E  4E75                    1036           RTS
00E00520                          1037  
00E00520  6100 FC2A               1038  EA001    BSR     FORMREGA
00E00524  0807 0001               1039           BTST    #1,D7
00E00528  6744                    1040           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00E0052A  4E75                    1041           RTS
00E0052C                          1042  
00E0052C  1CFC 0028               1043  EA010    MOVE.B  #'(',(A6)+
00E00530  6100 FC1A               1044           BSR     FORMREGA
00E00534  1CFC 0029               1045           MOVE.B  #')',(A6)+
00E00538  0807 0002               1046           BTST    #2,D7
00E0053C  6730                    1047           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00E0053E  4E75                    1048           RTS
00E00540                          1049  
00E00540  1CFC 0028               1050  EA011    MOVE.B  #'(',(A6)+
00E00544  6100 FC06               1051           BSR     FORMREGA
00E00548  1CFC 0029               1052           MOVE.B  #')',(A6)+
00E0054C  1CFC 002B               1053           MOVE.B  #'+',(A6)+
00E00550  0807 0003               1054           BTST    #3,D7
00E00554  6718                    1055           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00E00556  4E75                    1056  EA011RTS RTS
00E00558                          1057  
00E00558  1CFC 002D               1058  EA100    MOVE.B  #'-',(A6)+
00E0055C  1CFC 0028               1059           MOVE.B  #'(',(A6)+
00E00560  6100 FBEA               1060           BSR     FORMREGA
00E00564  1CFC 0029               1061           MOVE.B  #')',(A6)+
00E00568  0807 0004               1062           BTST    #4,D7
00E0056C  66E8                    1063           BNE     EA011RTS
00E0056E  6000 031A               1064  FE10     BRA     FERROR         THIS MODE NOT ALLOWED
00E00572                          1065  
00E00572                          1066  *  ENTER       A4 = POINTER TO FIRST WORD
00E00572                          1067  *              D3 = OFFSET TO EXTENSION
00E00572                          1068  *              D4 = VALUE TO PROCESS
00E00572                          1069  *              D7 = MODES ALLOWED MASK
00E00572                          1070  *
00E00572                          1071  EEA      DS      0
00E00572  2004                    1072           MOVE.L  D4,D0
00E00574  E648                    1073           LSR.W   #3,D0
00E00576  0240 0007               1074           ANDI.W  #$7,D0
00E0057A  6798                    1075           BEQ     EA000
00E0057C                          1076  
00E0057C  0C00 0001               1077           CMPI.B  #1,D0
00E00580  679E                    1078           BEQ     EA001
00E00582                          1079  
00E00582  0C00 0002               1080           CMPI.B  #2,D0
00E00586  67A4                    1081           BEQ     EA010
00E00588                          1082  
00E00588  0C00 0003               1083           CMPI.B  #3,D0
00E0058C  67B2                    1084           BEQ     EA011
00E0058E                          1085  
00E0058E  0C00 0004               1086           CMPI.B  #4,D0
00E00592  67C4                    1087           BEQ     EA100
00E00594                          1088  
00E00594  0C00 0005               1089           CMPI.B  #5,D0
00E00598  6760                    1090           BEQ.S   EA101
00E0059A                          1091  
00E0059A  0C00 0007               1092           CMPI.B  #7,D0
00E0059E  6770                    1093           BEQ.S   EA111
00E005A0                          1094  
00E005A0                          1095  *    EXTENSION WORD
00E005A0                          1096  *   BIT  5432109876543210
00E005A0                          1097  *        0...............    DATA REGISTER
00E005A0                          1098  *        1...............    ADDRESS REGISTER
00E005A0                          1099  *        .RRR............    REGISTER
00E005A0                          1100  *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
00E005A0                          1101  *        ....1...........    LONG VALUE IN INDEX REGISTER
00E005A0                          1102  *        .....000........
00E005A0                          1103  *        ........DDDDDDDD    DISPLACEMENT INTEGER
00E005A0                          1104  *
00E005A0                          1105  * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
00E005A0                          1106  
00E005A0  0807 0006               1107           BTST    #6,D7
00E005A4  67C8                    1108           BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
00E005A6                          1109  
00E005A6  3234 3000               1110           MOVE.W  (A4,D3),D1
00E005AA  0241 0700               1111           ANDI.W  #$0700,D1
00E005AE  66BE                    1112           BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
00E005B0                          1113  
00E005B0  3034 3000               1114           MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
00E005B4  4880                    1115           EXT.W   D0
00E005B6  48C0                    1116           EXT.L   D0
00E005B8  6100 0BE0               1117           BSR     HEX2DEC        DECIMAL
00E005BC  1CFC 0028               1118           MOVE.B  #'(',(A6)+     (
00E005C0                          1119  
00E005C0  6100 FB8A               1120           BSR     FORMREGA       XX(A@
00E005C4                          1121  
00E005C4  1CFC 002C               1122           MOVE.B  #',',(A6)+     XX(A@,
00E005C8                          1123  
00E005C8  1834 3000               1124           MOVE.B  (A4,D3),D4
00E005CC  E804                    1125           ASR.B   #4,D4
00E005CE  6A06                    1126           BPL.S   EA1105
00E005D0  6100 FB7A               1127           BSR     FORMREGA
00E005D4  6004                    1128           BRA.S   EA1107
00E005D6                          1129  
00E005D6  6100 FB84               1130  EA1105   BSR     FORMREGD
00E005DA  1CFC 002E               1131  EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
00E005DE                          1132  
00E005DE  3834 3000               1133           MOVE.W  (A4,D3),D4     D4 = R@
00E005E2  103C 0057               1134           MOVE.B  #'W',D0        ..........W
00E005E6  0804 000B               1135           BTST    #11,D4
00E005EA  6704                    1136           BEQ.S   EA1109
00E005EC  103C 004C               1137           MOVE.B  #'L',D0        ..........L
00E005F0  1CC0                    1138  EA1109   MOVE.B  D0,(A6)+
00E005F2  1CFC 0029               1139           MOVE.B  #')',(A6)+     ...........)
00E005F6  5483                    1140           ADDQ.L  #2,D3
00E005F8  4E75                    1141           RTS
00E005FA                          1142  
00E005FA                          1143  * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
00E005FA                          1144  *
00E005FA  0807 0005               1145  EA101    BTST    #5,D7          101000;   DIS(A@)
00E005FE  6756                    1146           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00E00600                          1147  
00E00600  3034 3000               1148           MOVE.W  (A4,D3),D0
00E00604  48C0                    1149           EXT.L   D0
00E00606  6100 0B92               1150           BSR     HEX2DEC        DECIMAL
00E0060A  5483                    1151           ADDQ.L  #2,D3          SIZE
00E0060C  6000 FF1E               1152           BRA     EA010
00E00610                          1153  
00E00610                          1154  *  111000        ABSOLUTE SHORT
00E00610                          1155  *  111001        ABSOLUTE LONG
00E00610                          1156  *  111010        PROGRAM COUNTER WITH DISPLACEMENT
00E00610                          1157  *  111011        PROGRAM COUNTER WITH INDEX
00E00610                          1158  *  111100        IMMEDIATE OR STATUS REG
00E00610                          1159  *
00E00610                          1160  EA111
00E00610  0244 0007               1161           ANDI.W  #7,D4
00E00614  6618                    1162           BNE.S   EA1112
00E00616                          1163  
00E00616  0807 0007               1164           BTST    #7,D7
00E0061A  673A                    1165           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00E0061C                          1166  
00E0061C  3034 3000               1167           MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
00E00620  48C0                    1168           EXT.L   D0
00E00622  1CFC 0024               1169           MOVE.B  #'$',(A6)+
00E00626  6100 0BDA               1170           BSR     PNT8HX         SIGN EXTENDED VALUE
00E0062A  5483                    1171           ADDQ.L  #2,D3          SIZE + 2
00E0062C  4E75                    1172           RTS
00E0062E                          1173  
00E0062E  0C04 0001               1174  EA1112   CMPI.B  #1,D4
00E00632  6616                    1175           BNE.S   EA1113
00E00634                          1176  
00E00634  0807 0008               1177           BTST    #8,D7
00E00638  671C                    1178           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00E0063A                          1179  
00E0063A  1CFC 0024               1180           MOVE.B  #'$',(A6)+     HEX
00E0063E  2034 3000               1181           MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
00E00642  6100 0BBE               1182           BSR     PNT8HX
00E00646                          1183  *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
00E00646                          1184  *-       MOVE.B  #'L',(A6)+     IE   .L
00E00646  5883                    1185           ADDQ.L  #4,D3
00E00648  4E75                    1186           RTS
00E0064A                          1187  
00E0064A  0C04 0002               1188  EA1113   CMPI.B  #2,D4
00E0064E  662C                    1189           BNE.S   EA1114
00E00650                          1190  
00E00650  0807 0009               1191           BTST    #9,D7
00E00654  6604                    1192           BNE.S   EA1113A
00E00656  6000 0232               1193  FE11     BRA     FERROR         THIS MODE NOT ALLOWED
00E0065A                          1194  EA1113A
00E0065A                          1195  
00E0065A  3034 3000               1196           MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
00E0065E  48C0                    1197           EXT.L   D0
00E00660  D0A9 FFFC               1198           ADD.L   HISPC(A1),D0
00E00664  5480                    1199           ADDQ.L  #2,D0
00E00666  1CFC 0024               1200           MOVE.B  #'$',(A6)+     HEX "$"
00E0066A  6100 0B96               1201           BSR     PNT8HX         DESTINATION
00E0066E  203C 29435028           1202           MOVE.L  #')CP(',D0     (PC)
00E00674  6100 FC3E               1203           BSR     SCHR           STORE WORD
00E00678  5483                    1204           ADDQ.L  #2,D3          SIZE
00E0067A  4E75                    1205           RTS
00E0067C                          1206  
00E0067C  0C04 0003               1207  EA1114   CMPI.B  #3,D4
00E00680  6664                    1208           BNE.S   EA1115
00E00682                          1209  
00E00682                          1210  * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
00E00682                          1211  *
00E00682                          1212  *        5432109876543210       SECOND WORD
00E00682                          1213  *        0...............       DATA REGISTER
00E00682                          1214  *        1...............       ADDRESS REGISTER
00E00682                          1215  *        .XXX............       REGISTER
00E00682                          1216  *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
00E00682                          1217  *                               ..IN INDEX REGISTER
00E00682                          1218  *        ....1...........       LONG VALUE IN INDEX REGISTER
00E00682                          1219  *        .....000........
00E00682                          1220  *        ........XXXXXXXX       DISPLACEMENT INTEGER
00E00682                          1221  *
00E00682  0807 000A               1222           BTST    #10,D7
00E00686  67CE                    1223           BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
00E00688                          1224  
00E00688  3234 3000               1225           MOVE.W  (A4,D3),D1
00E0068C  0241 0700               1226           ANDI.W  #$0700,D1
00E00690  66C4                    1227           BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
00E00692                          1228  
00E00692  1034 3001               1229           MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
00E00696  4880                    1230           EXT.W   D0
00E00698  48C0                    1231           EXT.L   D0
00E0069A  D0A9 FFFC               1232           ADD.L   HISPC(A1),D0
00E0069E  5480                    1233           ADDQ.L  #2,D0
00E006A0  1CFC 0024               1234           MOVE.B  #'$',(A6)+     HEX "$"
00E006A4  6100 0B5C               1235           BSR     PNT8HX         DESTINATION
00E006A8                          1236  
00E006A8  203C 2C435028           1237           MOVE.L  #',CP(',D0
00E006AE  6100 FC04               1238           BSR     SCHR           DES(PC,
00E006B2                          1239  
00E006B2  3834 3000               1240           MOVE.W  (A4,D3),D4
00E006B6  E95C                    1241           ROL.W   #4,D4
00E006B8  0804 0003               1242           BTST    #3,D4
00E006BC  6706                    1243           BEQ.S   EAF25
00E006BE  6100 FA8C               1244           BSR     FORMREGA
00E006C2  6004                    1245           BRA.S   EAF27
00E006C4  6100 FA96               1246  EAF25    BSR     FORMREGD       DES(PC,R@
00E006C8                          1247  EAF27
00E006C8                          1248  
00E006C8  1CFC 002E               1249           MOVE.B  #'.',(A6)+     DES(PC,R@.
00E006CC                          1250  
00E006CC  3834 3000               1251           MOVE.W  (A4,D3),D4
00E006D0  303C 4C57               1252           MOVE.W  #'LW',D0
00E006D4  0804 000B               1253           BTST    #11,D4
00E006D8  6702                    1254           BEQ.S   EAF35
00E006DA  E048                    1255           LSR.W   #8,D0
00E006DC  1CC0                    1256  EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
00E006DE                          1257  
00E006DE  1CFC 0029               1258           MOVE.B  #')',(A6)+     DES(PC,R@.X)
00E006E2  5483                    1259           ADDQ.L  #2,D3
00E006E4  4E75                    1260           RTS
00E006E6                          1261  
00E006E6                          1262  *   BIT  5432109876543210
00E006E6                          1263  *        ..........111100       FIRST WORD;  #<IMMEDIATE>
00E006E6                          1264  *
00E006E6  0C04 0004               1265  EA1115   CMPI.B  #4,D4
00E006EA  6600 FF6A               1266           BNE     FE11           FERROR
00E006EE                          1267  
00E006EE  0807 000B               1268           BTST    #11,D7
00E006F2  6700 FF62               1269           BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
00E006F6                          1270  
00E006F6  1CFC 0023               1271           MOVE.B  #'#',(A6)+     IMMEDIATE
00E006FA                          1272  
00E006FA  122D FFFF               1273           MOVE.B  -1(A5),D1
00E006FE  0C01 004C               1274           CMPI.B  #'L',D1
00E00702  6724                    1275           BEQ.S   EA11155        LONG
00E00704                          1276  
00E00704  3034 3000               1277           MOVE.W  (A4,D3),D0
00E00708                          1278  
00E00708  0C01 0042               1279           CMPI.B  #'B',D1
00E0070C  6610                    1280           BNE.S   EA11153        .WORD
00E0070E                          1281  
00E0070E                          1282  * BYTE SIZE; DATA ALLOWED
00E0070E                          1283  *  0000 0000 XXXX XXXX
00E0070E                          1284  *  1111 1111 1XXX XXXX
00E0070E  2200                    1285           MOVE.L  D0,D1
00E00710  E049                    1286           LSR.W   #8,D1
00E00712  670A                    1287           BEQ.S   EA11153
00E00714  2200                    1288           MOVE.L  D0,D1
00E00716  EE41                    1289           ASR.W   #7,D1
00E00718  5241                    1290           ADDQ.W  #1,D1
00E0071A  6600 FF3A               1291           BNE     FE11           FERROR
00E0071E                          1292  
00E0071E  48C0                    1293  EA11153  EXT.L   D0
00E00720  6100 0A78               1294           BSR     HEX2DEC
00E00724  5483                    1295           ADDQ.L  #2,D3
00E00726  4E75                    1296           RTS
00E00728                          1297  
00E00728  2034 3000               1298  EA11155  MOVE.L  (A4,D3),D0
00E0072C  6100 0A6C               1299           BSR     HEX2DEC
00E00730  5883                    1300           ADDQ.L  #4,D3          SIZE
00E00732  4E75                    1301           RTS
00E00734                          1302  
00E00734  1AFC 002E               1303  MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
00E00738  303C 4C57               1304           MOVE.W  #'LW',D0
00E0073C  0804 0006               1305           BTST    #6,D4
00E00740  6702                    1306           BEQ.S   MOVEMS2
00E00742  E048                    1307           LSR.W   #8,D0
00E00744  1AC0                    1308  MOVEMS2  MOVE.B  D0,(A5)+       SIZE
00E00746  4E75                    1309           RTS
00E00748                          1310  
00E00748                          1311  * MOVEM - REGISTER EXPANSION
00E00748                          1312  *
00E00748                          1313  MOVEMR   DS      0
00E00748  342C 0002               1314           MOVE.W  2(A4),D2       D2 = SECOND WORD
00E0074C  7020                    1315           MOVEQ   #$20,D0        D0 = SPACE
00E0074E  7E2F                    1316           MOVEQ   #$2F,D7        D7 = /
00E00750  538E                    1317           SUBQ.L  #1,A6          ADJUST STORE POINTER
00E00752  7A30                    1318           MOVEQ   #$30,D5        D5 = REGISTER #
00E00754  383C 4144               1319           MOVE.W  #'AD',D4       D4 = REG CLASS
00E00758                          1320  
00E00758  0302                    1321  MOVEMR11 BTST    D1,D2
00E0075A  6730                    1322           BEQ.S   MOVEMR77       BIT RESET
00E0075C                          1323  
00E0075C  B016                    1324           CMP.B   (A6),D0        BIT SET
00E0075E  6612                    1325           BNE.S   MOVEMR44       NOT SPACE
00E00760                          1326  
00E00760  1D44 0001               1327  MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
00E00764  1D45 0002               1328           MOVE.B  D5,2(A6)       REG #
00E00768  1D7C 002D 0003          1329           MOVE.B  #'-',3(A6)     -
00E0076E  568E                    1330           ADDQ.L  #3,A6
00E00770  602E                    1331           BRA.S   MOVEMR88
00E00772                          1332  
00E00772  0C16 002C               1333  MOVEMR44 CMPI.B  #',',(A6)
00E00776  67E8                    1334           BEQ     MOVEMR33       COMMA SEPARATOR
00E00778                          1335  
00E00778  BE16                    1336           CMP.B   (A6),D7        / SEPARATOR
00E0077A  67E4                    1337           BEQ     MOVEMR33
00E0077C                          1338  
00E0077C  1D44 0001               1339           MOVE.B  D4,1(A6)       REG TYPE
00E00780  1D45 0002               1340           MOVE.B  D5,2(A6)       REG #
00E00784  1D7C 002D 0003          1341           MOVE.B  #'-',3(A6)     - SEPARATOR
00E0078A  6014                    1342           BRA.S   MOVEMR88
00E0078C                          1343  
00E0078C  0C16 002C               1344  MOVEMR77 CMPI.B  #',',(A6)
00E00790  670E                    1345           BEQ.S   MOVEMR88       COMMA
00E00792                          1346  
00E00792  B016                    1347           CMP.B   (A6),D0
00E00794  670A                    1348           BEQ.S   MOVEMR88       SPACE
00E00796  B02E 0001               1349           CMP.B   1(A6),D0
00E0079A  6702                    1350           BEQ.S   MOVEMR79       SPACE
00E0079C  568E                    1351           ADDQ.L  #3,A6
00E0079E  1C87                    1352  MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
00E007A0                          1353  
00E007A0  5285                    1354  MOVEMR88 ADDQ.L  #1,D5
00E007A2  D286                    1355           ADD.L   D6,D1          D1 = BIT POSITION
00E007A4  0C05 0038               1356           CMPI.B  #'8',D5
00E007A8  66AE                    1357           BNE     MOVEMR11
00E007AA                          1358  
00E007AA  B016                    1359           CMP.B   (A6),D0        SPACE
00E007AC  670A                    1360           BEQ.S   MOVEMR94
00E007AE                          1361  
00E007AE  B02E 0001               1362           CMP.B   1(A6),D0       SPACE
00E007B2  6704                    1363           BEQ.S   MOVEMR94
00E007B4  568E                    1364           ADDQ.L  #3,A6
00E007B6  1C87                    1365           MOVE.B  D7,(A6)        /   SEPARATOR
00E007B8                          1366  
00E007B8  1A3C 0030               1367  MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
00E007BC  E04C                    1368           LSR.W   #8,D4          CHANGE REG TYPE
00E007BE  6698                    1369           BNE     MOVEMR11       MORE
00E007C0                          1370  
00E007C0  1C80                    1371           MOVE.B  D0,(A6)        SPACE
00E007C2  4E75                    1372           RTS
00E007C4                          1373  
00E007C4                          1374  DCODE68K DS      0
00E007C4  4E51 FFF0               1375           LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
00E007C8  48E9 1007 FFF0          1376           MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
00E007CE  49E9 FFF0               1377           LEA     DDATA(A1),A4        POINTS TO THE CODE.
00E007D2                          1378  
00E007D2  264D                    1379           MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
00E007D4  7050                    1380           MOVEQ   #BUFSIZE,D0
00E007D6  2C4B                    1381           MOVE.L  A3,A6
00E007D8  1CFC 0020               1382  DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
00E007DC  5380                    1383           SUBQ.L  #1,D0
00E007DE  66F8                    1384           BNE     DEC311
00E007E0                          1385  
00E007E0  2C4B                    1386           MOVE.L  A3,A6          FORMAT ADDRESS
00E007E2  2029 FFFC               1387           MOVE.L  HISPC(A1),D0
00E007E6  6100 0A4C               1388           BSR     FRELADDR
00E007EA                          1389  
00E007EA                          1390  * CHECK FOR KNOWN ILLEGAL CODES
00E007EA  3014                    1391           MOVE.W  (A4),D0
00E007EC                          1392  
00E007EC  4BFA 00C6               1393           LEA     KI(PC),A5
00E007F0  2C4D                    1394           MOVE.L  A5,A6
00E007F2  DDFC 00000002           1395           ADD.L   #KIEND-KI,A6
00E007F8  B05D                    1396  DEC404   CMP.W   (A5)+,D0
00E007FA  671A                    1397           BEQ.S   FE12           FERROR;  ILLEGAL CODE
00E007FC  BBCE                    1398           CMP.L   A6,A5
00E007FE  66F8                    1399           BNE     DEC404
00E00800                          1400  
00E00800                          1401  * LOOK FOR MATCH OF OP-CODE
00E00800                          1402  *
00E00800  4BFA 00B4               1403           LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
00E00804  4DFA 02BA               1404           LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
00E00808  3014                    1405  DEC411   MOVE.W  (A4),D0        FIRST WORD
00E0080A  C05D                    1406           AND.W   (A5)+,D0       MASK
00E0080C  B05D                    1407           CMP.W   (A5)+,D0
00E0080E  6708                    1408           BEQ.S   DEC425         FOUND MATCH
00E00810  548D                    1409           ADDQ.L  #2,A5          UPDATE POINTER
00E00812  BBCE                    1410           CMP.L   A6,A5
00E00814  66F2                    1411           BNE     DEC411         MORE TABLE
00E00816  6072                    1412  FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
00E00818                          1413  
00E00818  4286                    1414  DEC425   CLR.L   D6
00E0081A  1C1D                    1415           MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
00E0081C  E58E                    1416           LSL.L   #2,D6
00E0081E                          1417  
00E0081E  4287                    1418           CLR.L   D7
00E00820  1E1D                    1419           MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
00E00822                          1420  
00E00822                          1421  * MOVE OP-CODE TO BUFFER
00E00822                          1422  *
00E00822  41FA 029C               1423           LEA     OPCTBL(PC),A0
00E00826  4A47                    1424  DEC510   TST     D7
00E00828  6708                    1425           BEQ.S   DEC530         AT INDEX
00E0082A  4A18                    1426  DEC515   TST.B   (A0)+
00E0082C  6AFC                    1427           BPL     DEC515         MOVE THROUGH FIELD
00E0082E  5387                    1428           SUBQ.L  #1,D7
00E00830  60F4                    1429           BRA     DEC510
00E00832                          1430  
00E00832  701F                    1431  DEC530   MOVEQ   #FOC,D0
00E00834  4BF3 0000               1432           LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
00E00838  1018                    1433  DEC535   MOVE.B  (A0)+,D0
00E0083A  0880 0007               1434           BCLR    #7,D0
00E0083E  6604                    1435           BNE.S   DEC537         END OF MOVE
00E00840  1AC0                    1436           MOVE.B  D0,(A5)+
00E00842  60F4                    1437           BRA     DEC535
00E00844  1AC0                    1438  DEC537   MOVE.B  D0,(A5)+
00E00846                          1439  
00E00846                          1440  * CALCULATE GOTO AND GO
00E00846                          1441  *
00E00846  7602                    1442           MOVEQ   #2,D3          D3= SIZE
00E00848  41FA F7CA               1443           LEA     X(PC),A0
00E0084C  D1C6                    1444           ADD.L   D6,A0
00E0084E                          1445  
00E0084E  7027                    1446           MOVEQ   #FOP,D0
00E00850  4DF3 0000               1447           LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
00E00854                          1448  
00E00854  3814                    1449           MOVE.W  (A4),D4        D4 = FIRST WORD
00E00856                          1450  
00E00856  1A3C 002C               1451           MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
00E0085A                          1452  
00E0085A  3E3C 01FD               1453           MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
00E0085E                          1454  
00E0085E  4ED0                    1455           JMP     (A0)
00E00860                          1456  *
00E00860                          1457  *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
00E00860                          1458  *  A5 = POINTER STORE OP-CODE
00E00860                          1459  *  A6 = POINTER STORE OPERAND
00E00860                          1460  *  D3 = SIZE = 2 BYTES
00E00860                          1461  *  D4 = FIRST WORD
00E00860                          1462  *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
00E00860                          1463  
00E00860  5483                    1464  COMMON4  ADDQ.L  #2,D3          SIZE = 4
00E00862                          1465  
00E00862  2C03                    1466  COMMON   MOVE.L  D3,D6          D6 = SIZE
00E00864  1CFC 0020               1467           MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
00E00868                          1468  
00E00868  2A4E                    1469           MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
00E0086A  700A                    1470           MOVEQ   #FDATA,D0
00E0086C  4DF3 0000               1471           LEA.L   (A3,D0),A6
00E00870                          1472  
00E00870  301C                    1473  COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
00E00872  54A9 FFFC               1474           ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
00E00876  6100 0998               1475           BSR     PNT4HX         FORMAT DATA. (A6)+
00E0087A  5503                    1476           SUBQ.B  #2,D3
00E0087C  66F2                    1477           BNE     COMMON35
00E0087E                          1478  
00E0087E  2C4D                    1479           MOVE.L  A5,A6          A6 = RESTORE END POINTER
00E00880                          1480  
00E00880  2A4B                    1481           MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
00E00882                          1482  
00E00882  2869 FFFC               1483           MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
00E00886  4E59                    1484           UNLK    A1               TO A4 AND UNDO FRAME.
00E00888                          1485  
00E00888  4E75                    1486           RTS
00E0088A                          1487  
00E0088A                          1488  
00E0088A                          1489  FERROR   DS      0
00E0088A                          1490  * ILLEGAL INSTRUCTION
00E0088A                          1491  *
00E0088A  701F                    1492           MOVEQ   #FOC,D0
00E0088C  4DF3 0000               1493           LEA.L   (A3,D0),A6
00E00890  4BFA 0018               1494           LEA     MSG111(PC),A5
00E00894  101D                    1495  FERROR35 MOVE.B  (A5)+,D0
00E00896  0C00 0004               1496           CMPI.B  #EOT,D0
00E0089A  6704                    1497           BEQ.S   FERROR39
00E0089C  1CC0                    1498           MOVE.B  D0,(A6)+
00E0089E  60F4                    1499           BRA     FERROR35
00E008A0                          1500  FERROR39 DS      0
00E008A0                          1501  
00E008A0  3014                    1502           MOVE.W  (A4),D0
00E008A2  6100 096C               1503           BSR     PNT4HX
00E008A6                          1504  
00E008A6  7602                    1505           MOVEQ   #2,D3          SIZE
00E008A8                          1506  
00E008A8  60B8                    1507           BRA     COMMON
00E008AA                          1508  
00E008AA= 44 43 2E 57 20 20 20    1509  MSG111   DC.B    'DC.W    $',EOT
          20 24 04              
00E008B4                          1511  
00E008B4                          1512  
00E008B4                          1513  
00E008B4= 4AFB                    1514  KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
00E008B6                          1515  KIEND    DS      0
00E008B6                          1516  
00E008B6                          1517  
00E008B6                          1518  *  \1   MASK
00E008B6                          1519  *  \2   OP-CODE PATTERN
00E008B6                          1520  *  \3   GOTO OFFSET
00E008B6                          1521  *  \4   INDEX TO OP-CODE
00E008B6                          1522  C68      MACRO
00E008B6                          1523           DC.W    $\1
00E008B6                          1524           DC.W    $\2
00E008B6                          1525           DC.B    (\3-X)>>2
00E008B6                          1526           DC.B    \4
00E008B6                          1527           ENDM
00E008B6                          1528  
00E008B6                          1529  TBL      DS      0
00E008B6                          1530m          C68     FEC0,E6C0,ISHIFT,56           RO
00E008B6= FEC0                    1531m          DC.W    $FEC0
00E008B8= E6C0                    1532m          DC.W    $E6C0
00E008BA= F7                      1533m          DC.B    (ISHIFT-X)>>2
00E008BB= 38                      1534m          DC.B    56
00E008BC                          1535m          ENDM
00E008BC                          1536m          C68     FEC0,E4C0,ISHIFT,57           ROX
00E008BC= FEC0                    1537m          DC.W    $FEC0
00E008BE= E4C0                    1538m          DC.W    $E4C0
00E008C0= F7                      1539m          DC.B    (ISHIFT-X)>>2
00E008C1= 39                      1540m          DC.B    57
00E008C2                          1541m          ENDM
00E008C2                          1542m          C68     FEC0,E2C0,ISHIFT,55           LS
00E008C2= FEC0                    1543m          DC.W    $FEC0
00E008C4= E2C0                    1544m          DC.W    $E2C0
00E008C6= F7                      1545m          DC.B    (ISHIFT-X)>>2
00E008C7= 37                      1546m          DC.B    55
00E008C8                          1547m          ENDM
00E008C8                          1548m          C68     FEC0,E0C0,ISHIFT,54           AS
00E008C8= FEC0                    1549m          DC.W    $FEC0
00E008CA= E0C0                    1550m          DC.W    $E0C0
00E008CC= F7                      1551m          DC.B    (ISHIFT-X)>>2
00E008CD= 36                      1552m          DC.B    54
00E008CE                          1553m          ENDM
00E008CE                          1554m          C68     F018,E018,ISHIFT,56           RO
00E008CE= F018                    1555m          DC.W    $F018
00E008D0= E018                    1556m          DC.W    $E018
00E008D2= F7                      1557m          DC.B    (ISHIFT-X)>>2
00E008D3= 38                      1558m          DC.B    56
00E008D4                          1559m          ENDM
00E008D4                          1560m          C68     F018,E010,ISHIFT,57           ROX
00E008D4= F018                    1561m          DC.W    $F018
00E008D6= E010                    1562m          DC.W    $E010
00E008D8= F7                      1563m          DC.B    (ISHIFT-X)>>2
00E008D9= 39                      1564m          DC.B    57
00E008DA                          1565m          ENDM
00E008DA                          1566m          C68     F018,E008,ISHIFT,55           LS
00E008DA= F018                    1567m          DC.W    $F018
00E008DC= E008                    1568m          DC.W    $E008
00E008DE= F7                      1569m          DC.B    (ISHIFT-X)>>2
00E008DF= 37                      1570m          DC.B    55
00E008E0                          1571m          ENDM
00E008E0                          1572m          C68     F018,E000,ISHIFT,54           AS
00E008E0= F018                    1573m          DC.W    $F018
00E008E2= E000                    1574m          DC.W    $E000
00E008E4= F7                      1575m          DC.B    (ISHIFT-X)>>2
00E008E5= 36                      1576m          DC.B    54
00E008E6                          1577m          ENDM
00E008E6                          1578m          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
00E008E6= F0C0                    1579m          DC.W    $F0C0
00E008E8= D0C0                    1580m          DC.W    $D0C0
00E008EA= 5E                      1581m          DC.B    (FORM10EX-X)>>2
00E008EB= 04                      1582m          DC.B    4
00E008EC                          1583m          ENDM
00E008EC                          1584m          C68     F130,D100,FORM12,53           ADDX
00E008EC= F130                    1585m          DC.W    $F130
00E008EE= D100                    1586m          DC.W    $D100
00E008F0= 88                      1587m          DC.B    (FORM12-X)>>2
00E008F1= 35                      1588m          DC.B    53
00E008F2                          1589m          ENDM
00E008F2                          1590m          C68     F000,D000,FORM10EX,4            ADD
00E008F2= F000                    1591m          DC.W    $F000
00E008F4= D000                    1592m          DC.W    $D000
00E008F6= 5E                      1593m          DC.B    (FORM10EX-X)>>2
00E008F7= 04                      1594m          DC.B    4
00E008F8                          1595m          ENDM
00E008F8                          1596m          C68     F1F8,C188,FORM9,50            EXG
00E008F8= F1F8                    1597m          DC.W    $F1F8
00E008FA= C188                    1598m          DC.W    $C188
00E008FC= 5B                      1599m          DC.B    (FORM9-X)>>2
00E008FD= 32                      1600m          DC.B    50
00E008FE                          1601m          ENDM
00E008FE                          1602m          C68     F1F8,C148,FORM8,50            EXG
00E008FE= F1F8                    1603m          DC.W    $F1F8
00E00900= C148                    1604m          DC.W    $C148
00E00902= 57                      1605m          DC.B    (FORM8-X)>>2
00E00903= 32                      1606m          DC.B    50
00E00904                          1607m          ENDM
00E00904                          1608m          C68     F1F8,C140,FORM7,50            EXG
00E00904= F1F8                    1609m          DC.W    $F1F8
00E00906= C140                    1610m          DC.W    $C140
00E00908= 54                      1611m          DC.B    (FORM7-X)>>2
00E00909= 32                      1612m          DC.B    50
00E0090A                          1613m          ENDM
00E0090A                          1614m          C68     F1F0,C100,FORM12,49           ABCD
00E0090A= F1F0                    1615m          DC.W    $F1F0
00E0090C= C100                    1616m          DC.W    $C100
00E0090E= 88                      1617m          DC.B    (FORM12-X)>>2
00E0090F= 31                      1618m          DC.B    49
00E00910                          1619m          ENDM
00E00910                          1620m          C68     F1C0,C1C0,FORM6D,48           MULS
00E00910= F1C0                    1621m          DC.W    $F1C0
00E00912= C1C0                    1622m          DC.W    $C1C0
00E00914= 4A                      1623m          DC.B    (FORM6D-X)>>2
00E00915= 30                      1624m          DC.B    48
00E00916                          1625m          ENDM
00E00916                          1626m          C68     F1C0,C0C0,FORM6D,47           MULU
00E00916= F1C0                    1627m          DC.W    $F1C0
00E00918= C0C0                    1628m          DC.W    $C0C0
00E0091A= 4A                      1629m          DC.B    (FORM6D-X)>>2
00E0091B= 2F                      1630m          DC.B    47
00E0091C                          1631m          ENDM
00E0091C                          1632m          C68     F000,C000,FORM10,2            AND
00E0091C= F000                    1633m          DC.W    $F000
00E0091E= C000                    1634m          DC.W    $C000
00E00920= 6E                      1635m          DC.B    (FORM10-X)>>2
00E00921= 02                      1636m          DC.B    2
00E00922                          1637m          ENDM
00E00922                          1638m          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
00E00922= F0C0                    1639m          DC.W    $F0C0
00E00924= B0C0                    1640m          DC.W    $B0C0
00E00926= 5E                      1641m          DC.B    (FORM10EX-X)>>2
00E00927= 06                      1642m          DC.B    6
00E00928                          1643m          ENDM
00E00928                          1644m          C68     F138,B108,FORM12A,46           CMPM
00E00928= F138                    1645m          DC.W    $F138
00E0092A= B108                    1646m          DC.W    $B108
00E0092C= 97                      1647m          DC.B    (FORM12A-X)>>2
00E0092D= 2E                      1648m          DC.B    46
00E0092E                          1649m          ENDM
00E0092E                          1650m          C68     F100,B100,FORM10,5            EOR
00E0092E= F100                    1651m          DC.W    $F100
00E00930= B100                    1652m          DC.W    $B100
00E00932= 6E                      1653m          DC.B    (FORM10-X)>>2
00E00933= 05                      1654m          DC.B    5
00E00934                          1655m          ENDM
00E00934                          1656m          C68     F000,B000,FORM10EX,6            CMP
00E00934= F000                    1657m          DC.W    $F000
00E00936= B000                    1658m          DC.W    $B000
00E00938= 5E                      1659m          DC.B    (FORM10EX-X)>>2
00E00939= 06                      1660m          DC.B    6
00E0093A                          1661m          ENDM
00E0093A                          1662m          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
00E0093A= F0C0                    1663m          DC.W    $F0C0
00E0093C= 90C0                    1664m          DC.W    $90C0
00E0093E= 5E                      1665m          DC.B    (FORM10EX-X)>>2
00E0093F= 2C                      1666m          DC.B    44
00E00940                          1667m          ENDM
00E00940                          1668m          C68     F130,9100,FORM12,45           SUBX
00E00940= F130                    1669m          DC.W    $F130
00E00942= 9100                    1670m          DC.W    $9100
00E00944= 88                      1671m          DC.B    (FORM12-X)>>2
00E00945= 2D                      1672m          DC.B    45
00E00946                          1673m          ENDM
00E00946                          1674m          C68     F000,9000,FORM10EX,44           SUB
00E00946= F000                    1675m          DC.W    $F000
00E00948= 9000                    1676m          DC.W    $9000
00E0094A= 5E                      1677m          DC.B    (FORM10EX-X)>>2
00E0094B= 2C                      1678m          DC.B    44
00E0094C                          1679m          ENDM
00E0094C                          1680m          C68     F1F0,8100,FORM12,43           SBCD
00E0094C= F1F0                    1681m          DC.W    $F1F0
00E0094E= 8100                    1682m          DC.W    $8100
00E00950= 88                      1683m          DC.B    (FORM12-X)>>2
00E00951= 2B                      1684m          DC.B    43
00E00952                          1685m          ENDM
00E00952                          1686m          C68     F1C0,81C0,FORM6D,42           DIVS
00E00952= F1C0                    1687m          DC.W    $F1C0
00E00954= 81C0                    1688m          DC.W    $81C0
00E00956= 4A                      1689m          DC.B    (FORM6D-X)>>2
00E00957= 2A                      1690m          DC.B    42
00E00958                          1691m          ENDM
00E00958                          1692m          C68     F1C0,80C0,FORM6D,41           DIVU
00E00958= F1C0                    1693m          DC.W    $F1C0
00E0095A= 80C0                    1694m          DC.W    $80C0
00E0095C= 4A                      1695m          DC.B    (FORM6D-X)>>2
00E0095D= 29                      1696m          DC.B    41
00E0095E                          1697m          ENDM
00E0095E                          1698m          C68     F000,8000,FORM10,40           OR
00E0095E= F000                    1699m          DC.W    $F000
00E00960= 8000                    1700m          DC.W    $8000
00E00962= 6E                      1701m          DC.B    (FORM10-X)>>2
00E00963= 28                      1702m          DC.B    40
00E00964                          1703m          ENDM
00E00964                          1704m          C68     F100,7000,IMOVEQ,39           MOVEQ
00E00964= F100                    1705m          DC.W    $F100
00E00966= 7000                    1706m          DC.W    $7000
00E00968= A2                      1707m          DC.B    (IMOVEQ-X)>>2
00E00969= 27                      1708m          DC.B    39
00E0096A                          1709m          ENDM
00E0096A                          1710m          C68     FF00,6100,IBSR,51             BSR
00E0096A= FF00                    1711m          DC.W    $FF00
00E0096C= 6100                    1712m          DC.W    $6100
00E0096E= DE                      1713m          DC.B    (IBSR-X)>>2
00E0096F= 33                      1714m          DC.B    51
00E00970                          1715m          ENDM
00E00970                          1716m          C68     FF00,6000,IBSR,65             BRA
00E00970= FF00                    1717m          DC.W    $FF00
00E00972= 6000                    1718m          DC.W    $6000
00E00974= DE                      1719m          DC.B    (IBSR-X)>>2
00E00975= 41                      1720m          DC.B    65
00E00976                          1721m          ENDM
00E00976                          1722m          C68     F000,6000,ICC,38              B
00E00976= F000                    1723m          DC.W    $F000
00E00978= 6000                    1724m          DC.W    $6000
00E0097A= DD                      1725m          DC.B    (ICC-X)>>2
00E0097B= 26                      1726m          DC.B    38
00E0097C                          1727m          ENDM
00E0097C                          1728m          C68     F0F8,50C8,IDBCC,37              DB
00E0097C= F0F8                    1729m          DC.W    $F0F8
00E0097E= 50C8                    1730m          DC.W    $50C8
00E00980= D8                      1731m          DC.B    (IDBCC-X)>>2
00E00981= 25                      1732m          DC.B    37
00E00982                          1733m          ENDM
00E00982                          1734m          C68     F0C0,50C0,ISCC,36             S
00E00982= F0C0                    1735m          DC.W    $F0C0
00E00984= 50C0                    1736m          DC.W    $50C0
00E00986= D5                      1737m          DC.B    (ISCC-X)>>2
00E00987= 24                      1738m          DC.B    36
00E00988                          1739m          ENDM
00E00988                          1740m          C68     F100,5100,IQUICK,35           SUBQ
00E00988= F100                    1741m          DC.W    $F100
00E0098A= 5100                    1742m          DC.W    $5100
00E0098C= A1                      1743m          DC.B    (IQUICK-X)>>2
00E0098D= 23                      1744m          DC.B    35
00E0098E                          1745m          ENDM
00E0098E                          1746m          C68     F100,5000,IQUICK,34           ADDQ
00E0098E= F100                    1747m          DC.W    $F100
00E00990= 5000                    1748m          DC.W    $5000
00E00992= A1                      1749m          DC.B    (IQUICK-X)>>2
00E00993= 22                      1750m          DC.B    34
00E00994                          1751m          ENDM
00E00994                          1752m          C68     F1C0,41C0,FORM6A,33           LEA
00E00994= F1C0                    1753m          DC.W    $F1C0
00E00996= 41C0                    1754m          DC.W    $41C0
00E00998= 46                      1755m          DC.B    (FORM6A-X)>>2
00E00999= 21                      1756m          DC.B    33
00E0099A                          1757m          ENDM
00E0099A                          1758m          C68     F1C0,4180,FORM6D,32           CHK
00E0099A= F1C0                    1759m          DC.W    $F1C0
00E0099C= 4180                    1760m          DC.W    $4180
00E0099E= 4A                      1761m          DC.B    (FORM6D-X)>>2
00E0099F= 20                      1762m          DC.B    32
00E009A0                          1763m          ENDM
00E009A0                          1764m          C68     FFC0,4EC0,FORM11SL,31         JMP
00E009A0= FFC0                    1765m          DC.W    $FFC0
00E009A2= 4EC0                    1766m          DC.W    $4EC0
00E009A4= 7F                      1767m          DC.B    (FORM11SL-X)>>2
00E009A5= 1F                      1768m          DC.B    31
00E009A6                          1769m          ENDM
00E009A6                          1770m          C68     FFC0,4E80,FORM11SL,30         JSR
00E009A6= FFC0                    1771m          DC.W    $FFC0
00E009A8= 4E80                    1772m          DC.W    $4E80
00E009AA= 7F                      1773m          DC.B    (FORM11SL-X)>>2
00E009AB= 1E                      1774m          DC.B    30
00E009AC                          1775m          ENDM
00E009AC                          1776m          C68     FFFF,4E77,SCOMMON,29           RTR
00E009AC= FFFF                    1777m          DC.W    $FFFF
00E009AE= 4E77                    1778m          DC.W    $4E77
00E009B0= D4                      1779m          DC.B    (SCOMMON-X)>>2
00E009B1= 1D                      1780m          DC.B    29
00E009B2                          1781m          ENDM
00E009B2                          1782m          C68     FFFF,4E76,SCOMMON,28           TRAPV
00E009B2= FFFF                    1783m          DC.W    $FFFF
00E009B4= 4E76                    1784m          DC.W    $4E76
00E009B6= D4                      1785m          DC.B    (SCOMMON-X)>>2
00E009B7= 1C                      1786m          DC.B    28
00E009B8                          1787m          ENDM
00E009B8                          1788m          C68     FFFF,4E75,SCOMMON,27           RTS
00E009B8= FFFF                    1789m          DC.W    $FFFF
00E009BA= 4E75                    1790m          DC.W    $4E75
00E009BC= D4                      1791m          DC.B    (SCOMMON-X)>>2
00E009BD= 1B                      1792m          DC.B    27
00E009BE                          1793m          ENDM
00E009BE                          1794m          C68     FFFF,4E73,SCOMMON,26           RTE
00E009BE= FFFF                    1795m          DC.W    $FFFF
00E009C0= 4E73                    1796m          DC.W    $4E73
00E009C2= D4                      1797m          DC.B    (SCOMMON-X)>>2
00E009C3= 1A                      1798m          DC.B    26
00E009C4                          1799m          ENDM
00E009C4                          1800m          C68     FFFF,4E72,ISTOP,25             STOP
00E009C4= FFFF                    1801m          DC.W    $FFFF
00E009C6= 4E72                    1802m          DC.W    $4E72
00E009C8= 13                      1803m          DC.B    (ISTOP-X)>>2
00E009C9= 19                      1804m          DC.B    25
00E009CA                          1805m          ENDM
00E009CA                          1806m          C68     FFFF,4E71,SCOMMON,24           NOP
00E009CA= FFFF                    1807m          DC.W    $FFFF
00E009CC= 4E71                    1808m          DC.W    $4E71
00E009CE= D4                      1809m          DC.B    (SCOMMON-X)>>2
00E009CF= 18                      1810m          DC.B    24
00E009D0                          1811m          ENDM
00E009D0                          1812m          C68     FFFF,4E70,SCOMMON,23           RESET
00E009D0= FFFF                    1813m          DC.W    $FFFF
00E009D2= 4E70                    1814m          DC.W    $4E70
00E009D4= D4                      1815m          DC.B    (SCOMMON-X)>>2
00E009D5= 17                      1816m          DC.B    23
00E009D6                          1817m          ENDM
00E009D6                          1818m          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
00E009D6= FFF8                    1819m          DC.W    $FFF8
00E009D8= 4E68                    1820m          DC.W    $4E68
00E009DA= AE                      1821m          DC.B    (IMVFUSP-X)>>2
00E009DB= 3C                      1822m          DC.B    60
00E009DC                          1823m          ENDM
00E009DC                          1824m          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
00E009DC= FFF8                    1825m          DC.W    $FFF8
00E009DE= 4E60                    1826m          DC.W    $4E60
00E009E0= B7                      1827m          DC.B    (IMVTUSP-X)>>2
00E009E1= 3C                      1828m          DC.B    60
00E009E2                          1829m          ENDM
00E009E2                          1830m          C68     FFF8,4E58,FORM5,22            UNLINK
00E009E2= FFF8                    1831m          DC.W    $FFF8
00E009E4= 4E58                    1832m          DC.W    $4E58
00E009E6= 45                      1833m          DC.B    (FORM5-X)>>2
00E009E7= 16                      1834m          DC.B    22
00E009E8                          1835m          ENDM
00E009E8                          1836m          C68     FFF8,4E50,ILINK,21            LINK
00E009E8= FFF8                    1837m          DC.W    $FFF8
00E009EA= 4E50                    1838m          DC.W    $4E50
00E009EC= 36                      1839m          DC.B    (ILINK-X)>>2
00E009ED= 15                      1840m          DC.B    21
00E009EE                          1841m          ENDM
00E009EE                          1842m          C68     FFF0,4E40,FORM4,20            TRAP
00E009EE= FFF0                    1843m          DC.W    $FFF0
00E009F0= 4E40                    1844m          DC.W    $4E40
00E009F2= 40                      1845m          DC.B    (FORM4-X)>>2
00E009F3= 14                      1846m          DC.B    20
00E009F4                          1847m          ENDM
00E009F4                          1848m          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
00E009F4= FF80                    1849m          DC.W    $FF80
00E009F6= 4C80                    1850m          DC.W    $4C80
00E009F8= 0C                      1851m          DC.B    (IMOVEMTR-X)>>2
00E009F9= 0F                      1852m          DC.B    15
00E009FA                          1853m          ENDM
00E009FA                          1854m          C68     FFC0,4AC0,FORM1A,19           TAS
00E009FA= FFC0                    1855m          DC.W    $FFC0
00E009FC= 4AC0                    1856m          DC.W    $4AC0
00E009FE= 3D                      1857m          DC.B    (FORM1A-X)>>2
00E009FF= 13                      1858m          DC.B    19
00E00A00                          1859m          ENDM
00E00A00                          1860m          C68     FF00,4A00,FORM1,18            TST
00E00A00= FF00                    1861m          DC.W    $FF00
00E00A02= 4A00                    1862m          DC.W    $4A00
00E00A04= 3C                      1863m          DC.B    (FORM1-X)>>2
00E00A05= 12                      1864m          DC.B    18
00E00A06                          1865m          ENDM
00E00A06                          1866m          C68     FFF8,48C0,FORM3,17            EXT.L
00E00A06= FFF8                    1867m          DC.W    $FFF8
00E00A08= 48C0                    1868m          DC.W    $48C0
00E00A0A= 3F                      1869m          DC.B    (FORM3-X)>>2
00E00A0B= 11                      1870m          DC.B    17
00E00A0C                          1871m          ENDM
00E00A0C                          1872m          C68     FFF8,4880,FORM3,16            EXT.W
00E00A0C= FFF8                    1873m          DC.W    $FFF8
00E00A0E= 4880                    1874m          DC.W    $4880
00E00A10= 3F                      1875m          DC.B    (FORM3-X)>>2
00E00A11= 10                      1876m          DC.B    16
00E00A12                          1877m          ENDM
00E00A12                          1878m          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
00E00A12= FF80                    1879m          DC.W    $FF80
00E00A14= 4880                    1880m          DC.W    $4880
00E00A16= 00                      1881m          DC.B    (IMOVEMFR-X)>>2
00E00A17= 0F                      1882m          DC.B    15
00E00A18                          1883m          ENDM
00E00A18                          1884m          C68     FFF8,4840,FORM3,14            SWAP
00E00A18= FFF8                    1885m          DC.W    $FFF8
00E00A1A= 4840                    1886m          DC.W    $4840
00E00A1C= 3F                      1887m          DC.B    (FORM3-X)>>2
00E00A1D= 0E                      1888m          DC.B    14
00E00A1E                          1889m          ENDM
00E00A1E                          1890m          C68     FFC0,4840,FORM11,13           PEA
00E00A1E= FFC0                    1891m          DC.W    $FFC0
00E00A20= 4840                    1892m          DC.W    $4840
00E00A22= 7C                      1893m          DC.B    (FORM11-X)>>2
00E00A23= 0D                      1894m          DC.B    13
00E00A24                          1895m          ENDM
00E00A24                          1896m          C68     FFC0,4800,FORM1A,12           NBCD
00E00A24= FFC0                    1897m          DC.W    $FFC0
00E00A26= 4800                    1898m          DC.W    $4800
00E00A28= 3D                      1899m          DC.B    (FORM1A-X)>>2
00E00A29= 0C                      1900m          DC.B    12
00E00A2A                          1901m          ENDM
00E00A2A                          1902m          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
00E00A2A= FFC0                    1903m          DC.W    $FFC0
00E00A2C= 46C0                    1904m          DC.W    $46C0
00E00A2E= B2                      1905m          DC.B    (IMVTSR-X)>>2
00E00A2F= 3B                      1906m          DC.B    59
00E00A30                          1907m          ENDM
00E00A30                          1908m          C68     FF00,4600,FORM1,11            NOT
00E00A30= FF00                    1909m          DC.W    $FF00
00E00A32= 4600                    1910m          DC.W    $4600
00E00A34= 3C                      1911m          DC.B    (FORM1-X)>>2
00E00A35= 0B                      1912m          DC.B    11
00E00A36                          1913m          ENDM
00E00A36                          1914m          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
00E00A36= FFC0                    1915m          DC.W    $FFC0
00E00A38= 44C0                    1916m          DC.W    $44C0
00E00A3A= BA                      1917m          DC.B    (IMVTCCR-X)>>2
00E00A3B= 3B                      1918m          DC.B    59
00E00A3C                          1919m          ENDM
00E00A3C                          1920m          C68     FF00,4400,FORM1,10            NEG
00E00A3C= FF00                    1921m          DC.W    $FF00
00E00A3E= 4400                    1922m          DC.W    $4400
00E00A40= 3C                      1923m          DC.B    (FORM1-X)>>2
00E00A41= 0A                      1924m          DC.B    10
00E00A42                          1925m          ENDM
00E00A42                          1926m          C68     FF00,4200,FORM1,9             CLR
00E00A42= FF00                    1927m          DC.W    $FF00
00E00A44= 4200                    1928m          DC.W    $4200
00E00A46= 3C                      1929m          DC.B    (FORM1-X)>>2
00E00A47= 09                      1930m          DC.B    9
00E00A48                          1931m          ENDM
00E00A48                          1932m          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
00E00A48= FFC0                    1933m          DC.W    $FFC0
00E00A4A= 40C0                    1934m          DC.W    $40C0
00E00A4C= AA                      1935m          DC.B    (IMVFSR-X)>>2
00E00A4D= 3B                      1936m          DC.B    59
00E00A4E                          1937m          ENDM
00E00A4E                          1938m          C68     FF00,4000,FORM1,8             NEGX
00E00A4E= FF00                    1939m          DC.W    $FF00
00E00A50= 4000                    1940m          DC.W    $4000
00E00A52= 3C                      1941m          DC.B    (FORM1-X)>>2
00E00A53= 08                      1942m          DC.B    8
00E00A54                          1943m          ENDM
00E00A54                          1944m          C68     F000,3000,IMOVE,59            MOVE.W
00E00A54= F000                    1945m          DC.W    $F000
00E00A56= 3000                    1946m          DC.W    $3000
00E00A58= 35                      1947m          DC.B    (IMOVE-X)>>2
00E00A59= 3B                      1948m          DC.B    59
00E00A5A                          1949m          ENDM
00E00A5A                          1950m          C68     F000,2000,IMOVE,60            MOVE.L
00E00A5A= F000                    1951m          DC.W    $F000
00E00A5C= 2000                    1952m          DC.W    $2000
00E00A5E= 35                      1953m          DC.B    (IMOVE-X)>>2
00E00A5F= 3C                      1954m          DC.B    60
00E00A60                          1955m          ENDM
00E00A60                          1956m          C68     F000,1000,IMOVE,58            MOVE.B
00E00A60= F000                    1957m          DC.W    $F000
00E00A62= 1000                    1958m          DC.W    $1000
00E00A64= 35                      1959m          DC.B    (IMOVE-X)>>2
00E00A65= 3A                      1960m          DC.B    58
00E00A66                          1961m          ENDM
00E00A66                          1962m          C68     FF00,0C00,IMMED,6             CMP       #
00E00A66= FF00                    1963m          DC.W    $FF00
00E00A68= 0C00                    1964m          DC.W    $0C00
00E00A6A= 18                      1965m          DC.B    (IMMED-X)>>2
00E00A6B= 06                      1966m          DC.B    6
00E00A6C                          1967m          ENDM
00E00A6C                          1968m          C68     FF00,0A00,IMMED,5             EOR       #
00E00A6C= FF00                    1969m          DC.W    $FF00
00E00A6E= 0A00                    1970m          DC.W    $0A00
00E00A70= 18                      1971m          DC.B    (IMMED-X)>>2
00E00A71= 05                      1972m          DC.B    5
00E00A72                          1973m          ENDM
00E00A72                          1974m          C68     FF00,0600,IMMED,4             ADD       #
00E00A72= FF00                    1975m          DC.W    $FF00
00E00A74= 0600                    1976m          DC.W    $0600
00E00A76= 18                      1977m          DC.B    (IMMED-X)>>2
00E00A77= 04                      1978m          DC.B    4
00E00A78                          1979m          ENDM
00E00A78                          1980m          C68     FF00,0400,IMMED,3             SUB       #
00E00A78= FF00                    1981m          DC.W    $FF00
00E00A7A= 0400                    1982m          DC.W    $0400
00E00A7C= 18                      1983m          DC.B    (IMMED-X)>>2
00E00A7D= 03                      1984m          DC.B    3
00E00A7E                          1985m          ENDM
00E00A7E                          1986m          C68     FF00,0200,IMMED,2             AND       #
00E00A7E= FF00                    1987m          DC.W    $FF00
00E00A80= 0200                    1988m          DC.W    $0200
00E00A82= 18                      1989m          DC.B    (IMMED-X)>>2
00E00A83= 02                      1990m          DC.B    2
00E00A84                          1991m          ENDM
00E00A84                          1992m          C68     FF00,0000,IMMED,1             OR        #
00E00A84= FF00                    1993m          DC.W    $FF00
00E00A86= 0000                    1994m          DC.W    $0000
00E00A88= 18                      1995m          DC.B    (IMMED-X)>>2
00E00A89= 01                      1996m          DC.B    1
00E00A8A                          1997m          ENDM
00E00A8A                          1998m          C68     F138,0108,IMOVEP,0            MOVEP
00E00A8A= F138                    1999m          DC.W    $F138
00E00A8C= 0108                    2000m          DC.W    $0108
00E00A8E= BE                      2001m          DC.B    (IMOVEP-X)>>2
00E00A8F= 00                      2002m          DC.B    0
00E00A90                          2003m          ENDM
00E00A90                          2004m          C68     FFC0,08C0,ISETS,64            BSET
00E00A90= FFC0                    2005m          DC.W    $FFC0
00E00A92= 08C0                    2006m          DC.W    $08C0
00E00A94= F0                      2007m          DC.B    (ISETS-X)>>2
00E00A95= 40                      2008m          DC.B    64
00E00A96                          2009m          ENDM
00E00A96                          2010m          C68     FFC0,0880,ISETS,63            BCLR
00E00A96= FFC0                    2011m          DC.W    $FFC0
00E00A98= 0880                    2012m          DC.W    $0880
00E00A9A= F0                      2013m          DC.B    (ISETS-X)>>2
00E00A9B= 3F                      2014m          DC.B    63
00E00A9C                          2015m          ENDM
00E00A9C                          2016m          C68     FFC0,0840,ISETS,62            BCHG
00E00A9C= FFC0                    2017m          DC.W    $FFC0
00E00A9E= 0840                    2018m          DC.W    $0840
00E00AA0= F0                      2019m          DC.B    (ISETS-X)>>2
00E00AA1= 3E                      2020m          DC.B    62
00E00AA2                          2021m          ENDM
00E00AA2                          2022m          C68     FFC0,0800,ISETS,61            BTST
00E00AA2= FFC0                    2023m          DC.W    $FFC0
00E00AA4= 0800                    2024m          DC.W    $0800
00E00AA6= F0                      2025m          DC.B    (ISETS-X)>>2
00E00AA7= 3D                      2026m          DC.B    61
00E00AA8                          2027m          ENDM
00E00AA8                          2028m          C68     F1C0,01C0,ISETD,64            BSET
00E00AA8= F1C0                    2029m          DC.W    $F1C0
00E00AAA= 01C0                    2030m          DC.W    $01C0
00E00AAC= EC                      2031m          DC.B    (ISETD-X)>>2
00E00AAD= 40                      2032m          DC.B    64
00E00AAE                          2033m          ENDM
00E00AAE                          2034m          C68     F1C0,0180,ISETD,63            BCLR
00E00AAE= F1C0                    2035m          DC.W    $F1C0
00E00AB0= 0180                    2036m          DC.W    $0180
00E00AB2= EC                      2037m          DC.B    (ISETD-X)>>2
00E00AB3= 3F                      2038m          DC.B    63
00E00AB4                          2039m          ENDM
00E00AB4                          2040m          C68     F1C0,0140,ISETD,62            BCHG
00E00AB4= F1C0                    2041m          DC.W    $F1C0
00E00AB6= 0140                    2042m          DC.W    $0140
00E00AB8= EC                      2043m          DC.B    (ISETD-X)>>2
00E00AB9= 3E                      2044m          DC.B    62
00E00ABA                          2045m          ENDM
00E00ABA                          2046m          C68     F1C0,0100,ISETD,61            BTST
00E00ABA= F1C0                    2047m          DC.W    $F1C0
00E00ABC= 0100                    2048m          DC.W    $0100
00E00ABE= EC                      2049m          DC.B    (ISETD-X)>>2
00E00ABF= 3D                      2050m          DC.B    61
00E00AC0                          2051m          ENDM
00E00AC0                          2052  TBLE     DS      0
00E00AC0                          2053  
00E00AC0                          2054  N68      MACRO
00E00AC0                          2055           DC.B    '\1',128+'\2'        \1\2
00E00AC0                          2056           ENDM
00E00AC0                          2057  
00E00AC0                          2058  OPCTBL   DS      0
00E00AC0                          2059m          N68     MOVE,P    0
00E00AC0= 4D 4F 56 45 D0          2060m          DC.B    'MOVE',128+'P'        MOVEP
00E00AC5                          2061m          ENDM
00E00AC5                          2062m          N68     O,R       1
00E00AC5= 4F D2                   2063m          DC.B    'O',128+'R'        OR
00E00AC7                          2064m          ENDM
00E00AC7                          2065m          N68     AN,D      2
00E00AC7= 41 4E C4                2066m          DC.B    'AN',128+'D'        AND
00E00ACA                          2067m          ENDM
00E00ACA                          2068m          N68     SU,B      3
00E00ACA= 53 55 C2                2069m          DC.B    'SU',128+'B'        SUB
00E00ACD                          2070m          ENDM
00E00ACD                          2071m          N68     AD,D      4
00E00ACD= 41 44 C4                2072m          DC.B    'AD',128+'D'        ADD
00E00AD0                          2073m          ENDM
00E00AD0                          2074m          N68     EO,R      5
00E00AD0= 45 4F D2                2075m          DC.B    'EO',128+'R'        EOR
00E00AD3                          2076m          ENDM
00E00AD3                          2077m          N68     CM,P      6
00E00AD3= 43 4D D0                2078m          DC.B    'CM',128+'P'        CMP
00E00AD6                          2079m          ENDM
00E00AD6                          2080m          N68     MOV,E     7
00E00AD6= 4D 4F 56 C5             2081m          DC.B    'MOV',128+'E'        MOVE
00E00ADA                          2082m          ENDM
00E00ADA                          2083m          N68     NEG,X     8
00E00ADA= 4E 45 47 D8             2084m          DC.B    'NEG',128+'X'        NEGX
00E00ADE                          2085m          ENDM
00E00ADE                          2086m          N68     CL,R      9
00E00ADE= 43 4C D2                2087m          DC.B    'CL',128+'R'        CLR
00E00AE1                          2088m          ENDM
00E00AE1                          2089m          N68     NE,G      10
00E00AE1= 4E 45 C7                2090m          DC.B    'NE',128+'G'        NEG
00E00AE4                          2091m          ENDM
00E00AE4                          2092m          N68     NO,T      11
00E00AE4= 4E 4F D4                2093m          DC.B    'NO',128+'T'        NOT
00E00AE7                          2094m          ENDM
00E00AE7                          2095m          N68     NBC,D     12
00E00AE7= 4E 42 43 C4             2096m          DC.B    'NBC',128+'D'        NBCD
00E00AEB                          2097m          ENDM
00E00AEB                          2098m          N68     PEA.,L    13
00E00AEB= 50 45 41 2E CC          2099m          DC.B    'PEA.',128+'L'        PEA.L
00E00AF0                          2100m          ENDM
00E00AF0                          2101m          N68     SWAP.,W   14
00E00AF0= 53 57 41 50 2E D7       2102m          DC.B    'SWAP.',128+'W'        SWAP.W
00E00AF6                          2103m          ENDM
00E00AF6                          2104m          N68     MOVE,M    15
00E00AF6= 4D 4F 56 45 CD          2105m          DC.B    'MOVE',128+'M'        MOVEM
00E00AFB                          2106m          ENDM
00E00AFB                          2107m          N68     EXT.,W    16
00E00AFB= 45 58 54 2E D7          2108m          DC.B    'EXT.',128+'W'        EXT.W
00E00B00                          2109m          ENDM
00E00B00                          2110m          N68     EXT.,L    17
00E00B00= 45 58 54 2E CC          2111m          DC.B    'EXT.',128+'L'        EXT.L
00E00B05                          2112m          ENDM
00E00B05                          2113m          N68     TS,T      18
00E00B05= 54 53 D4                2114m          DC.B    'TS',128+'T'        TST
00E00B08                          2115m          ENDM
00E00B08                          2116m          N68     TAS.,B    19
00E00B08= 54 41 53 2E C2          2117m          DC.B    'TAS.',128+'B'        TAS.B
00E00B0D                          2118m          ENDM
00E00B0D                          2119m          N68     TRA,P     20
00E00B0D= 54 52 41 D0             2120m          DC.B    'TRA',128+'P'        TRAP
00E00B11                          2121m          ENDM
00E00B11                          2122m          N68     LIN,K     21
00E00B11= 4C 49 4E CB             2123m          DC.B    'LIN',128+'K'        LINK
00E00B15                          2124m          ENDM
00E00B15                          2125m          N68     UNL,K     22
00E00B15= 55 4E 4C CB             2126m          DC.B    'UNL',128+'K'        UNLK
00E00B19                          2127m          ENDM
00E00B19                          2128m          N68     RESE,T    23
00E00B19= 52 45 53 45 D4          2129m          DC.B    'RESE',128+'T'        RESET
00E00B1E                          2130m          ENDM
00E00B1E                          2131m          N68     NO,P      24
00E00B1E= 4E 4F D0                2132m          DC.B    'NO',128+'P'        NOP
00E00B21                          2133m          ENDM
00E00B21                          2134m          N68     STO,P     25
00E00B21= 53 54 4F D0             2135m          DC.B    'STO',128+'P'        STOP
00E00B25                          2136m          ENDM
00E00B25                          2137m          N68     RT,E      26
00E00B25= 52 54 C5                2138m          DC.B    'RT',128+'E'        RTE
00E00B28                          2139m          ENDM
00E00B28                          2140m          N68     RT,S      27
00E00B28= 52 54 D3                2141m          DC.B    'RT',128+'S'        RTS
00E00B2B                          2142m          ENDM
00E00B2B                          2143m          N68     TRAP,V    28
00E00B2B= 54 52 41 50 D6          2144m          DC.B    'TRAP',128+'V'        TRAPV
00E00B30                          2145m          ENDM
00E00B30                          2146m          N68     RT,R      29
00E00B30= 52 54 D2                2147m          DC.B    'RT',128+'R'        RTR
00E00B33                          2148m          ENDM
00E00B33                          2149m          N68     JS,R      30
00E00B33= 4A 53 D2                2150m          DC.B    'JS',128+'R'        JSR
00E00B36                          2151m          ENDM
00E00B36                          2152m          N68     JM,P      31
00E00B36= 4A 4D D0                2153m          DC.B    'JM',128+'P'        JMP
00E00B39                          2154m          ENDM
00E00B39                          2155m          N68     CHK.,W    32
00E00B39= 43 48 4B 2E D7          2156m          DC.B    'CHK.',128+'W'        CHK.W
00E00B3E                          2157m          ENDM
00E00B3E                          2158m          N68     LEA.,L    33
00E00B3E= 4C 45 41 2E CC          2159m          DC.B    'LEA.',128+'L'        LEA.L
00E00B43                          2160m          ENDM
00E00B43                          2161m          N68     ADD,Q     34
00E00B43= 41 44 44 D1             2162m          DC.B    'ADD',128+'Q'        ADDQ
00E00B47                          2163m          ENDM
00E00B47                          2164m          N68     SUB,Q     35
00E00B47= 53 55 42 D1             2165m          DC.B    'SUB',128+'Q'        SUBQ
00E00B4B                          2166m          ENDM
00E00B4B= D3                      2167           DC.B    128+'S'   36
00E00B4C                          2168m          N68     D,B       37
00E00B4C= 44 C2                   2169m          DC.B    'D',128+'B'        DB
00E00B4E                          2170m          ENDM
00E00B4E= C2                      2171           DC.B    128+'B'   38
00E00B4F                          2172m          N68     MOVEQ.,L  .....39
00E00B4F= 4D 4F 56 45 51 2E CC    2173m          DC.B    'MOVEQ.',128+'L'        MOVEQ.L
00E00B56                          2174m          ENDM
00E00B56                          2175m          N68     O,R       40
00E00B56= 4F D2                   2176m          DC.B    'O',128+'R'        OR
00E00B58                          2177m          ENDM
00E00B58                          2178m          N68     DIVU.,W   41
00E00B58= 44 49 56 55 2E D7       2179m          DC.B    'DIVU.',128+'W'        DIVU.W
00E00B5E                          2180m          ENDM
00E00B5E                          2181m          N68     DIVS.,W   42
00E00B5E= 44 49 56 53 2E D7       2182m          DC.B    'DIVS.',128+'W'        DIVS.W
00E00B64                          2183m          ENDM
00E00B64                          2184m          N68     SBC,D     43
00E00B64= 53 42 43 C4             2185m          DC.B    'SBC',128+'D'        SBCD
00E00B68                          2186m          ENDM
00E00B68                          2187m          N68     SU,B      44
00E00B68= 53 55 C2                2188m          DC.B    'SU',128+'B'        SUB
00E00B6B                          2189m          ENDM
00E00B6B                          2190m          N68     SUB,X     45
00E00B6B= 53 55 42 D8             2191m          DC.B    'SUB',128+'X'        SUBX
00E00B6F                          2192m          ENDM
00E00B6F                          2193m          N68     CMP,M     46
00E00B6F= 43 4D 50 CD             2194m          DC.B    'CMP',128+'M'        CMPM
00E00B73                          2195m          ENDM
00E00B73                          2196m          N68     MULU.,W   47
00E00B73= 4D 55 4C 55 2E D7       2197m          DC.B    'MULU.',128+'W'        MULU.W
00E00B79                          2198m          ENDM
00E00B79                          2199m          N68     MULS.,W   48
00E00B79= 4D 55 4C 53 2E D7       2200m          DC.B    'MULS.',128+'W'        MULS.W
00E00B7F                          2201m          ENDM
00E00B7F                          2202m          N68     ABC,D    49
00E00B7F= 41 42 43 C4             2203m          DC.B    'ABC',128+'D'        ABCD
00E00B83                          2204m          ENDM
00E00B83                          2205m          N68     EX,G      50
00E00B83= 45 58 C7                2206m          DC.B    'EX',128+'G'        EXG
00E00B86                          2207m          ENDM
00E00B86                          2208m          N68     BS,R      .....51
00E00B86= 42 53 D2                2209m          DC.B    'BS',128+'R'        BSR
00E00B89                          2210m          ENDM
00E00B89                          2211m          N68     NUL,L     .....52
00E00B89= 4E 55 4C CC             2212m          DC.B    'NUL',128+'L'        NULL
00E00B8D                          2213m          ENDM
00E00B8D                          2214m          N68     ADD,X     53
00E00B8D= 41 44 44 D8             2215m          DC.B    'ADD',128+'X'        ADDX
00E00B91                          2216m          ENDM
00E00B91                          2217m          N68     A,S       54
00E00B91= 41 D3                   2218m          DC.B    'A',128+'S'        AS
00E00B93                          2219m          ENDM
00E00B93                          2220m          N68     L,S       55
00E00B93= 4C D3                   2221m          DC.B    'L',128+'S'        LS
00E00B95                          2222m          ENDM
00E00B95                          2223m          N68     R,O       56
00E00B95= 52 CF                   2224m          DC.B    'R',128+'O'        RO
00E00B97                          2225m          ENDM
00E00B97                          2226m          N68     RO,X      57
00E00B97= 52 4F D8                2227m          DC.B    'RO',128+'X'        ROX
00E00B9A                          2228m          ENDM
00E00B9A                          2229m          N68     MOVE.,B   58
00E00B9A= 4D 4F 56 45 2E C2       2230m          DC.B    'MOVE.',128+'B'        MOVE.B
00E00BA0                          2231m          ENDM
00E00BA0                          2232m          N68     MOVE.,W   59
00E00BA0= 4D 4F 56 45 2E D7       2233m          DC.B    'MOVE.',128+'W'        MOVE.W
00E00BA6                          2234m          ENDM
00E00BA6                          2235m          N68     MOVE.,L   60
00E00BA6= 4D 4F 56 45 2E CC       2236m          DC.B    'MOVE.',128+'L'        MOVE.L
00E00BAC                          2237m          ENDM
00E00BAC                          2238m          N68     BTS,T     61
00E00BAC= 42 54 53 D4             2239m          DC.B    'BTS',128+'T'        BTST
00E00BB0                          2240m          ENDM
00E00BB0                          2241m          N68     BCH,G     62
00E00BB0= 42 43 48 C7             2242m          DC.B    'BCH',128+'G'        BCHG
00E00BB4                          2243m          ENDM
00E00BB4                          2244m          N68     BCL,R     63
00E00BB4= 42 43 4C D2             2245m          DC.B    'BCL',128+'R'        BCLR
00E00BB8                          2246m          ENDM
00E00BB8                          2247m          N68     BSE,T     64
00E00BB8= 42 53 45 D4             2248m          DC.B    'BSE',128+'T'        BSET
00E00BBC                          2249m          ENDM
00E00BBC                          2250m          N68     BR,A      65
00E00BBC= 42 52 C1                2251m          DC.B    'BR',128+'A'        BRA
00E00BBF                          2252m          ENDM
00E00BBF                          2253  
00E00BBF= 00                      2254           DC.B    0              PAD BYTE
00E00BC0                          2255  
00E00BC0                          2256  
00E00BC0                          2257  
00E00BC0                          2258  ;   ORG $2000
00E00BC0                          2259  
00E00BC0  46FC 2700               2260  MAIN MOVE.W #INT_OFF,SR  ; INTERRUPT OFF, SUPERVISOR MODE SET
00E00BC4                          2261  
00E00BC4  2E7C 00DFFFF4           2262        MOVE.L #SUPER_STACK+USER_STACK,SP ; INIT TOP OF USER STACK
00E00BCA                          2263  ;      movea.l #DOUT,a1
00E00BCA                          2264  ;      move.b #$FF,d2    ; with cpld
00E00BCA                          2265  ;      MOVE.B D2,(A1)    ; OFF LEDS
00E00BCA                          2266  
00E00BCA  6100 015E               2267        BSR INIT_ACIA         ; ACIA init
00E00BCE                          2268  
00E00BCE  6100 0B2C               2269        BSR VECINIT           ; EXCEPTION VECTOR init
00E00BD2                          2270  
00E00BD2  6100 01B0               2271        BSR SCROLL            ; NEW LINE
00E00BD6                          2272  
00E00BD6  6100 08A8               2273        BSR CLEAR_MON_RAM     ; Initialize 1Kbyte from RAMBASE with 0.
00E00BDA                          2274  
00E00BDA  47F9 00E017D5           2275        LEA.L TITLE1.L,A3     ; print START MESSAGE
00E00BE0  6100 017A               2276        BSR PSTR
00E00BE4                          2277  
00E00BE4  2C79 000000C0           2278        MOVEA.L RAMBASE.L,A6  ; Initialize Monitor work area 
00E00BEA  2D7C 00000000 00A6      2279        MOVE.L #RAM,POINTER_NOW(A6)
00E00BF2  2D7C 00000400 00F0      2280        MOVE.L #RAM+$400,USER_PC(A6)    ; INIT USER PC TO START OF RAM
00E00BFA                          2281  
00E00BFA  2D7C 00DFFFF4 00E6      2282        MOVE.L #SUPER_STACK+USER_STACK,USER_USP(A6) ; INIT USER STACK
00E00C02  40C0                    2283        MOVE.W SR,D0
00E00C04  3D40 00EA               2284        MOVE.W D0,USER_SR(A6) 
00E00C08                          2285  
00E00C08  42AE 0024               2286        CLR.L FLAG(A6)         ; CLEAR SYSTEM MONITOR FLAG
00E00C0C  46FC 2000               2287        MOVE.W #INT_ON,SR       ; ON INTERRUPT, SUPERVISOR MODE SET
00E00C10                          2288  
00E00C10  6100 017E               2289  loop  BSR SEND_PROMPT
00E00C14  6100 0140               2290        BSR CIN
00E00C18  B03C 0040               2291        CMP.B #$40,D0
00E00C1C  6D04                    2292        blt.S NO_CHANGE
00E00C1E                          2293  
00E00C1E  C03C 00DF               2294        AND.B #%11011111,D0
00E00C22                          2295  
00E00C22                          2296  NO_CHANGE
00E00C22                          2297  
00E00C22  B03C 004C               2298        CMP.B #'L',D0
00E00C26  6600 0008               2299        BNE NEXT1
00E00C2A  6100 01E0               2300        BSR READ_S_REC
00E00C2E  60E0                    2301        BRA LOOP
00E00C30                          2302  
00E00C30  B03C 0053               2303  NEXT1 CMP.B #'S',D0       
00E00C34  6600 0008               2304        BNE NEXT2
00E00C38  6100 0992               2305        BSR VIEW_USP      ; VIEW USER STACK
00E00C3C  60D2                    2306        BRA LOOP
00E00C3E                          2307  
00E00C3E                          2308  
00E00C3E  B03C 0048               2309  NEXT2 CMP.B #'H',D0
00E00C42  6600 0008               2310        BNE NEXT3
00E00C46  6100 030E               2311        BSR HEX_DUMP
00E00C4A  60C4                    2312        BRA LOOP
00E00C4C                          2313  
00E00C4C  B03C 004E               2314  NEXT3 CMP.B #'N',D0
00E00C50  6600 0008               2315        BNE NEXT4
00E00C54  6100 0374               2316        BSR NEW_POINTER
00E00C58  60B6                    2317        BRA LOOP
00E00C5A                          2318  
00E00C5A  B03C 004A               2319  NEXT4 CMP.B #'J',D0
00E00C5E  6600 0008               2320        BNE NEXT5
00E00C62  6100 0774               2321        BSR JUMP
00E00C66  60A8                    2322        BRA LOOP
00E00C68                          2323  
00E00C68  B03C 005A               2324  NEXT5 CMP.B #'Z',D0
00E00C6C  6600 0008               2325        BNE NEXT6
00E00C70  6100 0902               2326        BSR UPLOAD         ; PRINT_DEBUG <------ USE Z FOR UPLOAD BINARY IMAGE
00E00C74  609A                    2327        BRA LOOP
00E00C76                          2328  
00E00C76                          2329  
00E00C76  B03C 0046               2330  NEXT6 CMP.B #'F',D0
00E00C7A  6600 0008               2331        BNE NEXT7
00E00C7E  6100 03E6               2332        BSR FILL_MEMORY
00E00C82  608C                    2333        BRA LOOP
00E00C84                          2334  
00E00C84  B03C 0045               2335  NEXT7 CMP.B #'E',D0
00E00C88  6600 000A               2336        BNE NEXT8
00E00C8C  6100 044C               2337        BSR EDIT_MEMORY
00E00C90  6000 FF7E               2338        BRA LOOP
00E00C94                          2339  
00E00C94  B03C 0043               2340  NEXT8 CMP.B #'C',D0
00E00C98  6600 000A               2341        BNE NEXT9
00E00C9C  6100 0402               2342        BSR CLEAR_MEMORY
00E00CA0  6000 FF6E               2343        BRA LOOP
00E00CA4                          2344  
00E00CA4  B03C 0051               2345  NEXT9 CMP.B #'Q',D0
00E00CA8  6600 000A               2346        BNE NEXT10
00E00CAC  6100 0360               2347        BSR QUICK_HOME
00E00CB0  6000 FF5E               2348        BRA LOOP
00E00CB4                          2349  
00E00CB4  B03C 003F               2350  NEXT10 CMP.B #'?',D0
00E00CB8  6608                    2351         BNE.S NEXT11
00E00CBA  6100 04AC               2352         BSR HELP
00E00CBE  6000 FF50               2353         BRA LOOP
00E00CC2                          2354  
00E00CC2                          2355  
00E00CC2  B03C 0052               2356  NEXT11 CMP.B #'R',D0
00E00CC6  6608                    2357        BNE.S NEXT12
00E00CC8  6100 05C8               2358        BSR DISPLAY_REG
00E00CCC  6000 FF42               2359        BRA LOOP
00E00CD0                          2360  
00E00CD0  B03C 002E               2361  NEXT12 CMP.B #'.',D0
00E00CD4  6608                    2362        BNE.S NEXT13
00E00CD6  6100 07BC               2363        BSR MODIFY_REG
00E00CDA  6000 FF34               2364        BRA LOOP
00E00CDE                          2365  
00E00CDE  B03C 0044               2366  NEXT13 CMP.B #'D',D0
00E00CE2  6608                    2367         BNE.S NEXT14
00E00CE4  6100 0836               2368         BSR DISASSEMBLE
00E00CE8  6000 FF26               2369         BRA LOOP
00E00CEC                          2370  
00E00CEC  B03C 0041               2371  NEXT14 CMP.B #'A',D0
00E00CF0  6608                    2372         BNE.S NEXT15
00E00CF2  6100 08CC               2373         BSR ABOUT
00E00CF6  6000 FF18               2374         BRA LOOP
00E00CFA                          2375  
00E00CFA                          2376  
00E00CFA  B03C 0054               2377  NEXT15 CMP.B #'T',D0
00E00CFE  6608                    2378         BNE.S NEXT16
00E00D00  6100 073A               2379         BSR TRACE_JUMP
00E00D04  6000 FF0A               2380         BRA LOOP
00E00D08                          2381  
00E00D08  B03C 0047               2382  NEXT16 CMP.B #'G',D0
00E00D0C  6606                    2383         BNE.S NEXT17
00E00D0E  4EF9 00102000           2384         JMP $102000.L       ; USE G COMMAND FOR SIMPLE JUMP TO RAM
00E00D14                          2385  
00E00D14                          2386  
00E00D14  B03C 0042               2387  NEXT17 CMP.B #'B',D0
00E00D18  6604                    2388         BNE.S NEXT18
00E00D1A  6000 091C               2389         BRA BOOT_RAM
00E00D1E                          2390  
00E00D1E  6100 004A               2391  NEXT18  BSR NEW_LINE
00E00D22  6100 0086               2392        BSR SEND_TITLE
00E00D26  6000 FEE8               2393        bra loop
00E00D2A                          2394  
00E00D2A                          2395  ; CONSOLE IS ACIA1
00E00D2A                          2396  
00E00D2A                 FALSE    2397        IFEQ  EASY68K_SIM
00E00D2A                          2398  ; INIT ACIA
00E00D2A                          2399      ENDC
00E00D2A                          2400  
00E00D2A                          2401  ; CONSOLE IS EASy68K Sim68K I/O
00E00D2A                          2402  
00E00D2A                 TRUE     2403      IFNE    EASY68K_SIM
00E00D2A                          2404  
00E00D2A                          2405  INIT_ACIA  ;Keyboard Echo.
00E00D2A                          2406             ;D1.B = 0 to turn off keyboard echo.
00E00D2A                          2407             ;D1.B = non zero to enable it (default).
00E00D2A                          2408             ;Echo is restored on 'Reset' or when a new file is loaded.
00E00D2A  123C 0000               2409             MOVE.B #0,D1
00E00D2E  103C 000C               2410             MOVE.B #12,D0
00E00D32  4E4F                    2411             TRAP #15
00E00D34  4E75                    2412             RTS
00E00D36                          2413  
00E00D36  48E7 C000               2414  COUT      MOVEM.L D0-D1,-(SP)  ; SAVE D1
00E00D3A  1200                    2415            MOVE.B D0,D1
00E00D3C  103C 0006               2416            MOVE.B #6,D0
00E00D40  4E4F                    2417            TRAP #15
00E00D42  4CDF 0003               2418            MOVEM.L (SP)+,D0-D1 ; RESTORE D1
00E00D46  4E75                    2419            RTS
00E00D48                          2420  
00E00D48                          2421  
00E00D48  2F01                    2422  CINS      MOVE.L D1,-(SP)  ; SAVE D1
00E00D4A  103C 0005               2423            MOVE.B #5,D0
00E00D4E  4E4F                    2424            TRAP #15
00E00D50  1001                    2425            MOVE.B D1,D0  ;ACIAD.L,D0
00E00D52  221F                    2426            MOVE.L (SP)+,D1 ; RESTORE D1
00E00D54  4E75                    2427            RTS
00E00D56                          2428  
00E00D56                          2429  
00E00D56  61F0                    2430  CIN       BSR CINS
00E00D58  61DC                    2431            BSR COUT
00E00D5A  4E75                    2432            RTS
00E00D5C                          2433  
00E00D5C                          2434           ENDC
00E00D5C                          2435  
00E00D5C                          2436  
00E00D5C                          2437  ; A3 POINTED TO FIRST BYTE
00E00D5C                          2438  ; END WITH 0
00E00D5C                          2439  
00E00D5C  101B                    2440  PSTR     MOVE.B (A3)+,D0
00E00D5E  B03C 0000               2441           CMP.B  #0,D0
00E00D62  6704                    2442           BEQ.S PSTR1
00E00D64  61D0                    2443           BSR COUT
00E00D66  60F4                    2444           BRA.S PSTR
00E00D68                          2445  
00E00D68  4E75                    2446  PSTR1    RTS
00E00D6A                          2447  
00E00D6A                          2448  ; NEW LINE
00E00D6A                          2449  
00E00D6A  2F00                    2450  NEW_LINE MOVE.L D0,-(SP)
00E00D6C  103C 000D               2451           MOVE.B #CR,D0
00E00D70  61C4                    2452           BSR COUT
00E00D72  103C 000A               2453           MOVE.B #LF,D0
00E00D76  61BE                    2454           BSR COUT
00E00D78  201F                    2455           MOVE.L (SP)+,D0
00E00D7A  4E75                    2456           RTS
00E00D7C                          2457  
00E00D7C  103C 0020               2458  SPACE    MOVE.B #SP,D0
00E00D80  61B4                    2459           BSR COUT
00E00D82  4E75                    2460           RTS
00E00D84                          2461  
00E00D84  323C 0019               2462  SCROLL   MOVE.W #25,D1
00E00D88  61E0                    2463  SCROLL1  BSR NEW_LINE
00E00D8A  51C9 FFFC               2464           DBF D1,SCROLL1
00E00D8E  4E75                    2465           RTS
00E00D90                          2466  
00E00D90                          2467  SEND_PROMPT
00E00D90  2C79 000000C0           2468          MOVEA.L RAMBASE.L,A6
00E00D96  61D2                    2469          BSR NEW_LINE
00E00D98  202E 00A6               2470          MOVE.L POINTER_NOW(A6),D0
00E00D9C  6100 01A4               2471          BSR OUT6X
00E00DA0  47F9 00E01811           2472          LEA.L PROMPT.L,A3
00E00DA6  61B4                    2473          BSR PSTR
00E00DA8  4E75                    2474          RTS
00E00DAA                          2475  
00E00DAA  47F9 00E017AC           2476  SEND_TITLE LEA.L TITLE.L,A3
00E00DB0  61AA                    2477             BSR PSTR
00E00DB2  4E75                    2478             RTS
00E00DB4                          2479  
00E00DB4                          2480  ; S19 LOADER
00E00DB4                          2481  
00E00DB4                          2482  ; CONVERT ASCII LETTER TO 8-BIT VALUE
00E00DB4                          2483  
00E00DB4  0400 0030               2484  TO_HEX SUBI.B #$30,D0
00E00DB8  0C00 000A               2485         CMPI.B #$A,D0
00E00DBC  6B00 0008               2486         BMI  ZERO_TO_NINE
00E00DC0  C03C 00DF               2487         AND.B #%11011111,D0
00E00DC4  5F00                    2488         SUBI.B #7,D0
00E00DC6                          2489  
00E00DC6                          2490  ZERO_TO_NINE
00E00DC6                          2491  
00E00DC6  1200                    2492         MOVE.B D0,D1
00E00DC8                          2493  
00E00DC8  4E75                    2494          RTS
00E00DCA                          2495  
00E00DCA                          2496  ; READ TWO BYTES ASCII AND CONVERT TO SINGLE BYTE DATA
00E00DCA                          2497  
00E00DCA                          2498  ; ENTRY: D0 FROM CIN 
00E00DCA                          2499  ; EXIT: D1 8-BIT VALUE 
00E00DCA                          2500  ;       
00E00DCA                          2501  
00E00DCA                          2502  
00E00DCA  618A                    2503  GET_HEX  BSR CIN
00E00DCC                          2504  
00E00DCC  B03C 0058               2505           CMP.B #'X',D0         ; IF BIT_ESC PRESSED
00E00DD0  6608                    2506           BNE.S GET_HEX1
00E00DD2  08EE 0000 0024          2507           BSET.B #BIT_ESC,FLAG(A6)
00E00DD8  4E75                    2508           RTS
00E00DDA                          2509  
00E00DDA                          2510  
00E00DDA  B03C 000D               2511  GET_HEX1 CMP.B #CR,D0
00E00DDE  6608                    2512           BNE.S GET_HEX2
00E00DE0  08EE 0001 0024          2513           BSET.B #1,FLAG(A6)       ; ENTER PRESSED
00E00DE6  4E75                    2514           RTS
00E00DE8                          2515  
00E00DE8                          2516  
00E00DE8  61CA                    2517  GET_HEX2 BSR TO_HEX
00E00DEA  E919                    2518           ROL.B #4,D1
00E00DEC  1401                    2519           MOVE.B D1,D2
00E00DEE  6100 FF66               2520           BSR CIN
00E00DF2  61C0                    2521           BSR TO_HEX
00E00DF4  D202                    2522           ADD.B D2,D1
00E00DF6  4E75                    2523           RTS
00E00DF8                          2524  
00E00DF8                          2525  
00E00DF8  6100 FF4E               2526  GET_HEXS   BSR CINS
00E00DFC  61B6                    2527           BSR TO_HEX
00E00DFE  E919                    2528           ROL.B #4,D1
00E00E00  1401                    2529           MOVE.B D1,D2
00E00E02  6100 FF44               2530           BSR CINS
00E00E06  61AC                    2531           BSR TO_HEX
00E00E08  D202                    2532           ADD.B D2,D1
00E00E0A  4E75                    2533           RTS
00E00E0C                          2534  
00E00E0C                          2535  ;
00E00E0C                          2536  ;S214000400227C00400001143C00006100002C128297
00E00E0C                          2537  ;S804000000FB
00E00E0C                          2538  
00E00E0C                          2539  ; READ S-RECORD
00E00E0C                          2540  ; D5 = BYTE CHECK SUM FOR EACH RECORD
00E00E0C                          2541  ; D4 = NUMBER OF BYTE RECEIVED
00E00E0C                          2542  
00E00E0C  47F9 00E0192D           2543  READ_S_REC      LEA.L LOAD.L,A3
00E00E12  6100 FF48               2544                  BSR PSTR
00E00E16  4284                    2545                  CLR.L D4     ; CLEAR NUMBER OF BYTE 
00E00E18  4285                    2546                  CLR.L D5     ; CLEAR CHECK SUM AND ERROR BYTE
00E00E1A                          2547  
00E00E1A  6100 FF2C               2548  READ_S_REC1     BSR CINS
00E00E1E  B03C 0053               2549                  CMP.B #'S',D0
00E00E22  6602                    2550                  BNE.S CHECK_ESC
00E00E24  6008                    2551                  BRA.S GET_TYPE
00E00E26                          2552  
00E00E26                          2553  
00E00E26  B03C 001B               2554  CHECK_ESC       CMP.B #ESC,D0
00E00E2A  66EE                    2555                  BNE.S READ_S_REC1
00E00E2C                          2556  
00E00E2C  4E75                    2557                  RTS
00E00E2E                          2558  
00E00E2E                          2559  
00E00E2E  6100 FF18               2560  GET_TYPE        BSR CINS
00E00E32  B03C 0038               2561                  CMP.B #'8',D0
00E00E36  6600 003A               2562                  BNE CHECK_START
00E00E3A                          2563  
00E00E3A  6100 FF0C               2564  WAIT_CR         BSR CINS
00E00E3E  B03C 000D               2565                  CMP.B #CR,D0
00E00E42  66F6                    2566                  BNE.S WAIT_CR
00E00E44                          2567  
00E00E44  6100 FF24               2568                  BSR NEW_LINE
00E00E48  6100 FF20               2569                  BSR NEW_LINE
00E00E4C  2004                    2570                  MOVE.L D4,D0
00E00E4E  6100 0324               2571                  BSR PRINT_DEC     ; SHOW NUMBER OF BYTE RECEIVED
00E00E52  267C 00E01965           2572                  MOVEA.L #NUMBER,A3
00E00E58  6100 FF02               2573                  BSR PSTR
00E00E5C                          2574  
00E00E5C  4845                    2575                  SWAP.W D5
00E00E5E  4280                    2576                  CLR.L D0
00E00E60  3005                    2577                  MOVE.W D5,D0
00E00E62  6100 0310               2578                  BSR PRINT_DEC
00E00E66  267C 00E01975           2579                  MOVEA.L #ERROR,A3
00E00E6C  6100 FEEE               2580                  BSR PSTR
00E00E70  4E75                    2581                  RTS
00E00E72                          2582  
00E00E72                          2583  
00E00E72  B03C 0032               2584  CHECK_START     CMP.B #'2',D0   ; CHECK S2 RECORD
00E00E76  673C                    2585                  BEQ.S READ_S2
00E00E78                          2586  
00E00E78  B03C 0031               2587                  CMP.B #'1',D0   ; CHECK S1 RECORD
00E00E7C  6716                    2588                  BEQ.S READ_S1
00E00E7E                          2589  
00E00E7E  B03C 0030               2590                  CMP.B #'0',D0   ; CHECK S0 RECORD
00E00E82  6796                    2591                  BEQ.S READ_S_REC1   ; SKIP DATA
00E00E84  6094                    2592                  BRA.S READ_S_REC1   ; SKIP DATA
00E00E86                          2593  
00E00E86                          2594  
00E00E86  4245                    2595  START_FOUND     CLR.W D5          ; CLEAR BYTE CHECK SUM
00E00E88                          2596  
00E00E88  6100 FF6E               2597                  BSR GET_HEXS
00E00E8C  4287                    2598                  CLR.L D7
00E00E8E  1E01                    2599                  MOVE.B D1,D7       ; NUMBER OF BYTE SAVED TO D7
00E00E90                          2600                  ;SUBQ.B #5,D7
00E00E90                          2601                  ;MOVE.L D7,D0
00E00E90                          2602  
00E00E90  DA01                    2603                  ADD.B  D1,D5       ; ADD CHECK SUM
00E00E92  4E75                    2604          RTS
00E00E94                          2605  
00E00E94                          2606  ;S1 (2 BYTE ADDRESS)
00E00E94  61F0                    2607  READ_S1     BSR START_FOUND
00E00E96                          2608  
00E00E96  5907                    2609                SUBQ.B #4,D7
00E00E98  2007                    2610                MOVE.L D7,D0
00E00E9A                          2611  
00E00E9A                          2612  ; GET 16-BIT ADDRESS, SAVE TO A6
00E00E9A                          2613  
00E00E9A  4286                    2614                CLR.L D6
00E00E9C  6100 FF5A               2615                BSR GET_HEXS
00E00EA0  1C01                    2616                MOVE.B D1,D6
00E00EA2  DA01                    2617                ADD.B  D1,D5          ; ADD CHECK SUM
00E00EA4                          2618  
00E00EA4  E19E                    2619                ROL.L #8,D6
00E00EA6  6100 FF50               2620                BSR GET_HEXS
00E00EAA  1C01                    2621                MOVE.B D1,D6
00E00EAC  DA01                    2622                ADD.B D1,D5           ; ADD CHECK SUM
00E00EAE                          2623  
00E00EAE  2C46                    2624                MOVEA.L D6,A6
00E00EB0  6000 0028               2625                BRA READ_DATA           
00E00EB4                          2626  
00E00EB4                          2627  
00E00EB4                          2628  ;S2 (3 BYTE ADDRESS)
00E00EB4  61D0                    2629  READ_S2       BSR START_FOUND                
00E00EB6                          2630  
00E00EB6  5B07                    2631                SUBQ.B #5,D7
00E00EB8  2007                    2632                MOVE.L D7,D0
00E00EBA                          2633  
00E00EBA                          2634  ; GET 24-BIT ADDRESS, SAVE TO A6
00E00EBA                          2635  
00E00EBA  4286                    2636                CLR.L D6
00E00EBC  6100 FF3A               2637                BSR GET_HEXS
00E00EC0  1C01                    2638                MOVE.B D1,D6
00E00EC2  DA01                    2639                ADD.B  D1,D5
00E00EC4                          2640  
00E00EC4  E19E                    2641                ROL.L #8,D6
00E00EC6  6100 FF30               2642                BSR GET_HEXS
00E00ECA  1C01                    2643                MOVE.B D1,D6
00E00ECC  DA01                    2644                ADD.B D1,D5
00E00ECE                          2645  
00E00ECE  E19E                    2646                ROL.L #8,D6
00E00ED0                          2647  
00E00ED0  6100 FF26               2648                BSR GET_HEXS
00E00ED4  1C01                    2649                MOVE.B D1,D6
00E00ED6  DA01                    2650                ADD.B D1,D5
00E00ED8                          2651  
00E00ED8  2C46                    2652                MOVEA.L D6,A6
00E00EDA                          2653                           
00E00EDA  6100 FF1C               2654  READ_DATA     BSR GET_HEXS
00E00EDE  DA01                    2655                ADD.B  D1,D5      ; ADD CHECK SUM
00E00EE0  1CC1                    2656                MOVE.B D1,(A6)+
00E00EE2                          2657  
00E00EE2  4601                    2658                not.b d1          ; complement before sending
00E00EE4                          2659  
00E00EE4                          2660                ;MOVE.B D1,DOUT.L  ; INDICATOR WHILE LOADING
00E00EE4                          2661  
00E00EE4  5284                    2662                ADDQ.L #1,D4      ; BUMP NUMBER OF BYTE RECEIVED
00E00EE6  51CF FFF2               2663                DBF D7,READ_DATA
00E00EEA                          2664  
00E00EEA  4605                    2665                NOT.B D5          ; ONE'S COMPLEMENT OF BYTE CHECK SUM         
00E00EEC                          2666  
00E00EEC  6100 FF0A               2667                BSR GET_HEXS      ; GET BYTE CHECK SUM
00E00EF0                          2668  
00E00EF0  BA01                    2669                CMP.B D1,D5       ; COMPARE CHECK SUM
00E00EF2  670C                    2670                BEQ.S NO_ERROR
00E00EF4                          2671  
00E00EF4  0685 00010000           2672                ADD.L #$10000,D5  ; ADD 1 TO UPPER WORD
00E00EFA  103C 0058               2673                MOVE.B #'X',D0    ; IF NOT EQUAL SEND 'X' FOR ERROR
00E00EFE  6004                    2674                BRA.S CHECKSUM_ERROR
00E00F00                          2675  
00E00F00  103C 005F               2676  NO_ERROR      MOVE.B #'_',D0      ; '_' NO ERROR RECORD
00E00F04  6100 FE30               2677  CHECKSUM_ERROR BSR COUT
00E00F08                          2678  
00E00F08  6000 FF10               2679                BRA READ_S_REC1
00E00F0C                          2680  
00E00F0C                          2681  
00E00F0C  6100 FE48               2682  LOOP_BACK     BSR CIN
00E00F10  B03C 000D               2683                CMP.B #13,D0
00E00F14  66F6                    2684                BNE LOOP_BACK
00E00F16  4E75                    2685                RTS
00E00F18                          2686  
00E00F18                          2687  
00E00F18                          2688  
00E00F18                          2689  ; PRINT HEX 
00E00F18                          2690  ; OUT1X = PRINT ONE HEX
00E00F18                          2691  ; OUT2X = PRINT TWO
00E00F18                          2692  ; OUT4X = PRINT FOUR
00E00F18                          2693  ; OUT8X = PRINT EIGHT
00E00F18                          2694  ; ENTRY: D0
00E00F18                          2695  
00E00F18  1F00                    2696  OUT1X        MOVE.B D0,-(SP)    ;SAVE D0
00E00F1A  C03C 000F               2697               AND.B #$F,D0
00E00F1E  0600 0030               2698               ADD.B #'0',D0
00E00F22  B03C 0039               2699               CMP.B #'9',D0
00E00F26  6302                    2700               BLS.S   OUT1X1
00E00F28  5E00                    2701               ADD.B #7,D0
00E00F2A  6100 FE0A               2702  OUT1X1       BSR COUT
00E00F2E  101F                    2703               MOVE.B (SP)+,D0    ;RESTORE D0
00E00F30  4E75                    2704               RTS
00E00F32                          2705  
00E00F32  E818                    2706  OUT2X        ROR.B #4,D0
00E00F34  61E2                    2707               BSR.S OUT1X
00E00F36  E918                    2708               ROL.B #4,D0
00E00F38  60DE                    2709               BRA OUT1X
00E00F3A                          2710  
00E00F3A  E058                    2711  OUT4X        ROR.W #8,D0
00E00F3C  61F4                    2712               BSR.S OUT2X
00E00F3E  E158                    2713               ROL.W #8,D0
00E00F40  60F0                    2714               BRA.S OUT2X
00E00F42                          2715  
00E00F42  4840                    2716  OUT6X        SWAP.W D0        ; OUT 24-BIT HEX NUMBER
00E00F44  61EC                    2717               BSR.S OUT2X
00E00F46  4840                    2718               SWAP.W D0
00E00F48  60F0                    2719               BRA.S OUT4X
00E00F4A                          2720  
00E00F4A  4840                    2721  OUT8X        SWAP.W D0        ; OUT 32-BIT HEX NUMBER
00E00F4C  61EC                    2722               BSR.S  OUT4X
00E00F4E  4840                    2723               SWAP.W D0
00E00F50  60E8                    2724               BRA.S  OUT4X
00E00F52                          2725  
00E00F52                          2726  
00E00F52                          2727  ; PRINT D0 CONTENT
00E00F52                          2728  
00E00F52  61F6                    2729  PRINT_D0  BSR.S OUT8X
00E00F54  4E75                    2730            RTS
00E00F56                          2731  
00E00F56                          2732  ; HEX DUMP
00E00F56                          2733  ; DUMP MEMORY CONTENT
00E00F56                          2734  ; A3: START ADDRESS
00E00F56                          2735  
00E00F56  47F9 00E018E4           2736  HEX_DUMP    LEA.L HEX.L,A3
00E00F5C  6100 FDFE               2737              BSR PSTR
00E00F60                          2738  
00E00F60  2C79 000000C0           2739              MOVEA.L RAMBASE.L,A6
00E00F66  266E 00A6               2740              MOVEA.L POINTER_NOW(A6),A3
00E00F6A  3C3C 000F               2741              MOVE.W #15,D6
00E00F6E  6100 FDFA               2742              BSR NEW_LINE
00E00F72                          2743  
00E00F72  6100 FDF6               2744  HEX_DUMP2   BSR NEW_LINE
00E00F76  200B                    2745              MOVE.L A3,D0
00E00F78  61C8                    2746              BSR OUT6X
00E00F7A  6100 FE00               2747              BSR SPACE
00E00F7E  6100 FDFC               2748              BSR SPACE
00E00F82                          2749  
00E00F82  3E3C 000F               2750              MOVE.W #15,D7
00E00F86                          2751  
00E00F86  101B                    2752  HEX_DUMP1   MOVE.B (A3)+,D0
00E00F88  61A8                    2753              BSR OUT2X
00E00F8A  6100 FDF0               2754              BSR SPACE
00E00F8E                          2755  
00E00F8E  51CF FFF6               2756              DBF D7,HEX_DUMP1
00E00F92                          2757  
00E00F92  6100 FDE8               2758              BSR SPACE
00E00F96  97FC 00000010           2759              SUBA.L #16,A3       ; GET BACK TO BEGINING 
00E00F9C  3E3C 000F               2760              MOVE.W #15,D7
00E00FA0                          2761  
00E00FA0  101B                    2762  HEX_DUMP6   MOVE.B (A3)+,D0
00E00FA2                          2763  
00E00FA2  B03C 0020               2764              CMP.B #$20,D0
00E00FA6  6C06                    2765              BGE.S HEX_DUMP3
00E00FA8                          2766  
00E00FA8  103C 002E               2767  HEX_DUMP4   MOVE.B #'.',D0
00E00FAC  6006                    2768              BRA.S  HEX_DUMP5
00E00FAE                          2769  
00E00FAE  B03C 007F               2770  HEX_DUMP3   CMP.B #$7F,D0
00E00FB2  6EF4                    2771              BGT.S HEX_DUMP4
00E00FB4                          2772  
00E00FB4  6100 FD80               2773  HEX_DUMP5   BSR COUT
00E00FB8  51CF FFE6               2774              DBF D7,HEX_DUMP6
00E00FBC                          2775  
00E00FBC                          2776  
00E00FBC  51CE FFB4               2777              DBF D6,HEX_DUMP2
00E00FC0                          2778  
00E00FC0  2D4B 00A6               2779              MOVE.L A3,POINTER_NOW(A6)   ; UPDATE POINTER_NOW
00E00FC4  6100 FDA4               2780              BSR NEW_LINE
00E00FC8  4E75                    2781              RTS
00E00FCA                          2782  
00E00FCA                          2783  
00E00FCA                          2784  ; NEW POINTER
00E00FCA                          2785  ; CHANGE 24-BIT ADDRESS-> POINTER_NOW
00E00FCA                          2786  
00E00FCA  47F9 00E018AB           2787  NEW_POINTER   LEA.L NEW.L,A3
00E00FD0  6100 FD8A               2788                BSR PSTR
00E00FD4                          2789  
00E00FD4  6100 FDBA               2790                BSR SEND_PROMPT
00E00FD8                          2791  
00E00FD8  2C79 000000C0           2792                MOVEA.L RAMBASE.L,A6
00E00FDE  4286                    2793                CLR.L D6
00E00FE0  6100 FDE8               2794                BSR GET_HEX
00E00FE4  1C01                    2795                MOVE.B D1,D6
00E00FE6  E19E                    2796                ROL.L #8,D6
00E00FE8  6100 FDE0               2797                BSR GET_HEX
00E00FEC  1C01                    2798                MOVE.B D1,D6
00E00FEE  E19E                    2799                ROL.L #8,D6
00E00FF0  6100 FDD8               2800                BSR GET_HEX
00E00FF4  1C01                    2801                MOVE.B D1,D6
00E00FF6                          2802  
00E00FF6  0886 0000               2803                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00E00FFA                          2804  
00E00FFA  2D46 00A6               2805                MOVE.L D6,POINTER_NOW(A6)
00E00FFE  4E75                    2806                RTS
00E01000                          2807  
00E01000  6100 FD68               2808  PRINT_DEBUG   BSR NEW_LINE
00E01004  202E 0020               2809                MOVE.L DEBUG(A6),D0
00E01008  6100 FF40               2810                BSR OUT8X
00E0100C  4E75                    2811                RTS
00E0100E                          2812  
00E0100E  47F9 00E018BD           2813  QUICK_HOME    LEA.L QUICK.L,A3
00E01014  6100 FD46               2814                BSR PSTR
00E01018  2C79 000000C0           2815                MOVEA.L RAMBASE.L,A6
00E0101E  2D7C 00000000 00A6      2816                MOVE.L #RAM,POINTER_NOW(A6)
00E01026  4E75                    2817                RTS  
00E01028                          2818  
00E01028                          2819  ; TEST RAM
00E01028                          2820  
00E01028                          2821  ; GET 32BIT DATA
00E01028                          2822  ; EXIT: D6 CONTAINS 32-BIT ADDRESS
00E01028                          2823  
00E01028  4286                    2824  GET_32BIT     CLR.L D6
00E0102A  6100 FD9E               2825                BSR GET_HEX
00E0102E  1C01                    2826                MOVE.B D1,D6
00E01030  E19E                    2827                ROL.L #8,D6
00E01032  6100 FD96               2828                BSR GET_HEX
00E01036  1C01                    2829                MOVE.B D1,D6
00E01038  E19E                    2830                ROL.L #8,D6
00E0103A  6100 FD8E               2831                BSR GET_HEX
00E0103E  1C01                    2832                MOVE.B D1,D6
00E01040  E19E                    2833                ROL.L #8,D6
00E01042  6100 FD86               2834                BSR GET_HEX
00E01046  1C01                    2835                MOVE.B D1,D6
00E01048  4E75                    2836                RTS
00E0104A                          2837  
00E0104A                          2838  
00E0104A                          2839  ; GET_ADDRESS
00E0104A                          2840  ; EXIT: D6 CONTAINS 24-BIT ADDRESS
00E0104A                          2841  
00E0104A  4286                    2842  GET_ADDRESS   CLR.L D6
00E0104C  6100 FD7C               2843                BSR GET_HEX
00E01050                          2844  
00E01050  1C01                    2845  GET_ADDRESS1  MOVE.B D1,D6
00E01052  E19E                    2846                ROL.L #8,D6
00E01054  6100 FD74               2847                BSR GET_HEX
00E01058  1C01                    2848                MOVE.B D1,D6
00E0105A  E19E                    2849                ROL.L #8,D6
00E0105C  6100 FD6C               2850                BSR GET_HEX
00E01060  1C01                    2851                MOVE.B D1,D6
00E01062  4E75                    2852                RTS
00E01064                          2853  
00E01064  4E75                    2854  TEST_RAM      RTS
00E01066                          2855  
00E01066                          2856  ; FILL MEMORY WITH 0xFF
00E01066                          2857  
00E01066  47F9 00E0182B           2858  FILL_MEMORY   LEA.L FILL.L,A3
00E0106C  6100 FCEE               2859                BSR PSTR
00E01070                          2860  
00E01070  47F9 00E01842           2861                LEA.L START.L,A3
00E01076  6100 FCE4               2862                BSR PSTR
00E0107A  61CE                    2863                BSR GET_ADDRESS
00E0107C  2846                    2864                MOVEA.L D6,A4             ; A4 START ADDRESS
00E0107E                          2865  
00E0107E  47F9 00E01854           2866                LEA.L STOP.L,A3
00E01084  6100 FCD6               2867                BSR PSTR
00E01088  61C0                    2868                BSR GET_ADDRESS
00E0108A  2A46                    2869                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00E0108C                          2870  
00E0108C  38FC FFFF               2871  FILL_MEMORY1  MOVE.W #$FFFF,(A4)+
00E01090  BBCC                    2872                CMPA.L A4,A5
00E01092  6CF8                    2873                BGE.S FILL_MEMORY1
00E01094                          2874  
00E01094  267C 00E01865           2875                MOVEA.L #DONE,A3
00E0109A  6100 FCC0               2876                BSR PSTR
00E0109E  4E75                    2877                RTS
00E010A0                          2878  
00E010A0                          2879  ; CLEAR MEMORY WITH 0x00
00E010A0                          2880  
00E010A0  47F9 00E01813           2881  CLEAR_MEMORY  LEA.L CLEAR.L,A3
00E010A6  6100 FCB4               2882                BSR PSTR
00E010AA                          2883  
00E010AA  47F9 00E01842           2884                LEA.L START.L,A3
00E010B0  6100 FCAA               2885                BSR PSTR
00E010B4  6194                    2886                BSR GET_ADDRESS
00E010B6  2846                    2887                MOVEA.L D6,A4             ; A4 START ADDRESS
00E010B8                          2888  
00E010B8  47F9 00E01854           2889                LEA.L STOP.L,A3
00E010BE  6100 FC9C               2890                BSR PSTR
00E010C2  6186                    2891                BSR GET_ADDRESS
00E010C4  2A46                    2892                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00E010C6                          2893  
00E010C6  38FC 0000               2894  CLEAR_MEMORY1 MOVE.W #$0000,(A4)+
00E010CA  BBCC                    2895                CMPA.L A4,A5
00E010CC  6CF8                    2896                BGE.S CLEAR_MEMORY1
00E010CE                          2897  
00E010CE  267C 00E01865           2898                MOVEA.L #DONE,A3
00E010D4  6100 FC86               2899                BSR PSTR
00E010D8  4E75                    2900                RTS
00E010DA                          2901  
00E010DA                          2902  ; EDIT MEMORY
00E010DA                          2903  ; PRESS SPACE BAR TO QUIT
00E010DA                          2904  
00E010DA  47F9 00E0186F           2905  EDIT_MEMORY   LEA.L EDIT1.L,A3
00E010E0  6100 FC7A               2906                BSR PSTR
00E010E4                          2907  
00E010E4  47F9 00E01899           2908                LEA.L EDIT.L,A3
00E010EA  6100 FC70               2909                BSR PSTR
00E010EE  6100 FF5A               2910                BSR GET_ADDRESS
00E010F2                          2911  
00E010F2  0886 0000               2912                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00E010F6  2646                    2913                MOVEA.L D6,A3       ; EDIT ADDRESS
00E010F8                          2914  
00E010F8                          2915               ; MOVEA.L POINTER_NOW.L,A3
00E010F8                          2916  
00E010F8  6100 FC70               2917  EDIT_MEMORY2  BSR NEW_LINE
00E010FC  200B                    2918                MOVE.L A3,D0
00E010FE  6100 FE42               2919                BSR OUT6X
00E01102  6100 FC78               2920                BSR SPACE
00E01106  6100 FC74               2921                BSR SPACE
00E0110A                          2922  
00E0110A  103C 005B               2923                MOVE.B #'[',D0
00E0110E  6100 FC26               2924                BSR COUT
00E01112  3013                    2925                MOVE.W (A3),D0
00E01114  6100 FE24               2926                BSR OUT4X
00E01118  103C 005D               2927                MOVE.B #']',D0
00E0111C  6100 FC18               2928                BSR COUT
00E01120                          2929  
00E01120  6100 FC5A               2930                BSR SPACE
00E01124                          2931  
00E01124  4241                    2932                CLR.W D1
00E01126  6100 FCA2               2933                BSR GET_HEX
00E0112A                          2934  
00E0112A  08AE 0000 0024          2935                BCLR.B #BIT_ESC,FLAG(A6)  ; TEST BIT_ESC BIT
00E01130  6630                    2936                BNE.S EDIT_MEMORY3  ; IF BIT = 1 THEN EXIT
00E01132                          2937  
00E01132  08AE 0001 0024          2938                BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00E01138  6624                    2939                BNE.S EDIT_MEMORY4  ; SKIP WRITE TO RAM
00E0113A                          2940  
00E0113A  E159                    2941                ROL.W #8,D1
00E0113C  6100 FC8C               2942                BSR GET_HEX
00E01140                          2943  
00E01140  36BC 0000               2944                MOVE.W #0,(A3)
00E01144                          2945  
00E01144  3013                    2946                MOVE.W (A3),D0   ; TEST RAM OR ROM BY WRITING 0 AND READ BACK
00E01146  B07C 0000               2947                CMP.W #0,D0
00E0114A  6604                    2948                BNE.S EDIT_MEMORY5
00E0114C                          2949  
00E0114C  3681                    2950                MOVE.W D1,(A3)     ; OK WRITE TO RAM
00E0114E  600E                    2951                BRA.S EDIT_MEMORY4 
00E01150                          2952  
00E01150  2F0B                    2953  EDIT_MEMORY5  MOVE.L A3,-(SP)
00E01152  47F9 00E018A5           2954                LEA.L ROM.L,A3
00E01158  6100 FC02               2955                BSR PSTR
00E0115C  265F                    2956                MOVEA.L (SP)+,A3
00E0115E                          2957  
00E0115E  548B                    2958  EDIT_MEMORY4  ADDQ.L #2,A3     ; BUMP A3
00E01160                          2959  
00E01160  6096                    2960                BRA.S EDIT_MEMORY2
00E01162                          2961  
00E01162  6100 FC06               2962  EDIT_MEMORY3  BSR NEW_LINE
00E01166  4E75                    2963                RTS
00E01168                          2964  
00E01168                          2965  
00E01168                          2966  ; HELP LIST MONITOR COMMANDS
00E01168                          2967  
00E01168  47F9 00E01B44           2968  HELP          LEA.L HELP_LIST.L,A3
00E0116E  6100 FBEC               2969                BSR PSTR
00E01172  4E75                    2970                RTS
00E01174                          2971  
00E01174                          2972  ;----------------------------------------------------------------------
00E01174                          2973  ; PRINT_DEC
00E01174                          2974  ; D0 32-BIT BINARY NUMBER
00E01174                          2975  
00E01174  2F00                    2976  PRINT_DEC MOVE.L D0,-(SP)  ; SAVE D0
00E01176  2C79 000000C0           2977            MOVEA.L RAMBASE.L,A6
00E0117C  DDFC 00000026           2978            ADDA.L #BUFFER,A6
00E01182  6100 0016               2979            BSR HEX2DEC
00E01186  2679 000000C0           2980            MOVEA.L RAMBASE.L,A3
00E0118C  D7FC 00000026           2981            ADDA.L #BUFFER,A3
00E01192  6100 FBC8               2982            BSR PSTR
00E01196  201F                    2983            MOVE.L (SP)+,D0 ; RESTORE D0
00E01198  4E75                    2984            RTS
00E0119A                          2985  
00E0119A                          2986  ;**************************************************************************
00E0119A                          2987  ; The portion of code within STAR lines are modified from Tutor source code
00E0119A                          2988  ;
00E0119A                          2989  ;
00E0119A                          2990  ; HEX2DEC   HEX2DEC convert hex to decimal                   
00E0119A                          2991  ; CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
00E0119A                          2992  
00E0119A  48E7 7F00               2993  HEX2DEC  MOVEM.L D1-D7,-(SP)   ;SAVE REGISTERS
00E0119E  2E00                    2994           MOVE.L  D0,D7               ;SAVE IT HERE
00E011A0  6A08                    2995           BPL.S   HX2DC
00E011A2  4487                    2996           NEG.L   D7             ;CHANGE TO POSITIVE
00E011A4  6B4E                    2997           BMI.S   HX2DC57        ;SPECIAL CASE (-0)
00E011A6  1CFC 002D               2998           MOVE.B  #'-',(A6)+     ;PUT IN NEG SIGN
00E011AA  4244                    2999  HX2DC    CLR.W   D4             ;FOR ZERO SURPRESS
00E011AC  7C0A                    3000           MOVEQ.L   #10,D6         ;COUNTER
00E011AE  7401                    3001  HX2DC0   MOVEQ.L   #1,D2          ;VALUE TO SUB
00E011B0  2206                    3002           MOVE.L  D6,D1          ;COUNTER
00E011B2  5381                    3003           SUBQ.L  #1,D1          ;ADJUST - FORM POWER OF TEN
00E011B4  671A                    3004           BEQ.S   HX2DC2         ;IF POWER IS ZERO
00E011B6  3602                    3005  HX2DC1   MOVE.W  D2,D3          ;D3=LOWER WORD
00E011B8  C6FC 000A               3006           MULU.W    #10,D3
00E011BC  4842                    3007           SWAP.W    D2             ;D2=UPPER WORD
00E011BE  C4FC 000A               3008           MULU.W    #10,D2
00E011C2  4843                    3009           SWAP.W    D3             ;ADD UPPER TO UPPER
00E011C4  D443                    3010           ADD.W   D3,D2
00E011C6  4842                    3011           SWAP.W    D2             ;PUT UPPER IN UPPER
00E011C8  4843                    3012           SWAP.W    D3             ;PUT LOWER IN LOWER
00E011CA  3403                    3013           MOVE.W  D3,D2          ;D2=UPPER & LOWER
00E011CC  5381                    3014           SUBQ.L  #1,D1
00E011CE  66E6                    3015           BNE     HX2DC1
00E011D0  4280                    3016  HX2DC2   CLR.L   D0             ;HOLDS SUB AMT
00E011D2  BE82                    3017  HX2DC22  CMP.L   D2,D7
00E011D4  6D06                    3018           BLT.S   HX2DC3         ;IF NO MORE SUB POSSIBLE
00E011D6  5280                    3019           ADDQ.L  #1,D0          ;BUMP SUBS
00E011D8  9E82                    3020           SUB.L   D2,D7          ;COUNT DOWN BY POWERS OF TEN
00E011DA  60F6                    3021           BRA.S   HX2DC22        ;DO MORE
00E011DC  4A00                    3022  HX2DC3   TST.B   D0             ;ANY VALUE?
00E011DE  6604                    3023           BNE.S   HX2DC4
00E011E0  4A44                    3024           TST.W   D4             ;ZERO SURPRESS
00E011E2  6708                    3025           BEQ.S   HX2DC5
00E011E4  0600 0030               3026  HX2DC4   ADDI.B  #$30,D0        ;BINARY TO ASCII
00E011E8  1CC0                    3027           MOVE.B  D0,(A6)+       ;PUT IN BUFFER
00E011EA  1800                    3028           MOVE.B  D0,D4          ;MARK AS NON ZERO SURPRESS
00E011EC  5386                    3029  HX2DC5   SUBQ.L  #1,D6          ;NEXT POWER
00E011EE  66BE                    3030           BNE     HX2DC0
00E011F0  4A44                    3031           TST.W   D4             ;SEE IF ANYTHING PRINTED
00E011F2  6604                    3032           BNE.S   HX2DC6
00E011F4  1CFC 0030               3033  HX2DC57  MOVE.B  #'0',(A6)+     ;PRINT AT LEST A ZERO
00E011F8  1CBC 0000               3034  HX2DC6   MOVE.B  #0,(A6)        ; PUT TERMINATOR
00E011FC  4CDF 00FE               3035           MOVEM.L (SP)+,D1-D7   ;RESTORE REGISTERS
00E01200  4E75                    3036           RTS                    ;END OF ROUTINE
00E01202                          3037  
00E01202                          3038  *
00E01202                          3039  *  PRINT HEX ROUTINES
00E01202                          3040  *
00E01202                          3041  *
00E01202                          3042  * PRINT 8 HEX CHARACTERS
00E01202                          3043  *
00E01202                          3044  *  D0,D1,D2 DESTROYED
00E01202                          3045  *
00E01202  4840                    3046  PNT8HX   SWAP    D0             FLIP REG HALVES
00E01204  610A                    3047           BSR.S   PNT4HX         DO TOP WORD
00E01206  4840                    3048           SWAP    D0             NOW DO LOWER WORD
00E01208  6006                    3049           BRA.S   PNT4HX
00E0120A                          3050  * PRINT 6 HEX CHARACTERS
00E0120A  4840                    3051  PNT6HX   SWAP    D0             FLIP REGISTER HALVES
00E0120C  610A                    3052           BSR.S   PNT2HX
00E0120E  4840                    3053           SWAP    D0             FLIP BACK REG HALVES
00E01210                          3054  * PRINT 4 HEX CHARACTERS IN D0.W
00E01210  3200                    3055  PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
00E01212  E058                    3056           ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
00E01214  6102                    3057           BSR.S   PNT2HX         PRINT IT
00E01216  3001                    3058           MOVE.W  D1,D0          PULL IT BACK
00E01218                          3059  * PRINT 2 HEX CHARACTERS IN D0.B
00E01218  3400                    3060  PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
00E0121A  E850                    3061           ROXR.W  #4,D0          FORM UPPER NIBBLE
00E0121C  6102                    3062           BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
00E0121E  3002                    3063           MOVE.W  D2,D0          GET BACK FROM TEMP
00E01220                          3064  * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
00E01220                          3065  *
00E01220  0200 000F               3066  PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
00E01224  0000 0030               3067           ORI.B   #$30,D0        CONVERT TO ASCII
00E01228  0C00 0039               3068           CMPI.B  #$39,D0        SEE IF IT IS>9
00E0122C  6F02                    3069           BLE.S   SAVHEX
00E0122E  5E40                    3070           ADD     #7,D0          ADD TO MAKE 10=>A
00E01230  1CC0                    3071  SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
00E01232  4E75                    3072           RTS
00E01234                          3073  
00E01234                          3074  * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
00E01234                          3075  *        ENTER     D0 = VALUE
00E01234                          3076  *                  A6 = STORE POINTER
00E01234                          3077  *
00E01234  48E7 4780               3078  FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
00E01238  2079 000000C0           3079           MOVEA.L RAMBASE.L,A0   ;LEA     OFFSET,A0
00E0123E  7EFF                    3080           MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
00E01240  4286                    3081           CLR.L   D6             D6 = OFFSET POSITION
00E01242                          3082  
00E01242  2200                    3083  FREL10   MOVE.L  D0,D1
00E01244  4A90                    3084           TST.L   (A0)
00E01246  670C                    3085           BEQ.S   FREL15         ZERO OFFSET
00E01248  9290                    3086           SUB.L   (A0),D1        D1 = DIFF.
00E0124A  6B08                    3087           BMI.S   FREL15         NO FIT
00E0124C                          3088  
00E0124C  B287                    3089           CMP.L   D7,D1
00E0124E  6404                    3090           BCC.S   FREL15         OLD FIT BETTER
00E01250                          3091  
00E01250  2E01                    3092           MOVE.L  D1,D7          D7 = NEW BEST FIT
00E01252  2A06                    3093           MOVE.L  D6,D5          D5 = POSITION
00E01254                          3094  
00E01254  5888                    3095  FREL15   ADDQ.L  #4,A0
00E01256  5286                    3096           ADDQ.L  #1,D6
00E01258  0C46 0008               3097           CMPI.W  #8,D6
00E0125C  66E4                    3098           BNE     FREL10         MORE OFFSETS TO CHECK
00E0125E                          3099  
00E0125E  4A87                    3100           TST.L   D7
00E01260  6B1E                    3101           BMI.S   FREL25         NO FIT
00E01262  4A46                    3102           TST     D6
00E01264  6608                    3103           BNE.S   FREL20
00E01266  4AB9 000000C0           3104           TST.L   RAMBASE.L      ;TST.L    OFFSET
00E0126C  6712                    3105           BEQ.S   FREL25         R0 = 000000; NO FIT
00E0126E                          3106  
00E0126E  2007                    3107  FREL20   MOVE.L  D7,D0
00E01270  6198                    3108           BSR     PNT6HX         FORMAT OFFSET
00E01272  1CFC 002B               3109           MOVE.B  #'+',(A6)+     +
00E01276  1CFC 0052               3110           MOVE.B  #'R',(A6)+     R
00E0127A  0605 0030               3111           ADDI.B  #'0',D5        MAKE ASCII
00E0127E  600A                    3112           BRA.S   FREL30
00E01280                          3113  
00E01280  6188                    3114  FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
00E01282  1A3C 0020               3115           MOVE.B  #BLANK,D5
00E01286  1CC5                    3116           MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
00E01288  1CC5                    3117           MOVE.B  D5,(A6)+
00E0128A  1CC5                    3118  FREL30   MOVE.B  D5,(A6)+
00E0128C                          3119  
00E0128C  4CDF 01E2               3120           MOVEM.L (A7)+,D1/D5-D7/A0
00E01290  4E75                    3121           RTS
00E01292                          3122  
00E01292                          3123  ;******************************************************************************
00E01292                          3124  
00E01292                          3125  
00E01292                          3126  ; DISPLAY USER REGISTERS D0-D7 AND A0-A7
00E01292                          3127  ;
00E01292                          3128  
00E01292  47F9 00E019AE           3129  DISPLAY_REG  LEA.L REGISTER_DISP.L,A3
00E01298  6100 FAC2               3130               BSR PSTR
00E0129C                          3131  
00E0129C  2C79 000000C0           3132  DISPLAY_REG1 MOVEA.L RAMBASE.L,A6
00E012A2  6100 FAC6               3133               BSR NEW_LINE
00E012A6  6100 FAC2               3134               BSR NEW_LINE
00E012AA  267C 00E01B2D           3135               MOVEA.L #PC_REG,A3
00E012B0  6100 FAAA               3136               BSR PSTR
00E012B4  202E 00F0               3137               MOVE.L USER_PC(A6),D0
00E012B8  6100 FC88               3138               BSR OUT6X
00E012BC                          3139  
00E012BC  6100 FABE               3140               BSR SPACE
00E012C0                          3141  
00E012C0  267C 00E01B31           3142               MOVEA.L #SR_REG,A3
00E012C6  6100 FA94               3143               BSR PSTR
00E012CA  302E 00EA               3144               MOVE.W USER_SR(A6),D0
00E012CE  6100 FC6A               3145               BSR OUT4X
00E012D2                          3146  
00E012D2                          3147  ; NOW PRINT FLAG LOGIC IN BINARY
00E012D2  1800                    3148               MOVE.B D0,D4       ; SAVE TO D4
00E012D4                          3149  
00E012D4  E70C                    3150               LSL.B #3,D4        ; BIT POSITION BEFORE SHIFTING OUT
00E012D6                          3151  
00E012D6  6100 FAA4               3152               BSR SPACE
00E012DA  267C 00E01B41           3153               MOVEA.L #X_FLAG,A3
00E012E0  6100 FA7A               3154               BSR PSTR
00E012E4  E30C                    3155               LSL.B #1,D4
00E012E6  6100 00DA               3156               BSR PRINT_BIT
00E012EA                          3157  
00E012EA  6100 FA90               3158               BSR SPACE
00E012EE  267C 00E01B3E           3159               MOVEA.L #N_FLAG,A3
00E012F4  6100 FA66               3160               BSR PSTR
00E012F8  E30C                    3161               LSL.B #1,D4
00E012FA  6100 00C6               3162               BSR PRINT_BIT
00E012FE                          3163  
00E012FE  6100 FA7C               3164               BSR SPACE
00E01302  267C 00E01B3B           3165               MOVEA.L #Z_FLAG,A3
00E01308  6100 FA52               3166               BSR PSTR
00E0130C  E30C                    3167               LSL.B #1,D4
00E0130E  6100 00B2               3168               BSR PRINT_BIT
00E01312                          3169  
00E01312  6100 FA68               3170               BSR SPACE
00E01316  267C 00E01B38           3171               MOVEA.L #V_FLAG,A3
00E0131C  6100 FA3E               3172               BSR PSTR
00E01320  E30C                    3173               LSL.B #1,D4
00E01322  6100 009E               3174               BSR PRINT_BIT
00E01326                          3175  
00E01326  6100 FA54               3176               BSR SPACE
00E0132A  267C 00E01B35           3177               MOVEA.L #CARRY_FLAG,A3
00E01330  6100 FA2A               3178               BSR PSTR
00E01334  E30C                    3179               LSL.B #1,D4
00E01336  6100 008A               3180               BSR PRINT_BIT
00E0133A                          3181  
00E0133A                          3182  
00E0133A  6100 FA2E               3183               BSR NEW_LINE
00E0133E  143C 0000               3184               MOVE.B #0,D2
00E01342                          3185  
00E01342  2C79 000000C0           3186               MOVEA.L RAMBASE.L,A6
00E01348                          3187  
00E01348  47EE 00AA               3188               LEA.L USER_DATA(A6),A3
00E0134C                          3189  
00E0134C  103C 0044               3190  REG1         MOVE.B #'D',D0
00E01350  6100 F9E4               3191               BSR COUT
00E01354  1002                    3192               MOVE.B D2,D0
00E01356  6100 FBC0               3193               BSR OUT1X
00E0135A  103C 003D               3194               MOVE.B #'=',D0
00E0135E  6100 F9D6               3195               BSR COUT
00E01362                          3196  
00E01362  201B                    3197               MOVE.L (A3)+,D0
00E01364  6100 FBE4               3198               BSR OUT8X
00E01368  5202                    3199               ADDQ.B #1,D2
00E0136A  0C02 0008               3200               CMPI.B #8,D2
00E0136E  6710                    3201               BEQ.S REG4
00E01370  6100 FA0A               3202               BSR SPACE
00E01374                          3203  
00E01374  0C02 0004               3204               CMPI.B #4,D2
00E01378  66D2                    3205               BNE.S REG1
00E0137A  6100 F9EE               3206               BSR NEW_LINE
00E0137E  60CC                    3207               BRA.S REG1
00E01380                          3208  
00E01380  6100 F9E8               3209  REG4         BSR NEW_LINE
00E01384  143C 0000               3210               MOVE.B #0,D2
00E01388                          3211  
00E01388  103C 0041               3212  REG3         MOVE.B #'A',D0
00E0138C  6100 F9A8               3213               BSR COUT
00E01390  1002                    3214               MOVE.B D2,D0
00E01392  6100 FB84               3215               BSR OUT1X
00E01396  103C 003D               3216               MOVE.B #'=',D0
00E0139A  6100 F99A               3217               BSR COUT
00E0139E                          3218  
00E0139E  201B                    3219               MOVE.L (A3)+,D0
00E013A0  6100 FBA8               3220               BSR OUT8X
00E013A4  5202                    3221               ADDQ.B #1,D2
00E013A6  0C02 0008               3222               CMPI.B #8,D2
00E013AA  6710                    3223               BEQ.S REG2
00E013AC  6100 F9CE               3224               BSR SPACE
00E013B0                          3225  
00E013B0  0C02 0004               3226               CMPI.B #4,D2
00E013B4  66D2                    3227               BNE.S REG3
00E013B6  6100 F9B2               3228               BSR NEW_LINE
00E013BA  60CC                    3229               BRA.S REG3
00E013BC                          3230  
00E013BC  6100 F9AC               3231  REG2         BSR NEW_LINE
00E013C0  4E75                    3232               RTS
00E013C2                          3233  
00E013C2                          3234  
00E013C2                          3235  
00E013C2                          3236  
00E013C2                          3237  ; SEND '0' OR '1' TO SCREEN
00E013C2                          3238  
00E013C2  650A                    3239  PRINT_BIT   BCS.S WRITE_1
00E013C4  103C 0030               3240              MOVE.B #'0',D0
00E013C8  6100 F96C               3241              BSR COUT
00E013CC  4E75                    3242              RTS
00E013CE                          3243  
00E013CE  103C 0031               3244  WRITE_1     MOVE.B #'1',D0
00E013D2  6100 F962               3245              BSR COUT
00E013D6  4E75                    3246              RTS
00E013D8                          3247  
00E013D8                          3248  ; JUMP TO USER PROGRAM
00E013D8                          3249  ; 
00E013D8                          3250  
00E013D8  47F9 00E0198F           3251  JUMP       LEA.L JUMP_TO.L,A3
00E013DE  6100 F97C               3252             BSR PSTR
00E013E2                          3253  
00E013E2  2C79 000000C0           3254             MOVEA.L RAMBASE.L,A6
00E013E8  202E 00F0               3255             MOVE.L USER_PC(A6),D0
00E013EC  6100 FB54               3256             BSR OUT6X
00E013F0  103C 003E               3257             MOVE.B #'>',D0
00E013F4                          3258  
00E013F4  6100 F940               3259             BSR COUT
00E013F8                          3260  
00E013F8  6100 F9D0               3261             BSR GET_HEX
00E013FC                          3262  
00E013FC  08AE 0000 0024          3263             BCLR.B #BIT_ESC,FLAG(A6) ; TEST BIT_ESC BIT
00E01402  6614                    3264             BNE.S ABORT             ; IF BIT = 1 THEN EXIT
00E01404                          3265  
00E01404  08AE 0001 0024          3266             BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00E0140A  660E                    3267             BNE.S JUMP1         ; RUN USER PROGRAM
00E0140C                          3268  
00E0140C  4286                    3269             CLR.L D6
00E0140E  6100 FC40               3270             BSR GET_ADDRESS1
00E01412                          3271  
00E01412                          3272  ; GOT D6 FOR DESTINATION
00E01412                          3273  
00E01412  2D46 00F0               3274             MOVE.L D6,USER_PC(A6)  ; SAVE TO USER PC
00E01416  6002                    3275             BRA.S JUMP1
00E01418                          3276  
00E01418  4E75                    3277  ABORT      RTS                 ; GET BACK MONITOR
00E0141A                          3278  
00E0141A  2C79 000000C0           3279  JUMP1      MOVEA.L RAMBASE.L,A6     ; POINTED TO START MONITOR RAM
00E01420                          3280  
00E01420  206E 00E6               3281             MOVEA.L USER_USP(A6),A0
00E01424  4E60                    3282             MOVE.L  A0,USP           ; WRITE TO REAL USER STACK (A7)
00E01426                          3283  
00E01426  2F2E 00F0               3284             MOVE.L  USER_PC(A6),-(SP)     ; PUSH PC
00E0142A                          3285  
00E0142A  08AE 0005 00EA          3286             BCLR.B   #5,USER_SR(A6) ; SET USER MODE     
00E01430                          3287  
00E01430  3F2E 00EA               3288             MOVE.W  USER_SR(A6),-(SP)
00E01434  4CEE 7FFF 00AA          3289             MOVEM.L USER_DATA(A6),D0-D7/A0-A6
00E0143A  4E73                    3290             RTE                     ; JUMP TO USER PROGRAM
00E0143C                          3291  
00E0143C                          3292  
00E0143C                          3293  ; TRACE JUMP
00E0143C                          3294  ; SET TRACE BIT IN SAVED STATUS REGISTER
00E0143C                          3295  
00E0143C  47F9 00E01A9D           3296  TRACE_JUMP LEA.L TRACE_MSG.L,A3
00E01442  6100 F918               3297             BSR PSTR
00E01446  6100 F922               3298             BSR NEW_LINE
00E0144A                          3299  
00E0144A  2C79 000000C0           3300             MOVEA.L RAMBASE.L,A6
00E01450  286E 00F0               3301             MOVEA.L USER_PC(A6),A4
00E01454  4CD4 0007               3302             MOVEM.L (A4),D0-D2
00E01458  2A79 000000C0           3303             MOVEA.L RAMBASE.L,A5
00E0145E  DBFC 00000026           3304             ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00E01464                          3305  
00E01464  4EB9 00E007C4           3306             JSR  DCODE68K.L
00E0146A                          3307  
00E0146A  6100 F8FE               3308             BSR NEW_LINE
00E0146E  6100 00F8               3309             BSR PRINT_LINE
00E01472                          3310  
00E01472  2C79 000000C0           3311             MOVEA.L RAMBASE.L,A6
00E01478                          3312  
00E01478  08EE 0007 00EA          3313             BSET.B #TRACE_BIT,USER_SR(A6)  ; SET TRACE BIT
00E0147E  609A                    3314             BRA JUMP1                    ; BORROW JUMP ROUTINE
00E01480                          3315  
00E01480                          3316  ; CLEAR MONITOR RAM
00E01480                          3317  
00E01480  2C79 000000C0           3318  CLEAR_MON_RAM MOVEA.L RAMBASE.L,A6
00E01486  3E3C 0200               3319                MOVE.W  #512,D7
00E0148A                          3320  
00E0148A  3CFC 0000               3321  CLEAR1        MOVE.W #0000,(A6)+
00E0148E  51CF FFFA               3322                DBRA D7,CLEAR1
00E01492  4E75                    3323                RTS
00E01494                          3324  
00E01494                          3325  
00E01494                          3326  
00E01494                          3327  ; MODIFY USER REGISTERS
00E01494                          3328  
00E01494  2C79 000000C0           3329  MODIFY_REG    MOVEA.L RAMBASE.L,A6
00E0149A  6100 F8BA               3330                BSR CIN
00E0149E  C03C 00DF               3331                AND.B #%11011111,D0
00E014A2  0C00 0050               3332                CMPI.B #'P',D0
00E014A6  661A                    3333                BNE.S DATA_REG1
00E014A8                          3334  
00E014A8  103C 0043               3335                MOVE.B #'C',D0
00E014AC  6100 F888               3336                BSR COUT
00E014B0  103C 003D               3337                MOVE.B #'=',D0
00E014B4  6100 F880               3338                BSR COUT
00E014B8  6100 FB90               3339                BSR GET_ADDRESS
00E014BC                          3340  
00E014BC  2D46 00F0               3341                MOVE.L D6,USER_PC(A6)
00E014C0  4E75                    3342                RTS
00E014C2                          3343  
00E014C2  0C00 0044               3344  DATA_REG1     CMPI.B #'D',D0
00E014C6  6622                    3345                BNE.S ADDRESS_REG2
00E014C8  6100 F88C               3346                BSR CIN
00E014CC  0400 0030               3347                SUB.B #'0',D0
00E014D0                          3348  
00E014D0  4287                    3349                CLR.L D7
00E014D2  1E00                    3350                MOVE.B D0,D7
00E014D4                          3351  
00E014D4  103C 003D               3352                MOVE.B #'=',D0
00E014D8  6100 F85C               3353                BSR COUT
00E014DC                          3354  
00E014DC  6100 FB4A               3355                BSR GET_32BIT
00E014E0                          3356  
00E014E0  E50F                    3357                LSL.B #2,D7        ; D7*4
00E014E2  DCC7                    3358                ADDA.W D7,A6
00E014E4  2D46 00AA               3359                MOVE.L D6,USER_DATA(A6)  ; SAVE TO USER DATA REGISTERS
00E014E8                          3360  
00E014E8  4E75                    3361                RTS
00E014EA                          3362                
00E014EA  0C00 0041               3363  ADDRESS_REG2  CMPI.B #'A',D0
00E014EE  6620                    3364                BNE.S WHAT3
00E014F0  6100 F864               3365                BSR CIN
00E014F4  0400 0030               3366                SUB.B #'0',D0
00E014F8                          3367  
00E014F8  4287                    3368                CLR.L D7
00E014FA  1E00                    3369                MOVE.B D0,D7
00E014FC                          3370  
00E014FC  103C 003D               3371                MOVE.B #'=',D0
00E01500  6100 F834               3372                BSR COUT
00E01504                          3373  
00E01504  6100 FB22               3374                BSR GET_32BIT
00E01508                          3375  
00E01508  E50F                    3376                LSL.B #2,D7        ; D7*4
00E0150A  DCC7                    3377                ADDA.W D7,A6
00E0150C  2D46 00CA               3378                MOVE.L D6,USER_ADDR(A6)  ; SAVE TO USER ADDRESS REGISTERS
00E01510                          3379  
00E01510  4E75                    3380  WHAT3         RTS
00E01512                          3381  
00E01512                          3382  ;=======================================================================
00E01512                          3383  ; TRAP #N SERVICES
00E01512                          3384  ;
00E01512                          3385  
00E01512                          3386  SERVICE_TRAP0   ;MOVE.B ACIA2D.L,D0
00E01512                          3387                  ;BSR COUT
00E01512  46FC 2000               3388                  MOVE.W #INT_ON,SR   ; REENTER SUPERVISOR MODE
00E01516                          3389  
00E01516  4EF9 00E00C10           3390                  JMP LOOP.L        ; GET BACK MONITOR
00E0151C                          3391  
00E0151C                          3392  
00E0151C                          3393  ; DISASSEMBLE THE MACHNIE CODE INTO MNEMONIC
00E0151C                          3394  
00E0151C  47F9 00E019DD           3395  DISASSEMBLE     LEA.L DIS.L,A3
00E01522  6100 F838               3396                  BSR PSTR
00E01526                          3397  
00E01526                          3398             ;   LEA.L $102000.L,A4
00E01526                          3399  
00E01526  2C79 000000C0           3400                 MOVEA.L RAMBASE.L,A6
00E0152C                          3401  
00E0152C  3E3C 0013               3402                 MOVE.W #19,D7       ; 20 LINES DISASSEMBLE
00E01530                          3403  
00E01530  286E 00A6               3404                 MOVEA.L POINTER_NOW(A6),A4
00E01534                          3405  
00E01534  4CD4 0007               3406  DIS1           MOVEM.L (A4),D0-D2
00E01538  2A79 000000C0           3407                 MOVEA.L RAMBASE.L,A5
00E0153E  DBFC 00000026           3408                 ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00E01544                          3409  
00E01544  48E7 0102               3410                 MOVEM.L A6/D7,-(SP)
00E01548                          3411  
00E01548  4EB9 00E007C4           3412                 JSR  DCODE68K.L
00E0154E                          3413  
00E0154E  6100 F81A               3414                 BSR NEW_LINE
00E01552  6100 0014               3415                 BSR PRINT_LINE
00E01556                          3416  
00E01556  4CDF 4080               3417                 MOVEM.L (SP)+,D7/A6
00E0155A                          3418  
00E0155A  51CF FFD8               3419                 DBRA D7,DIS1
00E0155E                          3420  
00E0155E  2D4C 00A6               3421                 MOVE.L A4,POINTER_NOW(A6) ; NEXT BLOCK
00E01562  6100 F806               3422                 BSR NEW_LINE
00E01566  4E75                    3423                 RTS
00E01568                          3424  
00E01568  101D                    3425  PRINT_LINE     MOVE.B (A5)+,D0
00E0156A  6100 F7CA               3426                 BSR COUT
00E0156E  BDCD                    3427                 CMPA.L A5,A6
00E01570  66F6                    3428                 BNE.S PRINT_LINE
00E01572  4E75                    3429                 RTS
00E01574                          3430  
00E01574                          3431  
00E01574                          3432  ; UPLOAD BINARY IMAGE FROM MEMORY
00E01574                          3433  ; SEND IT TO TERMINAL AS HEX CODE IN LONG WORD FORMAT
00E01574                          3434  ; USE FOR DISASSEMBLER HEX CODE PREPARATION
00E01574                          3435  
00E01574  47F9 00E01A03           3436  UPLOAD        LEA.L UPLOAD1.L,A3
00E0157A  6100 F7E0               3437                BSR PSTR
00E0157E  6100 F7D6               3438                BSR CIN
00E01582                          3439  
00E01582  4BF9 00100400           3440                LEA.L $100400.L,A5    ; START
00E01588  4DF9 00102000           3441                LEA.L $102000.L,A6    ; STOP
00E0158E                          3442  
00E0158E  6100 F7DA               3443  UPLOAD3       BSR NEW_LINE
00E01592  47F9 00E01A2D           3444                LEA.L STRING1.L,A3
00E01598  6100 F7C2               3445                BSR PSTR
00E0159C                          3446  
00E0159C  3E3C 0007               3447                MOVE.W #7,D7
00E015A0                          3448  
00E015A0  103C 0024               3449  UPLOAD2       MOVE.B #'$',D0
00E015A4  6100 F790               3450                BSR COUT
00E015A8  201D                    3451                MOVE.L (A5)+,D0
00E015AA  6100 F99E               3452                BSR OUT8X
00E015AE  103C 002C               3453                MOVE.B #',',D0
00E015B2  6100 F782               3454                BSR COUT
00E015B6  51CF FFE8               3455                DBRA D7,UPLOAD2
00E015BA                          3456  
00E015BA  BDCD                    3457                CMPA.L A5,A6
00E015BC  6ED0                    3458                BGT  UPLOAD3
00E015BE                          3459  
00E015BE  4E75                    3460                RTS
00E015C0                          3461  
00E015C0                          3462  ; ABOUT zBUG V1.0
00E015C0                          3463  
00E015C0  47F9 00E01A34           3464  ABOUT         LEA.L ABOUTZBUG.L,A3
00E015C6  6100 F794               3465                BSR PSTR
00E015CA  4E75                    3466                RTS
00E015CC                          3467  
00E015CC                          3468  ; VIEW USER STACK
00E015CC                          3469  
00E015CC  47F9 00E01AAE           3470  VIEW_USP      LEA.L VIEW.L,A3
00E015D2  6100 F788               3471                BSR PSTR
00E015D6                          3472  
00E015D6  6100 F792               3473                BSR NEW_LINE
00E015DA                          3474  
00E015DA  227C 00DFFFF4           3475                MOVEA.L #SUPER_STACK+USER_STACK,A1 ; TOP OF USER STACK
00E015E0                          3476  
00E015E0  41E9 FFE0               3477                LEA.L -32(A1),A0    ; EACH COMPOSED OF TWO BYTES
00E015E4                          3478  
00E015E4  3E3C 0010               3479                MOVE.W #16,D7
00E015E8  2C79 000000C0           3480                MOVEA.L RAMBASE.L,A6
00E015EE                          3481  
00E015EE                          3482  
00E015EE  2008                    3483  VIEW1         MOVE.L A0,D0
00E015F0                          3484  
00E015F0  2F00                    3485                MOVE.L D0,-(SP)
00E015F2                          3486  
00E015F2  B1EE 00E6               3487                CMPA.L USER_USP(A6),A0
00E015F6  660C                    3488                BNE.S NOT_TOS
00E015F8                          3489  
00E015F8  47F9 00E01B1D           3490                LEA.L TOP_OF_STACK.L,A3
00E015FE  6100 F75C               3491                BSR PSTR
00E01602  600A                    3492                BRA.S SKIP_PRINT_BLANK
00E01604                          3493  
00E01604  47F9 00E01B25           3494  NOT_TOS       LEA.L BLANK_BLOCK.L,A3
00E0160A  6100 F750               3495                BSR PSTR
00E0160E                          3496  
00E0160E                          3497  SKIP_PRINT_BLANK
00E0160E                          3498  
00E0160E  201F                    3499                MOVE.L (SP)+,D0
00E01610  6100 F930               3500                BSR OUT6X
00E01614  6100 F766               3501                BSR SPACE
00E01618                          3502  
00E01618  103C 005B               3503                MOVE.B #'[',D0
00E0161C  6100 F718               3504                BSR COUT
00E01620                          3505  
00E01620  3018                    3506                MOVE.W (A0)+,D0
00E01622  6100 F916               3507                BSR OUT4X
00E01626                          3508  
00E01626  103C 005D               3509                MOVE.B #']',D0
00E0162A  6100 F70A               3510                BSR COUT
00E0162E                          3511  
00E0162E  6100 F73A               3512                BSR NEW_LINE
00E01632  51CF FFBA               3513                DBRA D7,VIEW1
00E01636                          3514  
00E01636  4E75                    3515                RTS
00E01638                          3516  
00E01638                          3517  
00E01638                          3518  ; LOAD SP WITH [RAM] AND PC [RAM+4]
00E01638                          3519  
00E01638  2E79 00000000           3520  BOOT_RAM      MOVEA.L RAM.L,SP
00E0163E  2079 00000004           3521                MOVEA.L 4+RAM.L,A0
00E01644  4ED0                    3522                JMP     (A0)
00E01646                          3523                
00E01646                          3524                
00E01646                          3525                
00E01646                          3526  
00E01646                          3527  ***************************************
00E01646                          3528   * STRLEN - RETURNS LENGTH OP NULL TERMINATED STRING IN D0
00E01646                          3529   * A0 -> STRING
00E01646  2F08                    3530  STRLEN:   MOVE.L A0,-(SP) SAVE REG
00E01648  4280                    3531            CLR.L  D0       INITIALIZE
00E0164A  4A18                    3532  STRLENI:  TST.B  (A0)+    NULL?
00E0164C  6700 0006               3533            BEQ    STRLENR  YES, RETURN
00E01650  5280                    3534            ADDQ.L #1, D0   BUMP COUNT
00E01652  60F6                    3535            BRA    STRLENI  LOOP
00E01654  205F                    3536  STRLENR:  MOVE.L (SP)+,A0 RESTORE REG
00E01656  4E75                    3537            RTS
00E01658                          3538    
00E01658                          3539    * STRCPY - COPY A NULL TERMINATED STRING
00E01658                          3540    * A0 -> SOURCE STRING
00E01658                          3541    * A1 -> DESTINATION STRING
00E01658  48E7 00C0               3542  STRCPY:   MOVEM.L A0-A1,-(SP) SAVE REGS
00E0165C  12D8                    3543  STRCPY1:  MOVE.B  (A0)+,(A1)+ MOVE A BYTE
00E0165E  66FC                    3544            BNE     STRCPY1     GET ANOTHER IF NOT NULL
00E01660  4CDF 0300               3545            MOVEM.L (SP)+,A0-A1 RESTORE REGS
00E01664  4E75                    3546            RTS
00E01666                          3547  
00E01666                          3548    
00E01666                          3549    * STRCMP - COMPARE TWO NULL TERMINATED STRINGS
00E01666                          3550    * A0 -> STRING 1
00E01666                          3551    * A1 -> STRING 2
00E01666  48E7 00C0               3552  STRCMP:   MOVEM.L A0-A1,-(SP)  SAVE REGS
00E0166A  4280                    3553            CLR.L  D0       INITIALIZE
00E0166C  4281                    3554            CLR.L  D1
00E0166E  B308                    3555  STRCMP1:  CMPM.B  (A0)+,(A1)+  COMPARE BYTES
00E01670  6600 0010               3556            BNE     STRRET       RETURN IF DIFFERENT
00E01674  5241                    3557            ADD     #1, D1
00E01676                          3558            
00E01676  B2BC 0000000B           3559            CMP.L   #11, D1
00E0167C  66F0                    3560            BNE     STRCMP1      NOW MORE BYTES LEFT
00E0167E                          3561            
00E0167E  103C 0001               3562            MOVE.B  #1, D0
00E01682                          3563            
00E01682  4CDF 0300               3564  STRRET:   MOVEM.L (SP)+,A0-A1  RESTORE REGS
00E01686  4E75                    3565            RTS
00E01688                          3566  ***************************************
00E01688                          3567  
00E01688  E158                    3568  SWAPNUM     ROL.W #8,D0
00E0168A  4840                    3569              SWAP     D0
00E0168C  E158                    3570              ROL.W #8,D0
00E0168E                          3571              
00E0168E  4E75                    3572              RTS
00E01690                          3573      
00E01690                          3574  ********
00E01690                          3575  * memory copy
00E01690                          3576  ******** 
00E01690                          3577  MOVE_b  
00E01690  12D8                    3578          MOVE.B  (A0)+,(A1)+ ; do the long moves
00E01692  51C8 FFFC               3579          DBRA    D0,MOVE_b
00E01696  4E75                    3580          RTS
00E01698                          3581          
00E01698                          3582  MOVE_w  
00E01698  32D8                    3583          MOVE.W  (A0)+,(A1)+ ; do the long moves
00E0169A  51C8 FFFC               3584          DBRA    D0,MOVE_w
00E0169E  4E75                    3585          RTS  
00E016A0                          3586  
00E016A0                          3587  MOVE_l  
00E016A0  22D8                    3588          MOVE.l  (A0)+,(A1)+ ; do the long moves
00E016A2  51C8 FFFC               3589          DBRA    D0,MOVE_l
00E016A6  4E75                    3590          RTS   
00E016A8                          3591       
00E016A8                          3592  *****************************************************
00E016A8                          3593  
00E016A8                          3594  *-------------------------------------------------------------------------
00E016A8                          3595  * File X         COMMON I/O                                       05/17/82
00E016A8                          3596  
00E016A8                          3597  
00E016A8                          3598  *
00E016A8                          3599  *    OUTPUT BUFFER TO PORT1
00E016A8                          3600  *
00E016A8  48E7 F0C0               3601  OUTPUT   MOVEM.L D0-D3/A0-A1,-(A7) | GET SOME WORKING ROOM
00E016AC  4283                    3602           CLR.L   D3            | D3 = NO OFFSET INTO NULL CHARACTERS
00E016AE  6000 0002               3603           BRA    OUTP2
00E016B2                          3604           
00E016B2                          3605  *
00E016B2                          3606  *   SEND BUFFER TO PORT
00E016B2                          3607  *
00E016B2  BBCE                    3608  OUTP2    CMP.L   A6,A5        | SEE IF AT OR BEYOND END OF LINE
00E016B4  6506                    3609           BCS.S   OUTP3          | NO... KEEP GOING, ELSE
00E016B6  4CDF 030F               3610           MOVEM.L (A7)+,D0-D3/A0-A1 | RESTORE REGISTERS
00E016BA  4E75                    3611           RTS                    | END OF ROUTINE
00E016BC                          3612  
00E016BC  101D                    3613  OUTP3    MOVE.B  (A5)+,D0     | GRAB BYTE TO OUTPUT
00E016BE  6100 F676               3614           BSR    COUT         | GO PRINT IT
00E016C2  60EE                    3615           BRA    OUTP2          | GO DO ANOTHER
00E016C4                          3616           
00E016C4  4E75                    3617           RTS
00E016C6                          3618           
00E016C6  1CFC 000D               3619  OUT1CR   MOVE.B  #CR,(A6)+
00E016CA  1CFC 000A               3620           MOVE.B  #LF,(A6)+
00E016CE  61D8                    3621           BSR OUTPUT
00E016D0  4E75                    3622           RTS  
00E016D2                          3623  
00E016D2                          3624  *****************************************************
00E016D2                          3625  
00E016D2                          3626  ; SERVICE BUS ERROR
00E016D2  2679 00E01AD9           3627  SERVICE_BUSERROR MOVEA.L BUSERROR_MSG.L,A3
00E016D8  6000 001C               3628                  BRA SERVICE_MSG
00E016DC                          3629  
00E016DC                          3630  ; SERVICE ADDRESS ERROR
00E016DC  2679 00E01AE6           3631  SERVICE_ADDRESSERR MOVEA.L ADDRESSERR_MSG.L,A3
00E016E2  6000 0012               3632                  BRA SERVICE_MSG
00E016E6                          3633  
00E016E6                          3634  ; SERVICE ILLEGAL INTSRUCTION
00E016E6  2679 00E01AF7           3635  SERVICE_ILLEGAL MOVEA.L ILLEGAL_MSG.L,A3
00E016EC  6000 0008               3636                  BRA SERVICE_MSG
00E016F0                          3637  
00E016F0                          3638  ; SERVICE ZERO DIVIDE
00E016F0  2679 00E01B0E           3639  SERVICE_ZERODIV MOVEA.L ZERODIV_MSG.L,A3
00E016F6  6100 F664               3640  SERVICE_MSG     BSR PSTR
00E016FA  4E40                    3641                  TRAP #0
00E016FC                          3642  
00E016FC                          3643  ; vector table initrize
00E016FC  41FA 0026               3644  VECINIT   LEA   VECTABLE(pc),a0
00E01700  327C 0008               3645            MOVEA.W   #$0008,a1
00E01704  700A                    3646            MOVEQ     #10,D0
00E01706  22D8                    3647  VECINIT1  MOVE.L    (a0)+,(a1)+
00E01708  5300                    3648            SUBQ.B    #1,D0
00E0170A  66FA                    3649            BNE       VECINIT1
00E0170C  327C 0060               3650            MOVEA.W   #$60,A1
00E01710  7018                    3651            MOVEQ     #24,D0
00E01712  22D8                    3652  VECINIT2  MOVE.L    (a0)+,(a1)+
00E01714  5300                    3653            SUBQ.B    #1,D0
00E01716  66FA                    3654            BNE       VECINIT2
00E01718  327C 00C0               3655            MOVEA.W   #$C0,A1
00E0171C  22BC 00DF0000           3656            MOVE.L    #RAMBASE_INIT,(a1)
00E01722  4E75                    3657            RTS
00E01724                          3658  
00E01724                          3659  ;----------------- M68000 EXCEPTION VECTOR TABLE -----------------------------
00E01724= 00E016D2                3660  VECTABLE  DC.L  SERVICE_BUSERROR     ; 2 Bus error
00E01728= 00E016DC                3661            DC.L  SERVICE_ADDRESSERR   ; 3 Address error
00E0172C= 00E016E6                3662            DC.L  SERVICE_ILLEGAL      ; 4 Illegal instruction
00E01730= 00E016F0                3663            DC.L  SERVICE_ZERODIV      ; 5 Zero divide
00E01734= 00E01512                3664            DC.L  SERVICE_TRAP0        ; 6 CHK instruction
00E01738= 00E01512                3665            DC.L  SERVICE_TRAP0        ; 7 TRAPV instruction
00E0173C= 00E01512                3666            DC.L  SERVICE_TRAP0        ; 8 Privilege violation
00E01740= 00E01512                3667            DC.L  SERVICE_TRAP0        ; 9 Trace
00E01744= 00E01512                3668            DC.L  SERVICE_TRAP0    ; 10 Line 1010 emulator
00E01748= 00E01512                3669            DC.L  SERVICE_TRAP0    ; 11 Line 1111 emulator
00E0174C                          3670  
00E0174C= 00E01512                3671            DC.L  SERVICE_TRAP0    ; 24 Spurious Interupt
00E01750= 00E01512                3672            DC.L  SERVICE_TRAP0    ; 25 LEVEL 1 Interupt autovector
00E01754= 00E01512                3673            DC.L  SERVICE_TRAP0    ; 26 LEVEL 2 Interupt autovector
00E01758= 00E01512                3674            DC.L  SERVICE_TRAP0    ; 27 LEVEL 3 Interupt autovector
00E0175C= 00E01512                3675            DC.L  SERVICE_TRAP0    ; 28 LEVEL 4 Interupt autovector
00E01760= 00E01512                3676            DC.L  SERVICE_TRAP0    ; 29 LEVEL 5 Interupt autovector
00E01764= 00E01512                3677            DC.L  SERVICE_TRAP0    ; 30 LEVEL 6 Interupt autovector
00E01768= 00E01512                3678            DC.L  SERVICE_TRAP0    ; 31 LEVEL 7 Interupt autovector
00E0176C= 00E01512                3679            DC.L  SERVICE_TRAP0    ; 32 TRAP #0
00E01770= 00E01512                3680            DC.L  SERVICE_TRAP0    ; 33 TRAP #1
00E01774= 00E01512                3681            DC.L  SERVICE_TRAP0    ; 34 TRAP #2
00E01778= 00E01512                3682            DC.L  SERVICE_TRAP0    ; 35 TRAP #3
00E0177C= 00E01512                3683            DC.L  SERVICE_TRAP0    ; 36 TRAP #4
00E01780= 00E01512                3684            DC.L  SERVICE_TRAP0    ; 37 TRAP #5
00E01784= 00E01512                3685            DC.L  SERVICE_TRAP0    ; 38 TRAP #6
00E01788= 00E01512                3686            DC.L  SERVICE_TRAP0    ; 39 TRAP #7
00E0178C= 00E01512                3687            DC.L  SERVICE_TRAP0    ; 40 TRAP #8
00E01790= 00E01512                3688            DC.L  SERVICE_TRAP0    ; 41 TRAP #9
00E01794= 00E01512                3689            DC.L  SERVICE_TRAP0    ; 42 TRAP #10
00E01798= 00E01512                3690            DC.L  SERVICE_TRAP0    ; 43 TRAP #11
00E0179C= 00E01512                3691            DC.L  SERVICE_TRAP0    ; 44 TRAP #12
00E017A0= 00E01512                3692            DC.L  SERVICE_TRAP0    ; 45 TRAP #13
00E017A4= 00E01512                3693            DC.L  SERVICE_TRAP0    ; 46 TRAP #14
00E017A8= 00E01512                3694            DC.L  SERVICE_TRAP0    ; 47 TRAP #15
00E017AC                          3695  ;----------------------- STRING CONSTANT -------------------------------------
00E017AC                          3696  
00E017AC= 0D 0A 7A 42 75 67 20    3697  TITLE  DC.B 13,10,'zBug V1.0.3 for ARTY68K & GD DAZZLER',13,10,0
          56 31 2E 30 2E 33 20  
          66 6F 72 20 41 52 54  
          59 36 38 4B 20 26 20  
          47 44 20 44 41 5A 5A  
          4C 45 52 0D 0A 00     
00E017D5= 0D 0A 7A 42 75 67 20    3703  TITLE1 DC.B 13,10,'zBug V1.0.3 for ARTY68K & GD DAZZLER (press ? for help)',13,10,0
          56 31 2E 30 2E 33 20  
          66 6F 72 20 41 52 54  
          59 36 38 4B 20 26 20  
          47 44 20 44 41 5A 5A  
          4C 45 52 20 28 70 72  
          65 73 73 20 3F 20 66  
          6F 72 20 68 65 6C 70  
          29 0D 0A 00           
00E01811                          3712  
00E01811= 3E 00                   3713  PROMPT DC.B '>',0
00E01813                          3714  
00E01813= 6C 65 61 72 20 6D 65    3715  CLEAR  DC.B 'lear memory with 0x0000',0
          6D 6F 72 79 20 77 69  
          74 68 20 30 78 30 30  
          30 30 00              
00E0182B= 69 6C 6C 20 6D 65 6D    3719  FILL   DC.B 'ill memory with 0xFFFF',0 
          6F 72 79 20 77 69 74  
          68 20 30 78 46 46 46  
          46 00                 
00E01842= 0D 0A 0A 73 74 61 72    3723  START  DC.B 13,10,10,'start address=',0
          74 20 61 64 64 72 65  
          73 73 3D 00           
00E01854= 0D 0A 73 74 6F 70 20    3726  STOP   DC.B 13,10,'stop  address=',0
          20 61 64 64 72 65 73  
          73 3D 00              
00E01865= 0D 0A 64 6F 6E 65 2E    3729  DONE   DC.B 13,10,'done...',0
          2E 2E 00              
00E0186F                          3731  
00E0186F= 64 69 74 20 6D 65 6D    3732  EDIT1  DC.B 'dit memory (quit: X, next address: ENTER)',0
          6F 72 79 20 28 71 75  
          69 74 3A 20 58 2C 20  
          6E 65 78 74 20 61 64  
          64 72 65 73 73 3A 20  
          45 4E 54 45 52 29 00  
00E01899= 0D 0A 0A 41 64 64 72    3738  EDIT   DC.B 13,10,10,'Address=',0
          65 73 73 3D 00        
00E018A5= 20 20 72 6F 6D 00       3740  ROM    DC.B '  rom',0
00E018AB                          3741  
00E018AB= 65 77 20 32 34 2D 62    3742  NEW    DC.B 'ew 24-bit pointer',0
          69 74 20 70 6F 69 6E  
          74 65 72 00           
00E018BD                          3745  
00E018BD= 75 69 63 6B 20 68 6F    3746  QUICK  DC.B 'uick home, get back to start of RAM!',13,10,0
          6D 65 2C 20 67 65 74  
          20 62 61 63 6B 20 74  
          6F 20 73 74 61 72 74  
          20 6F 66 20 52 41 4D  
          21 0D 0A 00           
00E018E4= 65 78 20 64 75 6D 70    3752  HEX    DC.B 'ex dump memory',13,10,10
          20 6D 65 6D 6F 72 79  
          0D 0A 0A              
00E018F5= 41 44 44 52 45 53 53    3755         DC.B 'ADDRESS  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
          20 20 30 20 20 31 20  
          20 32 20 20 33 20 20  
          34 20 20 35 20 20 36  
          20 20 37 20 20 38 20  
          20 39 20 20 41 20 20  
          42 20 20 43 20 20 44  
          20 20 45 20 20 46 00  
00E0192D                          3763  
00E0192D= 6F 61 64 20 4D 6F 74    3764  LOAD   DC.B 'oad Motorola s-record (accept s1,s2 and s8) quit: ESC',13,10,0
          6F 72 6F 6C 61 20 73  
          2D 72 65 63 6F 72 64  
          20 28 61 63 63 65 70  
          74 20 73 31 2C 73 32  
          20 61 6E 64 20 73 38  
          29 20 71 75 69 74 3A  
          20 45 53 43 0D 0A 00  
00E01965                          3772  
00E01965= 20 62 79 74 65 73 20    3773  NUMBER DC.B ' bytes loaded, ',0
          6C 6F 61 64 65 64 2C  
          20 00                 
00E01975= 20 72 65 63 6F 72 64    3776  ERROR  DC.B ' records checksum error',13,10,0
          73 20 63 68 65 63 6B  
          73 75 6D 20 65 72 72  
          6F 72 0D 0A 00        
00E0198F                          3780  
00E0198F= 75 6D 70 20 74 6F 20    3781  JUMP_TO DC.B 'ump to user program ',0 
          75 73 65 72 20 70 72  
          6F 67 72 61 6D 20 00  
00E019A4                          3784  
00E019A4= 20 54 52 41 50 20 30    3785  TRAP_0 DC.B ' TRAP 0 !',0
          20 21 00              
00E019AE                          3787  
00E019AE= 65 67 69 73 74 65 72    3788  REGISTER_DISP DC.B 'egister(user) display (A7= user stack pointer)',0
          28 75 73 65 72 29 20  
          64 69 73 70 6C 61 79  
          20 28 41 37 3D 20 75  
          73 65 72 20 73 74 61  
          63 6B 20 70 6F 69 6E  
          74 65 72 29 00        
00E019DD                          3795  
00E019DD= 69 73 61 73 73 65 6D    3796  DIS    DC.B 'isassemble machine code to mnemonic',13,10,0
          62 6C 65 20 6D 61 63  
          68 69 6E 65 20 63 6F  
          64 65 20 74 6F 20 6D  
          6E 65 6D 6F 6E 69 63  
          0D 0A 00              
00E01A03                          3802  
00E01A03= 70 6C 6F 61 64 20 62    3803  UPLOAD1 DC.B 'pload binary image, hit any key to begin ',0
          69 6E 61 72 79 20 69  
          6D 61 67 65 2C 20 68  
          69 74 20 61 6E 79 20  
          6B 65 79 20 74 6F 20  
          62 65 67 69 6E 20 00  
00E01A2D= 20 20 44 46 4C 20 00    3809  STRING1 DC.B '  DFL ',0
00E01A34                          3810  
00E01A34= 62 6F 75 74 20 7A 42    3811  ABOUTZBUG DC.B 'bout zBuG V1.0',13,10,10
          75 47 20 56 31 2E 30  
          0D 0A 0A              
00E01A45= 7A 42 75 67 20 56 31    3814            DC.B 'zBug V1.0 Copyright (C) 2002 W.SIRICHOTE',13,10,10
          2E 30 20 43 6F 70 79  
          72 69 67 68 74 20 28  
          43 29 20 32 30 30 32  
          20 57 2E 53 49 52 49  
          43 48 4F 54 45 0D 0A  
          0A                    
00E01A70= 7A 42 75 67 20 56 31    3821            DC.B 'zBug V1.0.3 Arty68K Version by Matt Pearce',13,10,0
          2E 30 2E 33 20 41 72  
          74 79 36 38 4B 20 56  
          65 72 73 69 6F 6E 20  
          62 79 20 4D 61 74 74  
          20 50 65 61 72 63 65  
          0D 0A 00              
00E01A9D                          3828  
00E01A9D= 72 61 63 65 20 69 6E    3829  TRACE_MSG DC.B 'race instruction',0
          73 74 72 75 63 74 69  
          6F 6E 00              
00E01AAE                          3832  
00E01AAE= 74 61 63 6B 20 28 75    3833  VIEW      DC.B 'tack (user)s content, shows 16-WORD deep',13,10,0
          73 65 72 29 73 20 63  
          6F 6E 74 65 6E 74 2C  
          20 73 68 6F 77 73 20  
          31 36 2D 57 4F 52 44  
          20 64 65 65 70 0D 0A  
          00                    
00E01AD9                          3840  
00E01AD9= 62 75 73 20 65 72 72    3841  BUSERROR_MSG DC.B 'bus error...',0
          6F 72 2E 2E 2E 00     
00E01AE6= 61 64 64 72 65 73 73    3843  ADDRESSERR_MSG DC.B 'address error...',0
          20 65 72 72 6F 72 2E  
          2E 2E 00              
00E01AF7= 69 6C 6C 65 67 61 6C    3846  ILLEGAL_MSG DC.B 'illegal instruction...',0
          20 69 6E 73 74 72 75  
          63 74 69 6F 6E 2E 2E  
          2E 00                 
00E01B0E= 7A 65 72 6F 20 64 69    3850  ZERODIV_MSG DC.B 'zero divide...',0
          76 69 64 65 2E 2E 2E  
          00                    
00E01B1D                          3853  
00E01B1D= 54 4F 53 2D 2D 2D 3E    3854  TOP_OF_STACK DC.B 'TOS--->',0
          00                    
00E01B25= 20 20 20 20 20 20 20    3856  BLANK_BLOCK  DC.B '       ',0
          00                    
00E01B2D                          3858  
00E01B2D= 50 43 3D 00             3859  PC_REG DC.B 'PC=',0
00E01B31= 53 52 3D 00             3860  SR_REG DC.B 'SR=',0
00E01B35                          3861  
00E01B35= 43 3D 00                3862  CARRY_FLAG DC.B 'C=',0
00E01B38= 56 3D 00                3863  V_FLAG     DC.B 'V=',0
00E01B3B= 5A 3D 00                3864  Z_FLAG     DC.B 'Z=',0
00E01B3E= 4E 3D 00                3865  N_FLAG     DC.B 'N=',0
00E01B41= 58 3D 00                3866  X_FLAG     DC.B 'X=',0
00E01B44                          3867  
00E01B44                          3868  
00E01B44= 20 6D 6F 6E 69 74 6F    3869  HELP_LIST DC.B ' monitor commands',13,10,10
          72 20 63 6F 6D 6D 61  
          6E 64 73 0D 0A 0A     
00E01B58                          3872  
00E01B58= 41 20 20 20 41 62 6F    3873         DC.B 'A   About zBug V1.0',13,10
          75 74 20 7A 42 75 67  
          20 56 31 2E 30 0D 0A  
00E01B6D= 42 20 20 20 42 6F 6F    3876         DC.B 'B   Boot from RAM [000000] -> SP [000004] ->PC',13,10
          74 20 66 72 6F 6D 20  
          52 41 4D 20 5B 30 30  
          30 30 30 30 5D 20 2D  
          3E 20 53 50 20 5B 30  
          30 30 30 30 34 5D 20  
          2D 3E 50 43 0D 0A     
00E01B9D= 43 20 20 20 43 6C 65    3883         DC.B 'C   Clear memory with 0x0000',13,10
          61 72 20 6D 65 6D 6F  
          72 79 20 77 69 74 68  
          20 30 78 30 30 30 30  
          0D 0A                 
00E01BBB= 44 20 20 20 44 69 73    3888         DC.B 'D   Disassemble machine code to mnemonic',13,10
          61 73 73 65 6D 62 6C  
          65 20 6D 61 63 68 69  
          6E 65 20 63 6F 64 65  
          20 74 6F 20 6D 6E 65  
          6D 6F 6E 69 63 0D 0A  
00E01BE5= 45 20 20 20 45 64 69    3894         DC.B 'E   Edit memory',13,10
          74 20 6D 65 6D 6F 72  
          79 0D 0A              
00E01BF6= 46 20 20 20 46 69 6C    3897         DC.B 'F   Fill memory with 0xFFFF',13,10
          6C 20 6D 65 6D 6F 72  
          79 20 77 69 74 68 20  
          30 78 46 46 46 46 0D  
          0A                    
00E01C13= 48 20 20 20 48 65 78    3902         DC.B 'H   Hex dump memory',13,10
          20 64 75 6D 70 20 6D  
          65 6D 6F 72 79 0D 0A  
00E01C28= 4A 20 20 20 4A 75 6D    3905         DC.B 'J   Jump to address',13,10
          70 20 74 6F 20 61 64  
          64 72 65 73 73 0D 0A  
00E01C3D= 4C 20 20 20 4C 6F 61    3908         DC.B 'L   Load Motorola s-record',13,10
          64 20 4D 6F 74 6F 72  
          6F 6C 61 20 73 2D 72  
          65 63 6F 72 64 0D 0A  
00E01C59= 4E 20 20 20 4E 65 77    3912         DC.B 'N   New 24-bit pointer',13,10
          20 32 34 2D 62 69 74  
          20 70 6F 69 6E 74 65  
          72 0D 0A              
00E01C71= 52 20 20 20 52 65 67    3916         DC.B 'R   Register(user) display',13,10
          69 73 74 65 72 28 75  
          73 65 72 29 20 64 69  
          73 70 6C 61 79 0D 0A  
00E01C8D= 53 20 20 20 53 74 61    3920         DC.B 'S   Stack(user)s content',13,10
          63 6B 28 75 73 65 72  
          29 73 20 63 6F 6E 74  
          65 6E 74 0D 0A        
00E01CA7= 54 20 20 20 54 72 61    3924         DC.B 'T   Trace instruction',13,10
          63 65 20 69 6E 73 74  
          72 75 63 74 69 6F 6E  
          0D 0A                 
00E01CBE= 2E 20 20 20 4D 6F 64    3928         DC.B '.   Modify user registers, exp .PC .D0 .A0',13,10
          69 66 79 20 75 73 65  
          72 20 72 65 67 69 73  
          74 65 72 73 2C 20 65  
          78 70 20 2E 50 43 20  
          2E 44 30 20 2E 41 30  
          0D 0A                 
00E01CEA= 3F 20 20 20 4D 6F 6E    3935         DC.B '?   Monitor commands list',13,10,0
          69 74 6F 72 20 63 6F  
          6D 6D 61 6E 64 73 20  
          6C 69 73 74 0D 0A 00  
00E01D06                          3939  
00E01D06                          3940  
00E01D06                          3941  ; MONITOR'S RAM AREA
00E01D06                          3942  ; MUST BE EVEN ADDRESS FOE RAMBASE
00E01D06                          3943  ; THE A6 WAS LOADED WITH RAMBASE AS THE BASE MEMORY POINTER
00E01D06                          3944  ; THE FOLLOWING VARIABLE CAN BE ACCEESED BY USING INDIRECT WITH DISPLACMENT
00E01D06                          3945  
00E01D06                          3946  ;RAMBASE     DC.L   $130000     ; RAM BASE ADDRESS
00E01D06                          3947  
00E01D06                          3948  ; DCODE68K
00E01D06  =FFFFFFF0               3949  DDATA    EQU     $FFFFFFF0       ; DS.L 3
00E01D06  =FFFFFFFC               3950  HISPC    EQU     $FFFFFFFC       ; DS.L 1
00E01D06                          3951  
00E01D06                          3952  ; OFFSET(DISPLACEMENT) DEFINITION
00E01D06                          3953  
00E01D06  =00000000               3954  OFFSET      EQU  0               ; FOR DISASSEMBLER USAGE
00E01D06  =00000020               3955  DEBUG       EQU  OFFSET+32
00E01D06  =00000024               3956  FLAG        EQU  DEBUG+4         ; 16-BIT MONITOR FLAG
00E01D06  =00000026               3957  BUFFER      EQU  FLAG+2
00E01D06  =000000A6               3958  POINTER_NOW EQU  BUFFER+128
00E01D06  =000000AA               3959  USER_DATA   EQU  POINTER_NOW+4   ; USER D0-D7 AND A0-A7
00E01D06  =000000CA               3960  USER_ADDR   EQU  USER_DATA+32    ; USER ADDRESS REGISTERS, A0-A7
00E01D06  =000000E6               3961  USER_USP    EQU  USER_ADDR+28    ; A7 = USP
00E01D06  =000000EA               3962  USER_SR     EQU  USER_USP+4      ; 
00E01D06  =000000EC               3963  USER_SS     EQU  USER_SR+2
00E01D06  =000000F0               3964  USER_PC     EQU  USER_SS+4
00E01D06                          3965  
00E01D06  =000000F4               3966  STACK_AREA  EQU  USER_PC+4           ; 32kB USER STACK -> 2kB
00E01D06                          3967  ;USER_STACK  EQU  STACK_AREA+$7000    ; TOP OF STACK
00E01D06  =0000FFF4               3968  USER_STACK  EQU  STACK_AREA+$FF00    ; TOP OF STACK
00E01D06                          3969  
00E01D06                          3970  
00E01D06                          3971  
00E01D06                          3972         END  MAIN

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABORT               E01418
ABOUT               E015C0
ABOUTZBUG           E01A34
ACIA2C              F20009
ACIA2D              F2000B
ACIA3C              F30009
ACIA3D              F3000B
ACIAC               F00009
ACIAD               F0000B
ADDR2MEM            0
ADDRESSERR_MSG      E01AE6
ADDRESS_ERROR       C
ADDRESS_REG2        E014EA
BIT_ESC             0
BLANK               20
BLANK_BLOCK         E01B25
BOOT_RAM            E01638
BRTBL               E0046C
BS                  8
BUFFER              26
BUFSIZE             50
BUSERROR_MSG        E01AD9
BUS_ERROR           8
C68                 1C4
CARRY_FLAG          E01B35
CHECKSUM_ERROR      E00F04
CHECK_ESC           E00E26
CHECK_START         E00E72
CIN                 E00D56
CINS                E00D48
CLEAR               E01813
CLEAR1              E0148A
CLEAR_MEMORY        E010A0
CLEAR_MEMORY1       E010C6
CLEAR_MON_RAM       E01480
COMMON              E00862
COMMON35            E00870
COMMON4             E00860
COUT                E00D36
CR                  D
CS11                E00294
CS12                E001FE
CS13                E0017C
CS14                E0010C
CS15                E000CC
CS16                E0005E
CS17                E00438
CS18                E003D2
CS19                E004E4
CS20                E00334
DATA_REG1           E014C2
DCODE68K            E007C4
DDATA               FFFFFFF0
DEBUG               20
DEC311              E007D8
DEC404              E007F8
DEC411              E00808
DEC425              E00818
DEC510              E00826
DEC515              E0082A
DEC530              E00832
DEC535              E00838
DEC537              E00844
DIS                 E019DD
DIS1                E01534
DISASSEMBLE         E0151C
DISPLAY_REG         E01292
DISPLAY_REG1        E0129C
DONE                E01865
EA000               E00514
EA001               E00520
EA010               E0052C
EA011               E00540
EA011RTS            E00556
EA100               E00558
EA101               E005FA
EA1105              E005D6
EA1107              E005DA
EA1109              E005F0
EA111               E00610
EA1112              E0062E
EA1113              E0064A
EA1113A             E0065A
EA1114              E0067C
EA1115              E006E6
EA11153             E0071E
EA11155             E00728
EAF25               E006C4
EAF27               E006C8
EAF35               E006DC
EASY68K_SIM         1
EDIT                E01899
EDIT1               E0186F
EDIT_MEMORY         E010DA
EDIT_MEMORY2        E010F8
EDIT_MEMORY3        E01162
EDIT_MEMORY4        E0115E
EDIT_MEMORY5        E01150
EEA                 E00572
EEA10               E00186
EOT                 4
ERROR               E01975
ESC                 1B
FDATA               A
FE10                E0056E
FE11                E00656
FE12                E00816
FERROR              E0088A
FERROR35            E00894
FERROR39            E008A0
FILL                E0182B
FILL_MEMORY         E01066
FILL_MEMORY1        E0108C
FLAG                24
FOC                 1F
FOP                 27
FORM1               E00104
FORM10              E001CC
FORM103             E001D2
FORM104             E001D6
FORM105             E001E8
FORM10E3            E001AE
FORM10E4            E001B6
FORM10E6            E001C2
FORM10EX            E0018C
FORM11              E00204
FORM112             E00224
FORM114             E00232
FORM11SL            E00210
FORM12              E00234
FORM125             E0024E
FORM12A             E00270
FORM1A              E00108
FORM3               E00110
FORM4               E00114
FORM5               E00128
FORM6A              E0012C
FORM6D              E0013C
FORM7               E00164
FORM8               E00170
FORM815             E00174
FORM9               E00180
FORM91              E004FC
FORM93              E00510
FORM95              E00512
FORMREG5            E00150
FORMREGA            E0014C
FORMREGD            E0015C
FORMSIZE            E004E8
FREL10              E01242
FREL15              E01254
FREL20              E0126E
FREL25              E01280
FREL30              E0128A
FRELADDR            E01234
GET_32BIT           E01028
GET_ADDRESS         E0104A
GET_ADDRESS1        E01050
GET_HEX             E00DCA
GET_HEX1            E00DDA
GET_HEX2            E00DE8
GET_HEXS            E00DF8
GET_TYPE            E00E2E
HELP                E01168
HELP_LIST           E01B44
HEX                 E018E4
HEX2DEC             E0119A
HEX_DUMP            E00F56
HEX_DUMP1           E00F86
HEX_DUMP2           E00F72
HEX_DUMP3           E00FAE
HEX_DUMP4           E00FA8
HEX_DUMP5           E00FB4
HEX_DUMP6           E00FA0
HISPC               FFFFFFFC
HX2DC               E011AA
HX2DC0              E011AE
HX2DC1              E011B6
HX2DC2              E011D0
HX2DC22             E011D2
HX2DC3              E011DC
HX2DC4              E011E4
HX2DC5              E011EC
HX2DC57             E011F4
HX2DC6              E011F8
IBSR                E0038C
ICC                 E00388
ICC35               E0039E
ICC55               E003B4
ICCCC               E00454
ICCCC9              E0046A
IDBCC               E00374
ILINK               E000EC
ILLEGAL_INSTRUCTION  10
ILLEGAL_MSG         E01AF7
IM7788              E00028
IM7799              E0002C
IMMED               E00074
IMMED45             E0009A
IMMED55             E000CE
IMMED65             E000D4
IMMED75             E000E4
IMOVE               E000E8
IMOVE19             E004B2
IMOVEA1             E0048C
IMOVEMFR            E00014
IMOVEMTR            E00044
IMOVEP              E0030C
IMOVEP11            E0031C
IMOVEP35            E00338
IMOVEP66            E00346
IMOVEQ              E0029C
IMVFSR              E002BC
IMVFUSP             E002CC
IMVT44              E002EA
IMVTCCR             E002FC
IMVTSR              E002DC
IMVTUSP             E002F0
INIT_ACIA           E00D2A
INT_OFF             2700
INT_ON              2000
IQUICK              E00298
IQUICK21            E004CA
IQUICK31            E004E0
IQUICKA             E004B8
ISCC                E00368
ISETD               E003C4
ISETD12             E003CA
ISETS               E003D4
ISHIFT              E003F0
ISHIFT13            E003FC
ISHIFT23            E00420
ISHIFT33            E0042C
ISHIFT44            E00430
ISHIFTM1            E0043A
ISTOP               E00060
JUMP                E013D8
JUMP1               E0141A
JUMP_TO             E0198F
KI                  E008B4
KIEND               E008B6
LF                  A
LOAD                E0192D
LOCVARSZ            10
LONG                187
LOOP                E00C10
LOOP_BACK           E00F0C
MAIN                E00BC0
MODIFY_REG          E01494
MOVEMR              E00748
MOVEMR11            E00758
MOVEMR33            E00760
MOVEMR44            E00772
MOVEMR77            E0078C
MOVEMR79            E0079E
MOVEMR88            E007A0
MOVEMR94            E007B8
MOVEMS              E00734
MOVEMS2             E00744
MOVE_B              E01690
MOVE_L              E016A0
MOVE_W              E01698
MSG111              E008AA
N68                 230
NEW                 E018AB
NEW_LINE            E00D6A
NEW_POINTER         E00FCA
NEXT1               E00C30
NEXT10              E00CB4
NEXT11              E00CC2
NEXT12              E00CD0
NEXT13              E00CDE
NEXT14              E00CEC
NEXT15              E00CFA
NEXT16              E00D08
NEXT17              E00D14
NEXT18              E00D1E
NEXT2               E00C3E
NEXT3               E00C4C
NEXT4               E00C5A
NEXT5               E00C68
NEXT6               E00C76
NEXT7               E00C84
NEXT8               E00C94
NEXT9               E00CA4
NOT_TOS             E01604
NO_CHANGE           E00C22
NO_ERROR            E00F00
NUMBER              E01965
N_FLAG              E01B3E
OFFSET              0
OPCTBL              E00AC0
OUT1CR              E016C6
OUT1X               E00F18
OUT1X1              E00F2A
OUT2X               E00F32
OUT4X               E00F3A
OUT6X               E00F42
OUT8X               E00F4A
OUTP2               E016B2
OUTP3               E016BC
OUTPUT              E016A8
PC_REG              E01B2D
PNT2HX              E01218
PNT4HX              E01210
PNT6HX              E0120A
PNT8HX              E01202
POINTER_NOW         A6
PRINT_BIT           E013C2
PRINT_D0            E00F52
PRINT_DEBUG         E01000
PRINT_DEC           E01174
PRINT_LINE          E01568
PROMPT              E01811
PSTR                E00D5C
PSTR1               E00D68
PUTHEX              E01220
QUICK               E018BD
QUICK_HOME          E0100E
RAM                 0
RAMBASE             C0
RAMBASE_INIT        DF0000
RDRF                0
READ_DATA           E00EDA
READ_S1             E00E94
READ_S2             E00EB4
READ_S_REC          E00E0C
READ_S_REC1         E00E1A
REG1                E0134C
REG2                E013BC
REG3                E01388
REG4                E01380
REGISTER_DISP       E019AE
ROM                 E018A5
RS                  1E
SAVEREGS            8A
SAVHEX              E01230
SCHR                E002B4
SCOMMON             E00364
SCROLL              E00D84
SCROLL1             E00D88
SEND_PROMPT         E00D90
SEND_TITLE          E00DAA
SERVICE_ADDRESSERR  E016DC
SERVICE_BUSERROR    E016D2
SERVICE_ILLEGAL     E016E6
SERVICE_MSG         E016F6
SERVICE_TRAP0       E01512
SERVICE_ZERODIV     E016F0
SKIP_PRINT_BLANK    E0160E
SP                  20
SPACE               E00D7C
SR_REG              E01B31
STACK_AREA          F4
START               E01842
START_FOUND         E00E86
STOP                E01854
STRCMP              E01666
STRCMP1             E0166E
STRCPY              E01658
STRCPY1             E0165C
STRING1             E01A2D
STRLEN              E01646
STRLENI             E0164A
STRLENR             E01654
STRRET              E01682
SUPERVISOR_BIT      5
SUPER_STACK         DF0000
SWAPNUM             E01688
TBL                 E008B6
TBLE                E00AC0
TDRE                1
TEST_RAM            E01064
TITLE               E017AC
TITLE1              E017D5
TOP_OF_STACK        E01B1D
TO_HEX              E00DB4
TRACE_BIT           7
TRACE_JUMP          E0143C
TRACE_MSG           E01A9D
TRAP0               80
TRAP1               84
TRAP10              A8
TRAP11              AC
TRAP12              B0
TRAP13              B4
TRAP14              B8
TRAP15              BC
TRAP2               88
TRAP3               8C
TRAP4               90
TRAP5               94
TRAP6               98
TRAP7               9C
TRAP8               A0
TRAP9               A4
TRAP_0              E019A4
UPLOAD              E01574
UPLOAD1             E01A03
UPLOAD2             E015A0
UPLOAD3             E0158E
USER_ADDR           CA
USER_DATA           AA
USER_PC             F0
USER_SR             EA
USER_SS             EC
USER_STACK          FFF4
USER_USP            E6
VECINIT             E016FC
VECINIT1            E01706
VECINIT2            E01712
VECTABLE            E01724
VIEW                E01AAE
VIEW1               E015EE
VIEW_USP            E015CC
V_FLAG              E01B38
WAIT_CR             E00E3A
WHAT3               E01510
WRITE_1             E013CE
X                   E00014
X_FLAG              E01B41
ZERODIV_MSG         E01B0E
ZERO_TO_NINE        E00DC6
Z_FLAG              E01B3B
