00A00BC0 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 08/04/2021 17:18:08

00000000                             1  ; FILE NAME zbug_mic68k.x68
00000000                             2  ; zBug V1.0.1 for MIC68K by @kanpapa
00000000                             3  ; The source code was assembled using Easy68K 
00000000                             4  ; V1.0 1st release
00000000                             5  ; V1.0.1 Added function to Load Motorola S-record S1 format
00000000                             6  
00000000                             7  ;
00000000                             8  ; Original FILE NAME U68K.ASM 
00000000                             9  ; 
00000000                            10  ; zBug V1.0 is a small monitor program for 68000-Based Single Board Computer
00000000                            11  ; The source code was assembled using C32 CROSS ASSEMBLER VERSION 3.0
00000000                            12  ;
00000000                            13  
00000000                            14  ; Copyright (c) 2002 WICHIT SIRICHOTE email kswichit@kmitl.ac.th
00000000                            15  ; 
00000000                            16  ;
00000000                            17  ; This program is free software; you can redistribute it and/or modify
00000000                            18  ; it under the terms of the GNU General Public License as published by
00000000                            19  ; the Free Software Foundation; either version 2 of the License, orRAM
00000000                            20  ; (at your option) any later version.
00000000                            21  ;
00000000                            22  ; This program is distributed in the hope that it will be useful,
00000000                            23  ; but WITHOUT ANY WARRANTY; without even the implied warranty of
00000000                            24  ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
00000000                            25  ; GNU General Public License for more details.
00000000                            26  ;
00000000                            27  ;
00000000                            28  ;
00000000                            29  
00000000                            30  ;   CPU     "68000.TBL"      ; CPU TABLE
00000000                            31  ;   HOF     "BIN16"          ; HEX OUTPUT FORMAT
00000000                            32  ;   HOF     "MOT16"          ; OUTPUT MOTOROLA S-RECORD
00000000                            33  
00000000                            34  ;
00000000                            35  ; MIC68K MEMORY MAP
00000000                            36  ;
00000000                            37  ; 000000-00FFFF RAM 32Kx2
00000000                            38  ; 010000-9FFFFF -
00000000                            39  ; A00000-A0FFFF ROM 32Kx2
00000000                            40  ; A10000-DFFFFF -
00000000                            41  ; F00009-0B     ACIA1 63B50 (IC6)
00000000                            42  ; F20009-0B     ACIA2 63B50 (IC7)
00000000                            43  ; F40009-0F     PIA (IC1)
00000000                            44  ; F60009-1F     PTM (IC2)
00000000                            45  ;
00000000                            46  
00000000                            47  ; Use EASy68k Simulator
00000000  =00000000                 48  EASY68K_SIM EQU 0       ; set 0 to use ACIA1
00000000                            49  ;EASY68K_SIM    EQU 1       ; set 1 to use EASy68K Sim68K I/O  
00000000                            50  
00000000  =00000000                 51  BIT_ESC      EQU 0              ; ESC BIT POSITION
00000000  =00000000                 52  RAM      EQU $000000            ; RAM START ADDRESS
00000000                            53  
00000000                            54  ;
00000000                            55  ; MONITOR MEMORY MAP
00000000                            56  ; $000000-$0003FF M68000 Exception Vector Table
00000000                            57  ; $00E000         SUPER_STACK/RAMBASE
00000000                            58  ; $00FFFF         RAM END
00000000                            59  ;
00000000                            60  ; $A00000         RESET Vector
00000000                            61  ; $A00008         MAIN(Monitor start)
00000000                            62  ;
00000000                            63  
00000000  =00F00009                 64  ACIAC    EQU $F00009
00000000  =00F0000B                 65  ACIAD    EQU ACIAC+2
00000000                            66  
00000000  =00F20009                 67  ACIA2C    EQU $F20009
00000000  =00F2000B                 68  ACIA2D    EQU ACIA2C+2
00000000                            69  
00000000  =00F30009                 70  ACIA3C    EQU $F30009
00000000  =00F3000B                 71  ACIA3D    EQU ACIA3C+2
00000000                            72  
00000000  =00002000                 73  INT_ON   EQU  $2000    ; BOTH, SET SUPERVISOR MODE, S=1
00000000  =00002700                 74  INT_OFF  EQU  $2700
00000000                            75  
00000000  =00000000                 76  RDRF    EQU 0           ; ACIAC Receive Data Register Full
00000000  =00000001                 77  TDRE    EQU 1           ; ACIAC Transmit Data Register Empty
00000000                            78  
00000000  =00000005                 79  SUPERVISOR_BIT EQU 5
00000000                            80  
00000000  =00000007                 81  TRACE_BIT EQU 7
00000000                            82  
00000000  =0000000D                 83  CR      EQU 13
00000000  =0000000A                 84  LF      EQU 10
00000000  =00000020                 85  SP      EQU 32
00000000  =00000008                 86  BS      EQU 8
00000000  =0000001E                 87  RS      EQU $1E
00000000  =0000001B                 88  ESC     EQU $1B
00000000                            89  
00000000  =009F0000                 90  SUPER_STACK   EQU $9F0000   ; SUPER STACK TOP Address
00000000  =009F0000                 91  RAMBASE_INIT  EQU $9F0000   
00000000                            92  
00000000                            93  ;
00000000                            94  ; EXCEPTION VECTOR address
00000000                            95  ;
00000000  =00000080                 96  TRAP0   EQU RAM+$80
00000000  =00000084                 97  TRAP1   EQU TRAP0+4
00000000  =00000088                 98  TRAP2   EQU TRAP1+4
00000000  =0000008C                 99  TRAP3   EQU TRAP2+4
00000000  =00000090                100  TRAP4   EQU TRAP3+4
00000000  =00000094                101  TRAP5   EQU TRAP4+4
00000000  =00000098                102  TRAP6   EQU TRAP5+4
00000000  =0000009C                103  TRAP7   EQU TRAP6+4
00000000  =000000A0                104  TRAP8   EQU TRAP7+4
00000000  =000000A4                105  TRAP9   EQU TRAP8+4
00000000  =000000A8                106  TRAP10  EQU TRAP9+4
00000000  =000000AC                107  TRAP11  EQU TRAP10+4
00000000  =000000B0                108  TRAP12  EQU TRAP11+4
00000000  =000000B4                109  TRAP13  EQU TRAP12+4
00000000  =000000B8                110  TRAP14  EQU TRAP13+4
00000000  =000000BC                111  TRAP15  EQU TRAP14+4
00000000                           112  
00000000  =00000008                113  BUS_ERROR EQU RAM+8
00000000  =0000000C                114  ADDRESS_ERROR EQU RAM+$C
00000000  =00000010                115  ILLEGAL_INSTRUCTION EQU RAM+$10
00000000                           116  
000000C0                           117           ORG $C0
000000C0                           118  RAMBASE  DS.L   1          ; RAM BASE ADDRESS
000000C4                           119  
000000C4                           120  ;
000000C4                           121  ; ROM START
000000C4                           122  ;
00A00000                           123      ORG $A00000
00A00000                           124     ; Reset start vector
00A00000= 009F0000                 125     DC.L SUPER_STACK        ; TOP OF SUPERVISOR STACK $130000
00A00004= 00A00BC0                 126     DC.L MAIN               ; MONITOR START
00A00008                           127  
00A00008= 00000008                 128     DC.L BUS_ERROR
00A0000C= 0000000C                 129     DC.L ADDRESS_ERROR
00A00010= 00000010                 130     DC.L ILLEGAL_INSTRUCTION
00A00014                           131  
00A00014                           132  
00A00014  =0000000A                133  FDATA   EQU    10             ;OFFSET TO DATA
00A00014  =0000001F                134  FOC     EQU    31             ;OFFSET TO OP-CODE (NO LABEL FIELD)
00A00014  =00000027                135  FOP     EQU    39             ;OFFSET TO OPERAND (NO LABEL FIELD)
00A00014                           136  
00A00014  =00000020                137  BLANK    EQU   $20
00A00014  =00000050                138  BUFSIZE  EQU   80
00A00014  =00000010                139  LOCVARSZ EQU   16
00A00014  =00000004                140  EOT      EQU   $04
00A00014                           141  
00A00014                           142  ; CAUSES ORGIN MODULO 4
00A00014                           143  LONG     MACRO
00A00014                           144           DS      0
00A00014                           145           DS.B    (*-X)&2
00A00014                           146           ENDM
00A00014                           147  
00A00014                           148  
00A00014                           149  X        DS      0              BASE ADDRESS THIS MODULE
00A00014                           150m          LONG
00A00014                           151m          DS      0
00A00014                           152m          DS.B    (*-X)&2
00A00014                           153m          ENDM
00A00014                           154  
00A00014                           155  *  MOVEM REGISTERS TO EA
00A00014                           156  *
00A00014                           157  *        01001D001S......
00A00014                           158  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A00014                           159  *        .........0......       WORD
00A00014                           160  *        .........1......       LONG
00A00014                           161  *        .....0..........       REGISTER TO MEMORY
00A00014                           162  *        .....1..........       MEMORY TO REGISTER
00A00014                           163  *
00A00014                           164  
00A00014                           165  IMOVEMFR DS      0
00A00014  6100 071E                166           BSR     MOVEMS         SIZE
00A00018                           167  
00A00018  7C38                     168           MOVEQ   #$0038,D6
00A0001A  CC54                     169           AND.W   (A4),D6
00A0001C  0C46 0020                170           CMPI.W  #$0020,D6
00A00020  6706                     171           BEQ.S   IM7788         PREDECREMENT MODE
00A00022                           172  
00A00022  7C01                     173           MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
00A00024  7200                     174           MOVEQ   #0,D1          D1 = BIT POSITION
00A00026  6004                     175           BRA.S   IM7799
00A00028                           176  
00A00028  7CFF                     177  IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
00A0002A  720F                     178           MOVEQ   #15,D1         D1 = BIT POSITION
00A0002C  6100 071A                179  IM7799   BSR     MOVEMR         BUILD MASK WORD
00A00030                           180  
00A00030  1CFC 002C                181           MOVE.B  #',',(A6)+     STORE COMMA
00A00034                           182  
00A00034  5483                     183           ADDQ.L  #2,D3
00A00036  3814                     184           MOVE.W  (A4),D4
00A00038  3E3C 01F4                185           MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
00A0003C  6100 0534                186           BSR     EEA
00A00040  601C                     187           BRA.S   CS16           COMMON
00A00042                           188  
00A00042                           189m          LONG
00A00042                           190m          DS      0
00A00042                           191m          DS.B    (*-X)&2
00A00044                           192m          ENDM
00A00044                           193  * MOVEM  EA  TO REGISTERS
00A00044                           194  *
00A00044  6100 06EE                195  IMOVEMTR BSR     MOVEMS         SIZE
00A00048  5483                     196           ADDQ.L  #2,D3
00A0004A  3E3C 07EC                197           MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
00A0004E  6100 0522                198           BSR     EEA
00A00052                           199  
00A00052  1CFC 002C                200           MOVE.B  #',',(A6)+     STORE COMMA
00A00056                           201  
00A00056  7C01                     202           MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
00A00058  7200                     203           MOVEQ   #0,D1          D1 = BIT POSITION
00A0005A  6100 06EC                204           BSR     MOVEMR
00A0005E                           205  
00A0005E  606C                     206  CS16     BRA.S   CS15           COMMON
00A00060                           207  
00A00060                           208  
00A00060                           209m          LONG
00A00060                           210m          DS      0
00A00060                           211m          DS.B    (*-X)&2
00A00060                           212m          ENDM
00A00060                           213  ISTOP    DS      0
00A00060  302C 0002                214           MOVE.W  2(A4),D0
00A00064  1CFC 0023                215           MOVE.B  #'#',(A6)+     IMMEDIATE
00A00068  1CFC 0024                216           MOVE.B  #'$',(A6)+     HEX
00A0006C  6100 11C4                217           BSR     PNT4HX         VALUE
00A00070  6000 07EE                218           BRA     COMMON4
00A00074                           219  
00A00074                           220m          LONG
00A00074                           221m          DS      0
00A00074                           222m          DS.B    (*-X)&2
00A00074                           223m          ENDM
00A00074                           224  IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
00A00074  6100 0472                225           BSR     FORMSIZE
00A00078  5483                     226           ADDQ.L  #2,D3          SIZE = 4
00A0007A  1CFC 0023                227           MOVE.B  #'#',(A6)+     IMMEDIATE
00A0007E                           228  
00A0007E  4280                     229           CLR.L   D0
00A00080  302C 0002                230           MOVE.W  2(A4),D0       D0 = EXTENSION WORD
00A00084  3214                     231           MOVE.W  (A4),D1
00A00086  EC49                     232           LSR.W   #6,D1
00A00088  0241 0003                233           ANDI.W  #3,D1
00A0008C  6746                     234           BEQ.S   IMMED65        .BYTE
00A0008E                           235  
00A0008E  0C01 0001                236           CMPI.B  #1,D1
00A00092  6750                     237           BEQ.S   IMMED75        .WORD
00A00094                           238  
00A00094  5483                     239           ADDQ.L  #2,D3          .LONG    SIZE = 6
00A00096  202C 0002                240           MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
00A0009A                           241  
00A0009A  6100 1120                242  IMMED45  BSR     HEX2DEC        DECIMAL
00A0009E                           243  
00A0009E  1CC5                     244           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A000A0                           245  
00A000A0  3014                     246           MOVE    (A4),D0
00A000A2  0240 003F                247           ANDI.W  #$003F,D0
00A000A6  0C40 003C                248           CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
00A000AA  6622                     249           BNE.S   IMMED55        NOT FOUND
00A000AC                           250  
00A000AC  3014                     251           MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
00A000AE  0240 4000                252           ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
00A000B2  6600 07D6                253           BNE     FERROR         0600   0400  0C00
00A000B6                           254  
00A000B6  3214                     255           MOVE.W  (A4),D1
00A000B8  0241 00C0                256           ANDI.W  #$00C0,D1
00A000BC  0C41 0080                257           CMPI.W  #$0080,D1
00A000C0  6700 07C8                258           BEQ     FERROR         .LONG NOT ALLOWED
00A000C4                           259  
00A000C4  1CFC 0053                260           MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
00A000C8  1CFC 0052                261           MOVE.B  #'R',(A6)+
00A000CC  603E                     262  CS15     BRA.S   CS14           COMMON
00A000CE                           263  
00A000CE  6100 04A2                264  IMMED55  BSR     EEA
00A000D2  6038                     265           BRA.S   CS14           COMMON
00A000D4                           266  
00A000D4  2200                     267  IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
00A000D6  E049                     268           LSR.W   #8,D1          D1 = 00000000XXXXXXXX
00A000D8  670A                     269           BEQ.S   IMMED75
00A000DA  2200                     270           MOVE.L  D0,D1
00A000DC  EE41                     271           ASR.W   #7,D1
00A000DE  5241                     272           ADDQ.W  #1,D1          CHECK FOR NEGATIVE
00A000E0  6600 07A8                273           BNE     FERROR
00A000E4                           274  
00A000E4  48C0                     275  IMMED75  EXT.L   D0
00A000E6  60B2                     276           BRA     IMMED45
00A000E8                           277  
00A000E8                           278  *  BIT   5432109876543210
00A000E8                           279  *        ....RRRMMM......       DESTINATION REGISTER MODE
00A000E8                           280  *        ..........MMMRRR       SOURCE MODE REGISTER
00A000E8                           281  *        0001............       .BYTE
00A000E8                           282  *        0011............       .WORD
00A000E8                           283  *        0010............       .LONG
00A000E8                           284  *
00A000E8                           285  * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
00A000E8                           286m          LONG
00A000E8                           287m          DS      0
00A000E8                           288m          DS.B    (*-X)&2
00A000E8                           289m          ENDM
00A000E8                           290  IMOVE    DS      0
00A000E8  6000 03A2                291           BRA     IMOVEA1
00A000EC                           292  
00A000EC                           293m          LONG
00A000EC                           294m          DS      0
00A000EC                           295m          DS.B    (*-X)&2
00A000EC                           296m          ENDM
00A000EC                           297  ILINK    DS      0
00A000EC  615E                     298           BSR.S   FORMREGA
00A000EE                           299  
00A000EE  1CC5                     300           MOVE.B  D5,(A6)+       COMMA SERARATOR
00A000F0                           301  
00A000F0  1CFC 0023                302           MOVE.B  #'#',(A6)+
00A000F4  302C 0002                303           MOVE.W  2(A4),D0
00A000F8  48C0                     304           EXT.L   D0
00A000FA  6100 10C0                305           BSR     HEX2DEC        DECIMAL DISPLACEMENT
00A000FE  6000 0760                306           BRA     COMMON4
00A00102                           307  
00A00102                           308m          LONG
00A00102                           309m          DS      0
00A00102                           310m          DS.B    (*-X)&2
00A00104                           311m          ENDM
00A00104                           312  FORM1    DS      0              CLR  NEG  NEGX  NOT TST
00A00104  6100 03E2                313           BSR.L   FORMSIZE
00A00108                           314  
00A00108                           315  
00A00108                           316  *                               NBCD TAS
00A00108  6100 0468                317  FORM1A   BSR     EEA            DATA ALTERABLE ONLY
00A0010C  606E                     318  CS14     BRA.S   CS13           COMMON
00A0010E                           319  
00A0010E                           320m          LONG
00A0010E                           321m          DS      0
00A0010E                           322m          DS.B    (*-X)&2
00A00110                           323m          ENDM
00A00110                           324  FORM3    DS      0              EXT  SWAP
00A00110  614A                     325           BSR.S   FORMREGD
00A00112  6068                     326           BRA.S   CS13           COMMON
00A00114                           327  
00A00114                           328m          LONG
00A00114                           329m          DS      0
00A00114                           330m          DS.B    (*-X)&2
00A00114                           331m          ENDM
00A00114                           332  FORM4    DS      0              TRAP
00A00114  1CFC 0023                333           MOVE.B  #'#',(A6)+
00A00118  3014                     334           MOVE.W  (A4),D0
00A0011A  0280 0000000F            335           ANDI.L  #$0F,D0
00A00120  6100 109A                336           BSR     HEX2DEC        DECIMAL
00A00124  6056                     337           BRA.S   CS13           COMMON
00A00126                           338  
00A00126                           339m          LONG
00A00126                           340m          DS      0
00A00126                           341m          DS.B    (*-X)&2
00A00128                           342m          ENDM
00A00128                           343  FORM5    DS      0              UNLNK
00A00128  6122                     344           BSR.S   FORMREGA
00A0012A  6050                     345           BRA.S   CS13           COMMON
00A0012C                           346  
00A0012C                           347  *  BIT   5432109876543210
00A0012C                           348  *        ....RRR.........       ADDRESS REGISTER
00A0012C                           349  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A0012C                           350  *
00A0012C                           351m          LONG
00A0012C                           352m          DS      0
00A0012C                           353m          DS.B    (*-X)&2
00A0012C                           354m          ENDM
00A0012C                           355  FORM6A   DS      0              LEA
00A0012C  3E3C 07E4                356           MOVE.W  #$7E4,D7       CONTROL ADDRESSING
00A00130  6154                     357           BSR.S   EEA10
00A00132                           358  
00A00132  1CC5                     359           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00134                           360  
00A00134  3814                     361           MOVE.W  (A4),D4
00A00136  EF5C                     362           ROL.W   #7,D4
00A00138  6112                     363           BSR.S   FORMREGA
00A0013A  6040                     364           BRA.S   CS13           COMMON
00A0013C                           365  
00A0013C                           366  *  BIT   5432109876543210
00A0013C                           367  *        ....DDD.........       DATA REGISTER
00A0013C                           368  *        ..........XXXXXX       EFFECTIVE ADDRESS
00A0013C                           369  *
00A0013C                           370m          LONG
00A0013C                           371m          DS      0
00A0013C                           372m          DS.B    (*-X)&2
00A0013C                           373m          ENDM
00A0013C                           374  FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
00A0013C  3E3C 0FFD                375           MOVE.W  #$FFD,D7       DATA ADDRESSING
00A00140  6144                     376           BSR.S   EEA10
00A00142                           377  
00A00142  1CC5                     378           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00144                           379  
00A00144  3814                     380           MOVE.W  (A4),D4
00A00146  EF5C                     381           ROL.W   #7,D4
00A00148  6112                     382           BSR.S   FORMREGD
00A0014A  6030                     383           BRA.S   CS13           COMMON
00A0014C                           384  
00A0014C  1CFC 0041                385  FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
00A00150  0204 0007                386  FORMREG5 ANDI.B  #$07,D4
00A00154  0004 0030                387           ORI.B   #'0',D4
00A00158  1CC4                     388           MOVE.B  D4,(A6)+
00A0015A  4E75                     389           RTS
00A0015C                           390  
00A0015C  1CFC 0044                391  FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
00A00160  60EE                     392           BRA     FORMREG5
00A00162                           393  
00A00162                           394  *  BIT   5432109876543210
00A00162                           395  *        ....DDD......DDD       DATA REGISTERS
00A00162                           396  *
00A00162                           397m          LONG
00A00162                           398m          DS      0
00A00162                           399m          DS.B    (*-X)&2
00A00164                           400m          ENDM
00A00164                           401  FORM7    DS      0              EXG
00A00164  EF5C                     402           ROL.W   #7,D4
00A00166  61F4                     403           BSR     FORMREGD
00A00168                           404  
00A00168  1CC5                     405           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A0016A                           406  
00A0016A  3814                     407           MOVE.W  (A4),D4
00A0016C  61EE                     408           BSR     FORMREGD
00A0016E  600C                     409           BRA.S   CS13           COMMON
00A00170                           410  
00A00170                           411  *  BIT   5432109876543210
00A00170                           412  *        ....AAA......AAA       ADDRESS REGISTERS
00A00170                           413  *
00A00170                           414m          LONG
00A00170                           415m          DS      0
00A00170                           416m          DS.B    (*-X)&2
00A00170                           417m          ENDM
00A00170                           418  FORM8    DS      0              EXG
00A00170  EF5C                     419           ROL.W   #7,D4
00A00172  61D8                     420           BSR     FORMREGA
00A00174                           421  
00A00174  1CFC 002C                422  FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
00A00178                           423  
00A00178  3814                     424           MOVE.W  (A4),D4
00A0017A  61D0                     425           BSR     FORMREGA
00A0017C  6000 0080                426  CS13     BRA     CS12           COMMON
00A00180                           427  
00A00180                           428  *  BIT   5432109876543210
00A00180                           429  *        ....DDD.........       DATA REGISTER
00A00180                           430  *        .............AAA       ADDRESS REGISTER
00A00180                           431  *
00A00180                           432m          LONG
00A00180                           433m          DS      0
00A00180                           434m          DS.B    (*-X)&2
00A00180                           435m          ENDM
00A00180                           436  FORM9    DS      0              EXG
00A00180  EF5C                     437           ROL.W   #7,D4
00A00182  61D8                     438           BSR     FORMREGD       DATA REGISTER
00A00184  60EE                     439           BRA     FORM815
00A00186                           440  
00A00186  6000 03EA                441  EEA10    BRA     EEA
00A0018A                           442  
00A0018A                           443  *  BIT   5432109876543210
00A0018A                           444  *        ..........AAAAAA         EFFECTIVE ADDRESS
00A0018A                           445  *        .......MMM......         OP-MODE
00A0018A                           446  *        ....RRR.........         D-REGISTER
00A0018A                           447  *        .......011......         WORD  EA,A@
00A0018A                           448  *        .......111......         LONG  EA,A@
00A0018A                           449  *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
00A0018A                           450  *        .......0........         EA,D@
00A0018A                           451  *        .......1........         D@,EA
00A0018A                           452  *        ........00......         BYTE
00A0018A                           453  *        ........01......         WORD
00A0018A                           454  *        ........10......         LONG
00A0018A                           455  *
00A0018A                           456m          LONG
00A0018A                           457m          DS      0
00A0018A                           458m          DS.B    (*-X)&2
00A0018C                           459m          ENDM
00A0018C                           460  *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
00A0018C                           461  FORM10EX DS      0              ADD  CMP  SUB
00A0018C  3E3C 0FFF                462           MOVE.W  #$FFF,D7       ALL MODES ALLOWED
00A00190  2004                     463           MOVE.L  D4,D0
00A00192  0240 01C0                464           ANDI.W  #$01C0,D0
00A00196  673A                     465           BEQ.S   FORM103        .......000......
00A00198  0C40 01C0                466           CMPI.W  #$01C0,D0
00A0019C  6710                     467           BEQ.S   FORM10E3       .......111......
00A0019E  0C40 00C0                468           CMPI.W  #$00C0,D0
00A001A2  661E                     469           BNE.S   FORM10E6
00A001A4                           470  
00A001A4  1AFC 002E                471           MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
00A001A8  1AFC 0057                472           MOVE.B  #'W',(A5)+
00A001AC  6008                     473           BRA.S   FORM10E4
00A001AE                           474  
00A001AE  1AFC 002E                475  FORM10E3 MOVE.B  #'.',(A5)+
00A001B2  1AFC 004C                476           MOVE.B  #'L',(A5)+
00A001B6                           477  
00A001B6  61CE                     478  FORM10E4 BSR     EEA10
00A001B8                           479  
00A001B8  1CC5                     480           MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
00A001BA                           481  
00A001BA  3814                     482           MOVE.W  (A4),D4
00A001BC  EF5C                     483           ROL.W   #7,D4
00A001BE  618C                     484           BSR     FORMREGA       <EA>,A@
00A001C0  603C                     485           BRA.S   CS12           COMMON
00A001C2                           486  
00A001C2  0814 0000                487  FORM10E6 BTST.B  #0,(A4)
00A001C6  6620                     488           BNE.S   FORM105        .......1........    D@,<EA>
00A001C8  600C                     489           BRA.S   FORM104        .......0........    <EA>,D@
00A001CA                           490  
00A001CA                           491  *  BIT   5432109876543210
00A001CA                           492  *        ..........AAAAAA       EFFECTIVE ADDRESS
00A001CA                           493  *        .......MMM......       OP-MODE
00A001CA                           494  *        ....RRR.........       D-REGISTER
00A001CA                           495  *        .......0........       EA,D@
00A001CA                           496  *        .......1........       D@,EA
00A001CA                           497  *        ........00......       BYTE
00A001CA                           498  *        ........01......       WORD
00A001CA                           499  *        ........10......       LONG
00A001CA                           500m          LONG
00A001CA                           501m          DS      0
00A001CA                           502m          DS.B    (*-X)&2
00A001CC                           503m          ENDM
00A001CC                           504  FORM10   DS      0              AND  EOR  OR
00A001CC  0814 0000                505           BTST.B  #0,(A4)
00A001D0  6616                     506           BNE.S   FORM105
00A001D2                           507  
00A001D2  3E3C 0FFD                508  FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
00A001D6  6100 0310                509  FORM104  BSR     FORMSIZE
00A001DA  61AA                     510           BSR     EEA10          <EA>,D@
00A001DC                           511  
00A001DC  1CC5                     512           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A001DE                           513  
00A001DE  1814                     514           MOVE.B  (A4),D4
00A001E0  E20C                     515           LSR.B   #1,D4
00A001E2  6100 FF78                516           BSR     FORMREGD
00A001E6  6016                     517           BRA.S   CS12           COMMON
00A001E8                           518  
00A001E8  6100 02FE                519  FORM105  BSR     FORMSIZE       D@,<EA>
00A001EC  1814                     520           MOVE.B  (A4),D4
00A001EE  E20C                     521           LSR.B   #1,D4
00A001F0  6100 FF6A                522           BSR     FORMREGD
00A001F4                           523  
00A001F4  1CC5                     524           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A001F6                           525  
00A001F6  3814                     526           MOVE.W  (A4),D4
00A001F8  3E3C 01FD                527           MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
00A001FC  6188                     528           BSR     EEA10
00A001FE  6000 0662                529  CS12     BRA     COMMON
00A00202                           530  
00A00202                           531m          LONG
00A00202                           532m          DS      0
00A00202                           533m          DS.B    (*-X)&2
00A00204                           534m          ENDM
00A00204                           535  *                               PEA     (JMP  JSR)
00A00204  3E3C 07E4                536  FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
00A00208  6100 FF7C                537           BSR     EEA10
00A0020C  60F0                     538           BRA     CS12           COMMON
00A0020E                           539  
00A0020E                           540m          LONG
00A0020E                           541m          DS      0
00A0020E                           542m          DS.B    (*-X)&2
00A00210                           543m          ENDM
00A00210                           544  *                               JMP  JSR
00A00210  2004                     545  FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
00A00212  0240 003F                546           ANDI.W  #$3F,D0
00A00216  0C40 0038                547           CMPI.W  #$38,D0
00A0021A  6608                     548           BNE.S   FORM112        NOT .S
00A0021C  1AFC 002E                549           MOVE.B  #'.',(A5)+     PERIOD
00A00220  1AFC 0053                550           MOVE.B  #'S',(A5)+     S
00A00224  0C40 0039                551  FORM112  CMPI.W  #$39,D0
00A00228  6608                     552           BNE.S   FORM114
00A0022A  1AFC 002E                553           MOVE.B  #'.',(A5)+     PERIOD
00A0022E  1AFC 004C                554           MOVE.B  #'L',(A5)+     L
00A00232  60D0                     555  FORM114  BRA     FORM11
00A00234                           556  
00A00234                           557  *  BIT   5432109876543210
00A00234                           558  *        ....XXX.....0...       DATA DESTINATION REGISTER
00A00234                           559  *        ....XXX.....1...       ADDRESS REGISTER
00A00234                           560  *        ....XXX.00......       BYTE
00A00234                           561  *        ........01......       WORD
00A00234                           562  *        ........10......       LONG
00A00234                           563  *        ............0...       DATA REGISTER TO DATA REGISTER
00A00234                           564  *        ............1...       MEMORY TO MEMORY
00A00234                           565  *        ............0XXX       DATA SOURCE REGISTER
00A00234                           566  *        ............1XXX       ADDRESS SOURCE REGISTER
00A00234                           567  *
00A00234                           568m          LONG
00A00234                           569m          DS      0
00A00234                           570m          DS.B    (*-X)&2
00A00234                           571m          ENDM
00A00234                           572  FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
00A00234  6100 02B2                573           BSR     FORMSIZE
00A00238                           574  
00A00238  0804 0003                575           BTST    #3,D4
00A0023C  6610                     576           BNE.S   FORM125
00A0023E                           577  
00A0023E  6100 FF1C                578           BSR     FORMREGD       D@,D@;   FORMAT SOURCE
00A00242                           579  
00A00242  1CC5                     580           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00244                           581  
00A00244  1814                     582           MOVE.B  (A4),D4
00A00246  E20C                     583           LSR.B   #1,D4
00A00248  6100 FF12                584           BSR     FORMREGD       FORMAT DESTINATION
00A0024C  6046                     585           BRA.S   CS11           COMMON
00A0024E                           586  
00A0024E  1CFC 002D                587  FORM125  MOVE.B  #'-',(A6)+     -
00A00252  1CFC 0028                588           MOVE.B  #'(',(A6)+     (
00A00256  6100 FEF4                589           BSR     FORMREGA       A@    SOURCE
00A0025A                           590  
00A0025A  203C 282D2C29            591           MOVE.L  #'(-,)',D0     ),-(
00A00260  6152                     592           BSR.S   SCHR           STORE CHARS
00A00262                           593  
00A00262  1814                     594           MOVE.B  (A4),D4
00A00264  E20C                     595           LSR.B   #1,D4
00A00266  6100 FEE4                596           BSR     FORMREGA       A@   DESTINATION
00A0026A  1CFC 0029                597           MOVE.B  #')',(A6)+
00A0026E  6024                     598           BRA.S   CS11           COMMON
00A00270                           599  
00A00270                           600  *  BIT   5432109876543210
00A00270                           601  *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
00A00270                           602  *        ....XXX.00......       BYTE
00A00270                           603  *        ........01......       WORD
00A00270                           604  *        ........10......       LONG
00A00270                           605  *        ............1...       MEMORY TO MEMORY
00A00270                           606  *        ............1XXX       ADDRESS SOURCE REGISTER
00A00270                           607  *
00A00270                           608m          LONG
00A00270                           609m          DS      0
00A00270                           610m          DS.B    (*-X)&2
00A00270                           611m          ENDM
00A00270                           612  FORM12A  DS      0              CMPM
00A00270  6100 0276                613           BSR     FORMSIZE
00A00274                           614  
00A00274  1CFC 0028                615           MOVE.B  #'(',(A6)+     (
00A00278  6100 FED2                616           BSR     FORMREGA       A@
00A0027C                           617  
00A0027C  203C 282C2B29            618           MOVE.L  #'(,+)',D0     )+,(
00A00282  6130                     619           BSR.S   SCHR           STORE CHARS
00A00284                           620  
00A00284  1814                     621           MOVE.B  (A4),D4
00A00286  E20C                     622           LSR.B   #1,D4
00A00288  6100 FEC2                623           BSR     FORMREGA       A@
00A0028C  1CFC 0029                624           MOVE.B  #')',(A6)+
00A00290  1CFC 002B                625           MOVE.B  #'+',(A6)+
00A00294  6000 05CC                626  CS11     BRA     COMMON
00A00298                           627  
00A00298                           628m          LONG
00A00298                           629m          DS      0
00A00298                           630m          DS.B    (*-X)&2
00A00298                           631m          ENDM
00A00298  6000 021E                632  IQUICK   BRA     IQUICKA        ADDQ  SUBQ
00A0029C                           633  
00A0029C                           634  *  BIT   5432109876543210
00A0029C                           635  *        0111...0........       FIXED
00A0029C                           636  *        ....RRR.........       DATA REGISTER
00A0029C                           637  *        ........DDDDDDDD       SIGN EXTENDED DATA
00A0029C                           638  *
00A0029C                           639m          LONG
00A0029C                           640m          DS      0
00A0029C                           641m          DS.B    (*-X)&2
00A0029C                           642m          ENDM
00A0029C                           643  IMOVEQ   DS      0
00A0029C  1CFC 0023                644           MOVE.B  #'#',(A6)+     IMMEDIATE
00A002A0                           645  
00A002A0  3014                     646           MOVE.W  (A4),D0
00A002A2  4880                     647           EXT.W   D0
00A002A4  48C0                     648           EXT.L   D0
00A002A6  6100 0F14                649           BSR     HEX2DEC        DECIMAL
00A002AA                           650  
00A002AA  1CC5                     651           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A002AC                           652  
00A002AC  EF5C                     653           ROL.W   #7,D4
00A002AE  6100 FEAC                654           BSR     FORMREGD
00A002B2  60E0                     655           BRA     CS11           COMMON
00A002B4                           656  
00A002B4  1CC0                     657  SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
00A002B6  E088                     658           LSR.L   #8,D0
00A002B8  66FA                     659           BNE     SCHR           MORE TO OUTPUT
00A002BA  4E75                     660           RTS
00A002BC                           661  
00A002BC                           662  * MOVE FROM SR  (STATUS REGISTER)
00A002BC                           663  *
00A002BC                           664m          LONG
00A002BC                           665m          DS      0
00A002BC                           666m          DS.B    (*-X)&2
00A002BC                           667m          ENDM
00A002BC  203C 2C525300            668  IMVFSR   MOVE.L  #',RS'+0,D0   SR,
00A002C2                           669  
00A002C2  61F0                     670           BSR     SCHR
00A002C4  6100 02AC                671           BSR     EEA            DATA ALTERABLE
00A002C8  60CA                     672           BRA     CS11           COMMON
00A002CA                           673  
00A002CA                           674  * MOVE FROM USP (USER STACK POINTER)
00A002CA                           675  *
00A002CA                           676m          LONG
00A002CA                           677m          DS      0
00A002CA                           678m          DS.B    (*-X)&2
00A002CC                           679m          ENDM
00A002CC  203C 2C505355            680  IMVFUSP  MOVE.L  #',PSU',D0     USP,
00A002D2  61E0                     681           BSR     SCHR
00A002D4  6100 FE76                682           BSR     FORMREGA
00A002D8  60BA                     683           BRA     CS11           COMMON
00A002DA                           684  
00A002DA                           685  * MOVE TO SR (STATUS REGISTER)
00A002DA                           686  *
00A002DA                           687m          LONG
00A002DA                           688m          DS      0
00A002DA                           689m          DS.B    (*-X)&2
00A002DC                           690m          ENDM
00A002DC  3E3C 0FFD                691  IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
00A002E0  6100 0290                692           BSR     EEA
00A002E4  203C 52532C00            693           MOVE.L  #'RS,'+0,D0   ,SR
00A002EA  61C8                     694  IMVT44   BSR     SCHR
00A002EC  60A6                     695           BRA     CS11           COMMON
00A002EE                           696  
00A002EE                           697  * MOVE TO USP (USER STACK POINTER)
00A002EE                           698  *
00A002EE                           699m          LONG
00A002EE                           700m          DS      0
00A002EE                           701m          DS.B    (*-X)&2
00A002F0                           702m          ENDM
00A002F0  6100 FE5A                703  IMVTUSP  BSR     FORMREGA
00A002F4  203C 5053552C            704           MOVE.L  #'PSU,',D0     ,USP
00A002FA  60EE                     705           BRA     IMVT44
00A002FC                           706  
00A002FC                           707  *  MOVE TO CCR (CONDITION CODE REGISTER)
00A002FC                           708  *
00A002FC                           709m          LONG
00A002FC                           710m          DS      0
00A002FC                           711m          DS.B    (*-X)&2
00A002FC                           712m          ENDM
00A002FC  3E3C 0FFD                713  IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
00A00300  6100 0270                714           BSR     EEA
00A00304  203C 5243432C            715           MOVE.L  #'RCC,',D0     ,CCR
00A0030A  60DE                     716           BRA     IMVT44
00A0030C                           717  
00A0030C                           718  *  BIT   5432109876543210
00A0030C                           719  *        0000...1..001...       FIXED
00A0030C                           720  *        ....XXX.........       DATA REGISTER
00A0030C                           721  *        ........0.......       MEMORY TO REGISTER
00A0030C                           722  *        ........1.......       REGISTER TO MEMORY
00A0030C                           723  *        .........0......       WORD
00A0030C                           724  *        .........1......       LONG
00A0030C                           725  *        .............XXX       ADDRESS REGISTER
00A0030C                           726  *
00A0030C                           727m          LONG
00A0030C                           728m          DS      0
00A0030C                           729m          DS.B    (*-X)&2
00A0030C                           730m          ENDM
00A0030C                           731  IMOVEP   DS      0
00A0030C  1AFC 002E                732           MOVE.B  #'.',(A5)+     D@,#(A@)
00A00310  303C 4C57                733           MOVE.W  #'LW',D0
00A00314  0804 0006                734           BTST    #6,D4
00A00318  6702                     735           BEQ.S   IMOVEP11       USE "W"
00A0031A  E048                     736           LSR.W   #8,D0          USE "L"
00A0031C  1AC0                     737  IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
00A0031E                           738  
00A0031E  1814                     739           MOVE.B  (A4),D4
00A00320  E20C                     740           LSR.B   #1,D4
00A00322                           741  
00A00322  082C 0007 0001           742           BTST.B  #7,1(A4)
00A00328  670E                     743           BEQ.S   IMOVEP35
00A0032A                           744  
00A0032A  6100 FE30                745           BSR     FORMREGD       D@,$HHHH(A@)
00A0032E                           746  
00A0032E  1CC5                     747           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00330                           748  
00A00330  3814                     749           MOVE.W  (A4),D4
00A00332  6112                     750           BSR.S   IMOVEP66
00A00334  6000 052A                751  CS20     BRA     COMMON4
00A00338                           752  
00A00338  610C                     753  IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
00A0033A                           754  
00A0033A  1CC5                     755           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A0033C                           756  
00A0033C  1814                     757           MOVE.B  (A4),D4
00A0033E  E20C                     758           LSR.B   #1,D4
00A00340  6100 FE1A                759           BSR     FORMREGD
00A00344  60EE                     760           BRA     CS20           COMMON4
00A00346                           761  
00A00346  1CFC 0024                762  IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
00A0034A  302C 0002                763           MOVE.W  2(A4),D0
00A0034E  6100 0EE2                764           BSR     PNT4HX
00A00352                           765  
00A00352  1CFC 0028                766           MOVE.B  #'(',(A6)+
00A00356                           767  
00A00356  3814                     768           MOVE.W  (A4),D4
00A00358  6100 FDF2                769           BSR     FORMREGA
00A0035C  1CFC 0029                770           MOVE.B  #')',(A6)+
00A00360  4E75                     771           RTS
00A00362                           772  
00A00362                           773m          LONG
00A00362                           774m          DS      0
00A00362                           775m          DS.B    (*-X)&2
00A00364                           776m          ENDM
00A00364  6000 04FC                777  SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
00A00368                           778  
00A00368                           779m          LONG
00A00368                           780m          DS      0
00A00368                           781m          DS.B    (*-X)&2
00A00368                           782m          ENDM
00A00368  6100 00EA                783  ISCC     BSR     ICCCC          GET REST OF OP-CODE
00A0036C  6100 0204                784           BSR     EEA            DATA ALTERABLE
00A00370  60F2                     785           BRA     SCOMMON
00A00372                           786  
00A00372                           787  
00A00372                           788m          LONG
00A00372                           789m          DS      0
00A00372                           790m          DS.B    (*-X)&2
00A00374                           791m          ENDM
00A00374                           792  IDBCC    DS      0              DB--
00A00374  3814                     793           MOVE.W  (A4),D4
00A00376  6100 FDE4                794           BSR     FORMREGD
00A0037A                           795  
00A0037A  1CC5                     796           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A0037C  1CFC 0024                797           MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
00A00380                           798  
00A00380  6100 00D2                799           BSR     ICCCC
00A00384  602E                     800           BRA.S   ICC55
00A00386                           801  
00A00386                           802  *  BIT   5432109876543210
00A00386                           803  *        0110............       FIXED
00A00386                           804  *        ....CCCC........       CONDITION
00A00386                           805  *        ........DDDDDDD0       DISPLACEMENT
00A00386                           806  *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
00A00386                           807  *
00A00386                           808m          LONG
00A00386                           809m          DS      0
00A00386                           810m          DS.B    (*-X)&2
00A00388                           811m          ENDM
00A00388                           812  ICC      DS      0              B--
00A00388  6100 00CA                813           BSR     ICCCC
00A0038C                           814  
00A0038C  1CFC 0024                815  IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
00A00390                           816  
00A00390  4A04                     817           TST.B   D4
00A00392  6720                     818           BEQ.S   ICC55          16 BIT DISPLACEMENT
00A00394                           819  
00A00394  1AFC 002E                820           MOVE.B  #'.',(A5)+
00A00398  1AFC 0053                821           MOVE.B  #'S',(A5)+
00A0039C  4884                     822           EXT.W   D4             8 BIT DISPLACEMENT
00A0039E                           823  
00A0039E  48C4                     824  ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
00A003A0  D8A9 FFFC                825           ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
00A003A4  5484                     826           ADDQ.L  #2,D4          + TWO
00A003A6  2004                     827           MOVE.L  D4,D0
00A003A8                           828  
00A003A8  E284                     829           ASR.L   #1,D4
00A003AA  6500 04DE                830           BCS     FERROR         ODD BOUNDRY DISPLACEMENT
00A003AE                           831  
00A003AE  6100 0E7C                832           BSR     PNT6HX
00A003B2  60B0                     833           BRA     SCOMMON
00A003B4                           834  
00A003B4  5483                     835  ICC55    ADDQ.L  #2,D3          SIZE
00A003B6  382C 0002                836           MOVE.W  2(A4),D4
00A003BA  1AFC 002E                837           MOVE.B  #'.',(A5)+
00A003BE  1AFC 004C                838           MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
00A003C2  60DA                     839           BRA     ICC35
00A003C4                           840  
00A003C4                           841m          LONG
00A003C4                           842m          DS      0
00A003C4                           843m          DS.B    (*-X)&2
00A003C4                           844m          ENDM
00A003C4                           845  *                               BCHG  BCLR  BSET  BTST
00A003C4                           846  ISETD    DS      0              DYNAMIC BIT
00A003C4  EF5C                     847           ROL.W   #7,D4
00A003C6  6100 FD94                848           BSR     FORMREGD       DATA REGISTER
00A003CA                           849  
00A003CA  1CC5                     850  ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A003CC                           851  
00A003CC  3814                     852           MOVE.W  (A4),D4
00A003CE  6100 01A2                853           BSR     EEA            DATA ALTERABLE
00A003D2  6090                     854  CS18     BRA     SCOMMON
00A003D4                           855  
00A003D4                           856m          LONG
00A003D4                           857m          DS      0
00A003D4                           858m          DS.B    (*-X)&2
00A003D4                           859m          ENDM
00A003D4                           860  *                            BCHG  BCLR  BSET  BTST
00A003D4                           861  *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
00A003D4                           862  *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
00A003D4                           863  *
00A003D4                           864  ISETS    DS      0              STATIC BIT
00A003D4  5483                     865           ADDQ.L  #2,D3     SIZE
00A003D6  1CFC 0023                866           MOVE.B  #'#',(A6)+     IMMEDIATE
00A003DA                           867  
00A003DA  4280                     868           CLR.L   D0
00A003DC  302C 0002                869           MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
00A003E0  2200                     870           MOVE.L  D0,D1
00A003E2  EA89                     871           LSR.L   #5,D1
00A003E4  6600 04A4                872           BNE     FERROR
00A003E8  6100 0DD2                873           BSR     HEX2DEC        DECIMAL
00A003EC                           874  
00A003EC  60DC                     875           BRA     ISETD12
00A003EE                           876  
00A003EE                           877  *   BIT  5432109876543210
00A003EE                           878  *        ....XXX.........       IMMEDIATE COUNT/REGISTER
00A003EE                           879  *        .......0........       RIGHT SHIFT
00A003EE                           880  *        .......1........       LEFT SHIFT
00A003EE                           881  *        ........00......       BYTE
00A003EE                           882  *        ........01......       WORD
00A003EE                           883  *        ........10......       LONG
00A003EE                           884  *        ....0...11......       WORD (MEMORY)
00A003EE                           885  *        ....0...11AAAAAA       EFFECTIVE ADDRESS
00A003EE                           886  *        ..........0.....       SHIFT IMMEDIATE COUNT
00A003EE                           887  *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
00A003EE                           888  *
00A003EE                           889m          LONG
00A003EE                           890m          DS      0
00A003EE                           891m          DS.B    (*-X)&2
00A003F0                           892m          ENDM
00A003F0                           893  ISHIFT   DS      0              AS-  LS-  RO-  ROX-
00A003F0  303C 4C52                894           MOVE.W  #'LR',D0
00A003F4  0804 0008                895           BTST    #8,D4          DIRECTION BIT
00A003F8  6702                     896           BEQ.S   ISHIFT13       RIGHT
00A003FA  E048                     897           LSR.W   #8,D0          LEFT
00A003FC  1AC0                     898  ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
00A003FE                           899  
00A003FE  3014                     900           MOVE.W  (A4),D0
00A00400  0240 00C0                901           ANDI.W  #$00C0,D0
00A00404  0C40 00C0                902           CMPI.W  #$00C0,D0
00A00408  6730                     903           BEQ.S   ISHIFTM1       MEMORY SHIFT
00A0040A                           904  
00A0040A  6100 00DC                905           BSR     FORMSIZE
00A0040E                           906  
00A0040E  EF5C                     907           ROL.W   #7,D4
00A00410  0804 000C                908           BTST    #12,D4         I/R BIT
00A00414  6616                     909           BNE.S   ISHIFT33       COUNT IN REGISTER
00A00416                           910  
00A00416  0204 0007                911           ANDI.B  #$07,D4        IMMEDIATE COUNT
00A0041A  6604                     912           BNE.S   ISHIFT23
00A0041C  0004 0008                913           ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
00A00420  0004 0030                914  ISHIFT23 ORI.B   #'0',D4
00A00424  1CFC 0023                915           MOVE.B  #'#',(A6)+
00A00428  1CC4                     916           MOVE.B  D4,(A6)+
00A0042A  6004                     917           BRA.S   ISHIFT44
00A0042C                           918  
00A0042C  6100 FD2E                919  ISHIFT33 BSR     FORMREGD
00A00430                           920  
00A00430  1CC5                     921  ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00432                           922  
00A00432  3814                     923           MOVE.W  (A4),D4
00A00434  6100 FD26                924           BSR     FORMREGD
00A00438  6098                     925  CS17     BRA     CS18           COMMON
00A0043A                           926  
00A0043A  1AFC 002E                927  ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
00A0043E  1AFC 0057                928           MOVE.B  #'W',(A5)+     .WORD
00A00442                           929  
00A00442  0804 000B                930           BTST    #11,D4
00A00446  6600 0442                931           BNE     FERROR         BIT 11 MUST BE ZERO
00A0044A                           932  
00A0044A  3E3C 01FC                933           MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
00A0044E  6100 0122                934           BSR     EEA
00A00452  60E4                     935           BRA     CS17           COMMON
00A00454                           936  
00A00454  700F                     937  ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
00A00456  C014                     938           AND.B   (A4),D0        D0 = CCC
00A00458  E388                     939           LSL.L   #1,D0          D0 = CCC*2
00A0045A                           940  
00A0045A  323B 0010                941           MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
00A0045E  1AC1                     942           MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
00A00460  E049                     943           LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
00A00462  0C01 0020                944           CMPI.B  #BLANK,D1          TO THE BUFFER.
00A00466  6702                     945           BEQ.S   ICCCC9
00A00468  1AC1                     946           MOVE.B  D1,(A5)+
00A0046A  4E75                     947  ICCCC9   RTS
00A0046C                           948  
00A0046C= 20 54                    949  BRTBL    DC.B    ' T'      'T '  BRA ACCEPTED
00A0046E= 20 46                    950           DC.B    ' F'      'F '
00A00470= 49 48                    951           DC.B    'IH'      'HI'
00A00472= 53 4C                    952           DC.B    'SL'      'LS'
00A00474= 43 43                    953           DC.B    'CC'      'CC'
00A00476= 53 43                    954           DC.B    'SC'      'CS'
00A00478= 45 4E                    955           DC.B    'EN'      'NE'
00A0047A= 51 45                    956           DC.B    'QE'      'EQ'
00A0047C= 43 56                    957           DC.B    'CV'      'VC'
00A0047E= 53 56                    958           DC.B    'SV'      'VS'
00A00480= 4C 50                    959           DC.B    'LP'      'PL'
00A00482= 49 4D                    960           DC.B    'IM'      'MI'
00A00484= 45 47                    961           DC.B    'EG'      'GE'
00A00486= 54 4C                    962           DC.B    'TL'      'LT'
00A00488= 54 47                    963           DC.B    'TG'      'GT'
00A0048A= 45 4C                    964           DC.B    'EL'      'LE'
00A0048C                           965  
00A0048C                           966  *   BIT  5432109876543210
00A0048C                           967  *        ....RRRMMM......    DESTINATION REGISTER MODE
00A0048C                           968  *        ..........MMMRRR    SOURCE MODE REGISTER
00A0048C                           969  *
00A0048C                           970  * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
00A0048C                           971  *
00A0048C                           972  IMOVEA1  DS      0
00A0048C  3E3C 0FFF                973           MOVE.W  #$FFF,D7       ALL MODES
00A00490  6100 00E0                974           BSR     EEA
00A00494                           975  
00A00494  1CC5                     976           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A00496                           977  
00A00496  3814                     978           MOVE.W  (A4),D4        ....RRRMMM......
00A00498  E24C                     979           LSR.W   #1,D4          .....RRRMMM.....
00A0049A  EA0C                     980           LSR.B   #5,D4          .....RRR.....MMM
00A0049C  E05C                     981           ROR.W   #8,D4          .....MMM.....RRR
00A0049E  EB0C                     982           LSL.B   #5,D4          .....MMMRRR.....
00A004A0  EA4C                     983           LSR.W   #5,D4          ..........MMMRRR
00A004A2                           984  
00A004A2                           985  * IF .BYTE DESTINATION A@ NOT ALLOWED
00A004A2  3E3C 01FF                986           MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
00A004A6  1014                     987           MOVE.B  (A4),D0
00A004A8  0C00 0001                988           CMPI.B  #$01,D0
00A004AC  6604                     989           BNE.S   IMOVE19        NOT BYTE SIZE
00A004AE                           990  
00A004AE  3E3C 01FD                991           MOVE.W  #$1FD,D7       DATA ALTERABLE
00A004B2                           992  IMOVE19
00A004B2                           993  
00A004B2  6100 00BE                994           BSR     EEA
00A004B6  602C                     995           BRA.S   CS19           COMMON
00A004B8                           996  
00A004B8                           997  *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
00A004B8                           998  IQUICKA  DS      0              ADDQ  SUBQ
00A004B8  612E                     999           BSR.S   FORMSIZE
00A004BA                          1000  
00A004BA  1CFC 0023               1001           MOVE.B  #'#',(A6)+
00A004BE  EF5C                    1002           ROL.W   #7,D4
00A004C0  0204 0007               1003           ANDI.B  #7,D4
00A004C4  6604                    1004           BNE.S   IQUICK21
00A004C6  0004 0008               1005           ORI.B   #8,D4          MAKE ZERO INTO EIGHT
00A004CA  0004 0030               1006  IQUICK21 ORI.B   #'0',D4        MAKE ASCII
00A004CE  1CC4                    1007           MOVE.B  D4,(A6)+
00A004D0                          1008  
00A004D0  1CC5                    1009           MOVE.B  D5,(A6)+       COMMA SEPARATOR
00A004D2                          1010  
00A004D2  3814                    1011           MOVE.W  (A4),D4
00A004D4                          1012  
00A004D4  3014                    1013           MOVE.W  (A4),D0
00A004D6  0240 00C0               1014           ANDI.W  #$00C0,D0
00A004DA  6704                    1015           BEQ.S   IQUICK31       DATA ALTERABLE
00A004DC  3E3C 01FF               1016           MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
00A004E0  6100 0090               1017  IQUICK31 BSR     EEA
00A004E4  6000 037C               1018  CS19     BRA     COMMON
00A004E8                          1019  
00A004E8                          1020  *  BIT   5432109876543210
00A004E8                          1021  *        ........00......       BYTE
00A004E8                          1022  *        ........01......       WORD
00A004E8                          1023  *        ........10......       LONG
00A004E8                          1024  *        ........11......       ERROR
00A004E8                          1025  *
00A004E8                          1026  FORMSIZE DS      0
00A004E8  3414                    1027           MOVE.W  (A4),D2
00A004EA  1AFC 002E               1028           MOVE.B  #'.',(A5)+     STORE PERIOD
00A004EE  EC4A                    1029           LSR.W   #6,D2
00A004F0  0242 0003               1030           ANDI.W  #$03,D2
00A004F4  6606                    1031           BNE.S   FORM91
00A004F6  1AFC 0042               1032           MOVE.B  #'B',(A5)+     STORE "B"
00A004FA  6016                    1033           BRA.S   FORM95
00A004FC                          1034  
00A004FC  103C 0057               1035  FORM91   MOVE.B  #'W',D0
00A00500  0C02 0001               1036           CMPI.B  #1,D2
00A00504  670A                    1037           BEQ.S   FORM93
00A00506  103C 004C               1038           MOVE.B  #'L',D0
00A0050A  0C02 0002               1039           CMPI.B  #2,D2
00A0050E  665E                    1040           BNE.S   FE10           FERROR
00A00510  1AC0                    1041  FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
00A00512  4E75                    1042  FORM95   RTS
00A00514                          1043  
00A00514  6100 FC46               1044  EA000    BSR     FORMREGD
00A00518  0807 0000               1045           BTST    #0,D7
00A0051C  6750                    1046           BEQ.S   FE10           FERROR
00A0051E  4E75                    1047           RTS
00A00520                          1048  
00A00520  6100 FC2A               1049  EA001    BSR     FORMREGA
00A00524  0807 0001               1050           BTST    #1,D7
00A00528  6744                    1051           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A0052A  4E75                    1052           RTS
00A0052C                          1053  
00A0052C  1CFC 0028               1054  EA010    MOVE.B  #'(',(A6)+
00A00530  6100 FC1A               1055           BSR     FORMREGA
00A00534  1CFC 0029               1056           MOVE.B  #')',(A6)+
00A00538  0807 0002               1057           BTST    #2,D7
00A0053C  6730                    1058           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A0053E  4E75                    1059           RTS
00A00540                          1060  
00A00540  1CFC 0028               1061  EA011    MOVE.B  #'(',(A6)+
00A00544  6100 FC06               1062           BSR     FORMREGA
00A00548  1CFC 0029               1063           MOVE.B  #')',(A6)+
00A0054C  1CFC 002B               1064           MOVE.B  #'+',(A6)+
00A00550  0807 0003               1065           BTST    #3,D7
00A00554  6718                    1066           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
00A00556  4E75                    1067  EA011RTS RTS
00A00558                          1068  
00A00558  1CFC 002D               1069  EA100    MOVE.B  #'-',(A6)+
00A0055C  1CFC 0028               1070           MOVE.B  #'(',(A6)+
00A00560  6100 FBEA               1071           BSR     FORMREGA
00A00564  1CFC 0029               1072           MOVE.B  #')',(A6)+
00A00568  0807 0004               1073           BTST    #4,D7
00A0056C  66E8                    1074           BNE     EA011RTS
00A0056E  6000 031A               1075  FE10     BRA     FERROR         THIS MODE NOT ALLOWED
00A00572                          1076  
00A00572                          1077  *  ENTER       A4 = POINTER TO FIRST WORD
00A00572                          1078  *              D3 = OFFSET TO EXTENSION
00A00572                          1079  *              D4 = VALUE TO PROCESS
00A00572                          1080  *              D7 = MODES ALLOWED MASK
00A00572                          1081  *
00A00572                          1082  EEA      DS      0
00A00572  2004                    1083           MOVE.L  D4,D0
00A00574  E648                    1084           LSR.W   #3,D0
00A00576  0240 0007               1085           ANDI.W  #$7,D0
00A0057A  6798                    1086           BEQ     EA000
00A0057C                          1087  
00A0057C  0C00 0001               1088           CMPI.B  #1,D0
00A00580  679E                    1089           BEQ     EA001
00A00582                          1090  
00A00582  0C00 0002               1091           CMPI.B  #2,D0
00A00586  67A4                    1092           BEQ     EA010
00A00588                          1093  
00A00588  0C00 0003               1094           CMPI.B  #3,D0
00A0058C  67B2                    1095           BEQ     EA011
00A0058E                          1096  
00A0058E  0C00 0004               1097           CMPI.B  #4,D0
00A00592  67C4                    1098           BEQ     EA100
00A00594                          1099  
00A00594  0C00 0005               1100           CMPI.B  #5,D0
00A00598  6760                    1101           BEQ.S   EA101
00A0059A                          1102  
00A0059A  0C00 0007               1103           CMPI.B  #7,D0
00A0059E  6770                    1104           BEQ.S   EA111
00A005A0                          1105  
00A005A0                          1106  *    EXTENSION WORD
00A005A0                          1107  *   BIT  5432109876543210
00A005A0                          1108  *        0...............    DATA REGISTER
00A005A0                          1109  *        1...............    ADDRESS REGISTER
00A005A0                          1110  *        .RRR............    REGISTER
00A005A0                          1111  *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
00A005A0                          1112  *        ....1...........    LONG VALUE IN INDEX REGISTER
00A005A0                          1113  *        .....000........
00A005A0                          1114  *        ........DDDDDDDD    DISPLACEMENT INTEGER
00A005A0                          1115  *
00A005A0                          1116  * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
00A005A0                          1117  
00A005A0  0807 0006               1118           BTST    #6,D7
00A005A4  67C8                    1119           BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
00A005A6                          1120  
00A005A6  3234 3000               1121           MOVE.W  (A4,D3),D1
00A005AA  0241 0700               1122           ANDI.W  #$0700,D1
00A005AE  66BE                    1123           BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
00A005B0                          1124  
00A005B0  3034 3000               1125           MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
00A005B4  4880                    1126           EXT.W   D0
00A005B6  48C0                    1127           EXT.L   D0
00A005B8  6100 0C02               1128           BSR     HEX2DEC        DECIMAL
00A005BC  1CFC 0028               1129           MOVE.B  #'(',(A6)+     (
00A005C0                          1130  
00A005C0  6100 FB8A               1131           BSR     FORMREGA       XX(A@
00A005C4                          1132  
00A005C4  1CFC 002C               1133           MOVE.B  #',',(A6)+     XX(A@,
00A005C8                          1134  
00A005C8  1834 3000               1135           MOVE.B  (A4,D3),D4
00A005CC  E804                    1136           ASR.B   #4,D4
00A005CE  6A06                    1137           BPL.S   EA1105
00A005D0  6100 FB7A               1138           BSR     FORMREGA
00A005D4  6004                    1139           BRA.S   EA1107
00A005D6                          1140  
00A005D6  6100 FB84               1141  EA1105   BSR     FORMREGD
00A005DA  1CFC 002E               1142  EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
00A005DE                          1143  
00A005DE  3834 3000               1144           MOVE.W  (A4,D3),D4     D4 = R@
00A005E2  103C 0057               1145           MOVE.B  #'W',D0        ..........W
00A005E6  0804 000B               1146           BTST    #11,D4
00A005EA  6704                    1147           BEQ.S   EA1109
00A005EC  103C 004C               1148           MOVE.B  #'L',D0        ..........L
00A005F0  1CC0                    1149  EA1109   MOVE.B  D0,(A6)+
00A005F2  1CFC 0029               1150           MOVE.B  #')',(A6)+     ...........)
00A005F6  5483                    1151           ADDQ.L  #2,D3
00A005F8  4E75                    1152           RTS
00A005FA                          1153  
00A005FA                          1154  * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
00A005FA                          1155  *
00A005FA  0807 0005               1156  EA101    BTST    #5,D7          101000;   DIS(A@)
00A005FE  6756                    1157           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A00600                          1158  
00A00600  3034 3000               1159           MOVE.W  (A4,D3),D0
00A00604  48C0                    1160           EXT.L   D0
00A00606  6100 0BB4               1161           BSR     HEX2DEC        DECIMAL
00A0060A  5483                    1162           ADDQ.L  #2,D3          SIZE
00A0060C  6000 FF1E               1163           BRA     EA010
00A00610                          1164  
00A00610                          1165  *  111000        ABSOLUTE SHORT
00A00610                          1166  *  111001        ABSOLUTE LONG
00A00610                          1167  *  111010        PROGRAM COUNTER WITH DISPLACEMENT
00A00610                          1168  *  111011        PROGRAM COUNTER WITH INDEX
00A00610                          1169  *  111100        IMMEDIATE OR STATUS REG
00A00610                          1170  *
00A00610                          1171  EA111
00A00610  0244 0007               1172           ANDI.W  #7,D4
00A00614  6618                    1173           BNE.S   EA1112
00A00616                          1174  
00A00616  0807 0007               1175           BTST    #7,D7
00A0061A  673A                    1176           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A0061C                          1177  
00A0061C  3034 3000               1178           MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
00A00620  48C0                    1179           EXT.L   D0
00A00622  1CFC 0024               1180           MOVE.B  #'$',(A6)+
00A00626  6100 0BFC               1181           BSR     PNT8HX         SIGN EXTENDED VALUE
00A0062A  5483                    1182           ADDQ.L  #2,D3          SIZE + 2
00A0062C  4E75                    1183           RTS
00A0062E                          1184  
00A0062E  0C04 0001               1185  EA1112   CMPI.B  #1,D4
00A00632  6616                    1186           BNE.S   EA1113
00A00634                          1187  
00A00634  0807 0008               1188           BTST    #8,D7
00A00638  671C                    1189           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
00A0063A                          1190  
00A0063A  1CFC 0024               1191           MOVE.B  #'$',(A6)+     HEX
00A0063E  2034 3000               1192           MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
00A00642  6100 0BE0               1193           BSR     PNT8HX
00A00646                          1194  *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
00A00646                          1195  *-       MOVE.B  #'L',(A6)+     IE   .L
00A00646  5883                    1196           ADDQ.L  #4,D3
00A00648  4E75                    1197           RTS
00A0064A                          1198  
00A0064A  0C04 0002               1199  EA1113   CMPI.B  #2,D4
00A0064E  662C                    1200           BNE.S   EA1114
00A00650                          1201  
00A00650  0807 0009               1202           BTST    #9,D7
00A00654  6604                    1203           BNE.S   EA1113A
00A00656  6000 0232               1204  FE11     BRA     FERROR         THIS MODE NOT ALLOWED
00A0065A                          1205  EA1113A
00A0065A                          1206  
00A0065A  3034 3000               1207           MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
00A0065E  48C0                    1208           EXT.L   D0
00A00660  D0A9 FFFC               1209           ADD.L   HISPC(A1),D0
00A00664  5480                    1210           ADDQ.L  #2,D0
00A00666  1CFC 0024               1211           MOVE.B  #'$',(A6)+     HEX "$"
00A0066A  6100 0BB8               1212           BSR     PNT8HX         DESTINATION
00A0066E  203C 29435028           1213           MOVE.L  #')CP(',D0     (PC)
00A00674  6100 FC3E               1214           BSR     SCHR           STORE WORD
00A00678  5483                    1215           ADDQ.L  #2,D3          SIZE
00A0067A  4E75                    1216           RTS
00A0067C                          1217  
00A0067C  0C04 0003               1218  EA1114   CMPI.B  #3,D4
00A00680  6664                    1219           BNE.S   EA1115
00A00682                          1220  
00A00682                          1221  * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
00A00682                          1222  *
00A00682                          1223  *        5432109876543210       SECOND WORD
00A00682                          1224  *        0...............       DATA REGISTER
00A00682                          1225  *        1...............       ADDRESS REGISTER
00A00682                          1226  *        .XXX............       REGISTER
00A00682                          1227  *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
00A00682                          1228  *                               ..IN INDEX REGISTER
00A00682                          1229  *        ....1...........       LONG VALUE IN INDEX REGISTER
00A00682                          1230  *        .....000........
00A00682                          1231  *        ........XXXXXXXX       DISPLACEMENT INTEGER
00A00682                          1232  *
00A00682  0807 000A               1233           BTST    #10,D7
00A00686  67CE                    1234           BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
00A00688                          1235  
00A00688  3234 3000               1236           MOVE.W  (A4,D3),D1
00A0068C  0241 0700               1237           ANDI.W  #$0700,D1
00A00690  66C4                    1238           BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
00A00692                          1239  
00A00692  1034 3001               1240           MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
00A00696  4880                    1241           EXT.W   D0
00A00698  48C0                    1242           EXT.L   D0
00A0069A  D0A9 FFFC               1243           ADD.L   HISPC(A1),D0
00A0069E  5480                    1244           ADDQ.L  #2,D0
00A006A0  1CFC 0024               1245           MOVE.B  #'$',(A6)+     HEX "$"
00A006A4  6100 0B7E               1246           BSR     PNT8HX         DESTINATION
00A006A8                          1247  
00A006A8  203C 2C435028           1248           MOVE.L  #',CP(',D0
00A006AE  6100 FC04               1249           BSR     SCHR           DES(PC,
00A006B2                          1250  
00A006B2  3834 3000               1251           MOVE.W  (A4,D3),D4
00A006B6  E95C                    1252           ROL.W   #4,D4
00A006B8  0804 0003               1253           BTST    #3,D4
00A006BC  6706                    1254           BEQ.S   EAF25
00A006BE  6100 FA8C               1255           BSR     FORMREGA
00A006C2  6004                    1256           BRA.S   EAF27
00A006C4  6100 FA96               1257  EAF25    BSR     FORMREGD       DES(PC,R@
00A006C8                          1258  EAF27
00A006C8                          1259  
00A006C8  1CFC 002E               1260           MOVE.B  #'.',(A6)+     DES(PC,R@.
00A006CC                          1261  
00A006CC  3834 3000               1262           MOVE.W  (A4,D3),D4
00A006D0  303C 4C57               1263           MOVE.W  #'LW',D0
00A006D4  0804 000B               1264           BTST    #11,D4
00A006D8  6702                    1265           BEQ.S   EAF35
00A006DA  E048                    1266           LSR.W   #8,D0
00A006DC  1CC0                    1267  EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
00A006DE                          1268  
00A006DE  1CFC 0029               1269           MOVE.B  #')',(A6)+     DES(PC,R@.X)
00A006E2  5483                    1270           ADDQ.L  #2,D3
00A006E4  4E75                    1271           RTS
00A006E6                          1272  
00A006E6                          1273  *   BIT  5432109876543210
00A006E6                          1274  *        ..........111100       FIRST WORD;  #<IMMEDIATE>
00A006E6                          1275  *
00A006E6  0C04 0004               1276  EA1115   CMPI.B  #4,D4
00A006EA  6600 FF6A               1277           BNE     FE11           FERROR
00A006EE                          1278  
00A006EE  0807 000B               1279           BTST    #11,D7
00A006F2  6700 FF62               1280           BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
00A006F6                          1281  
00A006F6  1CFC 0023               1282           MOVE.B  #'#',(A6)+     IMMEDIATE
00A006FA                          1283  
00A006FA  122D FFFF               1284           MOVE.B  -1(A5),D1
00A006FE  0C01 004C               1285           CMPI.B  #'L',D1
00A00702  6724                    1286           BEQ.S   EA11155        LONG
00A00704                          1287  
00A00704  3034 3000               1288           MOVE.W  (A4,D3),D0
00A00708                          1289  
00A00708  0C01 0042               1290           CMPI.B  #'B',D1
00A0070C  6610                    1291           BNE.S   EA11153        .WORD
00A0070E                          1292  
00A0070E                          1293  * BYTE SIZE; DATA ALLOWED
00A0070E                          1294  *  0000 0000 XXXX XXXX
00A0070E                          1295  *  1111 1111 1XXX XXXX
00A0070E  2200                    1296           MOVE.L  D0,D1
00A00710  E049                    1297           LSR.W   #8,D1
00A00712  670A                    1298           BEQ.S   EA11153
00A00714  2200                    1299           MOVE.L  D0,D1
00A00716  EE41                    1300           ASR.W   #7,D1
00A00718  5241                    1301           ADDQ.W  #1,D1
00A0071A  6600 FF3A               1302           BNE     FE11           FERROR
00A0071E                          1303  
00A0071E  48C0                    1304  EA11153  EXT.L   D0
00A00720  6100 0A9A               1305           BSR     HEX2DEC
00A00724  5483                    1306           ADDQ.L  #2,D3
00A00726  4E75                    1307           RTS
00A00728                          1308  
00A00728  2034 3000               1309  EA11155  MOVE.L  (A4,D3),D0
00A0072C  6100 0A8E               1310           BSR     HEX2DEC
00A00730  5883                    1311           ADDQ.L  #4,D3          SIZE
00A00732  4E75                    1312           RTS
00A00734                          1313  
00A00734  1AFC 002E               1314  MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
00A00738  303C 4C57               1315           MOVE.W  #'LW',D0
00A0073C  0804 0006               1316           BTST    #6,D4
00A00740  6702                    1317           BEQ.S   MOVEMS2
00A00742  E048                    1318           LSR.W   #8,D0
00A00744  1AC0                    1319  MOVEMS2  MOVE.B  D0,(A5)+       SIZE
00A00746  4E75                    1320           RTS
00A00748                          1321  
00A00748                          1322  * MOVEM - REGISTER EXPANSION
00A00748                          1323  *
00A00748                          1324  MOVEMR   DS      0
00A00748  342C 0002               1325           MOVE.W  2(A4),D2       D2 = SECOND WORD
00A0074C  7020                    1326           MOVEQ   #$20,D0        D0 = SPACE
00A0074E  7E2F                    1327           MOVEQ   #$2F,D7        D7 = /
00A00750  538E                    1328           SUBQ.L  #1,A6          ADJUST STORE POINTER
00A00752  7A30                    1329           MOVEQ   #$30,D5        D5 = REGISTER #
00A00754  383C 4144               1330           MOVE.W  #'AD',D4       D4 = REG CLASS
00A00758                          1331  
00A00758  0302                    1332  MOVEMR11 BTST    D1,D2
00A0075A  6730                    1333           BEQ.S   MOVEMR77       BIT RESET
00A0075C                          1334  
00A0075C  B016                    1335           CMP.B   (A6),D0        BIT SET
00A0075E  6612                    1336           BNE.S   MOVEMR44       NOT SPACE
00A00760                          1337  
00A00760  1D44 0001               1338  MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
00A00764  1D45 0002               1339           MOVE.B  D5,2(A6)       REG #
00A00768  1D7C 002D 0003          1340           MOVE.B  #'-',3(A6)     -
00A0076E  568E                    1341           ADDQ.L  #3,A6
00A00770  602E                    1342           BRA.S   MOVEMR88
00A00772                          1343  
00A00772  0C16 002C               1344  MOVEMR44 CMPI.B  #',',(A6)
00A00776  67E8                    1345           BEQ     MOVEMR33       COMMA SEPARATOR
00A00778                          1346  
00A00778  BE16                    1347           CMP.B   (A6),D7        / SEPARATOR
00A0077A  67E4                    1348           BEQ     MOVEMR33
00A0077C                          1349  
00A0077C  1D44 0001               1350           MOVE.B  D4,1(A6)       REG TYPE
00A00780  1D45 0002               1351           MOVE.B  D5,2(A6)       REG #
00A00784  1D7C 002D 0003          1352           MOVE.B  #'-',3(A6)     - SEPARATOR
00A0078A  6014                    1353           BRA.S   MOVEMR88
00A0078C                          1354  
00A0078C  0C16 002C               1355  MOVEMR77 CMPI.B  #',',(A6)
00A00790  670E                    1356           BEQ.S   MOVEMR88       COMMA
00A00792                          1357  
00A00792  B016                    1358           CMP.B   (A6),D0
00A00794  670A                    1359           BEQ.S   MOVEMR88       SPACE
00A00796  B02E 0001               1360           CMP.B   1(A6),D0
00A0079A  6702                    1361           BEQ.S   MOVEMR79       SPACE
00A0079C  568E                    1362           ADDQ.L  #3,A6
00A0079E  1C87                    1363  MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
00A007A0                          1364  
00A007A0  5285                    1365  MOVEMR88 ADDQ.L  #1,D5
00A007A2  D286                    1366           ADD.L   D6,D1          D1 = BIT POSITION
00A007A4  0C05 0038               1367           CMPI.B  #'8',D5
00A007A8  66AE                    1368           BNE     MOVEMR11
00A007AA                          1369  
00A007AA  B016                    1370           CMP.B   (A6),D0        SPACE
00A007AC  670A                    1371           BEQ.S   MOVEMR94
00A007AE                          1372  
00A007AE  B02E 0001               1373           CMP.B   1(A6),D0       SPACE
00A007B2  6704                    1374           BEQ.S   MOVEMR94
00A007B4  568E                    1375           ADDQ.L  #3,A6
00A007B6  1C87                    1376           MOVE.B  D7,(A6)        /   SEPARATOR
00A007B8                          1377  
00A007B8  1A3C 0030               1378  MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
00A007BC  E04C                    1379           LSR.W   #8,D4          CHANGE REG TYPE
00A007BE  6698                    1380           BNE     MOVEMR11       MORE
00A007C0                          1381  
00A007C0  1C80                    1382           MOVE.B  D0,(A6)        SPACE
00A007C2  4E75                    1383           RTS
00A007C4                          1384  
00A007C4                          1385  DCODE68K DS      0
00A007C4  4E51 FFF0               1386           LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
00A007C8  48E9 1007 FFF0          1387           MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
00A007CE  49E9 FFF0               1388           LEA     DDATA(A1),A4        POINTS TO THE CODE.
00A007D2                          1389  
00A007D2  264D                    1390           MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
00A007D4  7050                    1391           MOVEQ   #BUFSIZE,D0
00A007D6  2C4B                    1392           MOVE.L  A3,A6
00A007D8  1CFC 0020               1393  DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
00A007DC  5380                    1394           SUBQ.L  #1,D0
00A007DE  66F8                    1395           BNE     DEC311
00A007E0                          1396  
00A007E0  2C4B                    1397           MOVE.L  A3,A6          FORMAT ADDRESS
00A007E2  2029 FFFC               1398           MOVE.L  HISPC(A1),D0
00A007E6  6100 0A6E               1399           BSR     FRELADDR
00A007EA                          1400  
00A007EA                          1401  * CHECK FOR KNOWN ILLEGAL CODES
00A007EA  3014                    1402           MOVE.W  (A4),D0
00A007EC                          1403  
00A007EC  4BFA 00C6               1404           LEA     KI(PC),A5
00A007F0  2C4D                    1405           MOVE.L  A5,A6
00A007F2  DDFC 00000002           1406           ADD.L   #KIEND-KI,A6
00A007F8  B05D                    1407  DEC404   CMP.W   (A5)+,D0
00A007FA  671A                    1408           BEQ.S   FE12           FERROR;  ILLEGAL CODE
00A007FC  BBCE                    1409           CMP.L   A6,A5
00A007FE  66F8                    1410           BNE     DEC404
00A00800                          1411  
00A00800                          1412  * LOOK FOR MATCH OF OP-CODE
00A00800                          1413  *
00A00800  4BFA 00B4               1414           LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
00A00804  4DFA 02BA               1415           LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
00A00808  3014                    1416  DEC411   MOVE.W  (A4),D0        FIRST WORD
00A0080A  C05D                    1417           AND.W   (A5)+,D0       MASK
00A0080C  B05D                    1418           CMP.W   (A5)+,D0
00A0080E  6708                    1419           BEQ.S   DEC425         FOUND MATCH
00A00810  548D                    1420           ADDQ.L  #2,A5          UPDATE POINTER
00A00812  BBCE                    1421           CMP.L   A6,A5
00A00814  66F2                    1422           BNE     DEC411         MORE TABLE
00A00816  6072                    1423  FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
00A00818                          1424  
00A00818  4286                    1425  DEC425   CLR.L   D6
00A0081A  1C1D                    1426           MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
00A0081C  E58E                    1427           LSL.L   #2,D6
00A0081E                          1428  
00A0081E  4287                    1429           CLR.L   D7
00A00820  1E1D                    1430           MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
00A00822                          1431  
00A00822                          1432  * MOVE OP-CODE TO BUFFER
00A00822                          1433  *
00A00822  41FA 029C               1434           LEA     OPCTBL(PC),A0
00A00826  4A47                    1435  DEC510   TST     D7
00A00828  6708                    1436           BEQ.S   DEC530         AT INDEX
00A0082A  4A18                    1437  DEC515   TST.B   (A0)+
00A0082C  6AFC                    1438           BPL     DEC515         MOVE THROUGH FIELD
00A0082E  5387                    1439           SUBQ.L  #1,D7
00A00830  60F4                    1440           BRA     DEC510
00A00832                          1441  
00A00832  701F                    1442  DEC530   MOVEQ   #FOC,D0
00A00834  4BF3 0000               1443           LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
00A00838  1018                    1444  DEC535   MOVE.B  (A0)+,D0
00A0083A  0880 0007               1445           BCLR    #7,D0
00A0083E  6604                    1446           BNE.S   DEC537         END OF MOVE
00A00840  1AC0                    1447           MOVE.B  D0,(A5)+
00A00842  60F4                    1448           BRA     DEC535
00A00844  1AC0                    1449  DEC537   MOVE.B  D0,(A5)+
00A00846                          1450  
00A00846                          1451  * CALCULATE GOTO AND GO
00A00846                          1452  *
00A00846  7602                    1453           MOVEQ   #2,D3          D3= SIZE
00A00848  41FA F7CA               1454           LEA     X(PC),A0
00A0084C  D1C6                    1455           ADD.L   D6,A0
00A0084E                          1456  
00A0084E  7027                    1457           MOVEQ   #FOP,D0
00A00850  4DF3 0000               1458           LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
00A00854                          1459  
00A00854  3814                    1460           MOVE.W  (A4),D4        D4 = FIRST WORD
00A00856                          1461  
00A00856  1A3C 002C               1462           MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
00A0085A                          1463  
00A0085A  3E3C 01FD               1464           MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
00A0085E                          1465  
00A0085E  4ED0                    1466           JMP     (A0)
00A00860                          1467  *
00A00860                          1468  *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
00A00860                          1469  *  A5 = POINTER STORE OP-CODE
00A00860                          1470  *  A6 = POINTER STORE OPERAND
00A00860                          1471  *  D3 = SIZE = 2 BYTES
00A00860                          1472  *  D4 = FIRST WORD
00A00860                          1473  *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
00A00860                          1474  
00A00860  5483                    1475  COMMON4  ADDQ.L  #2,D3          SIZE = 4
00A00862                          1476  
00A00862  2C03                    1477  COMMON   MOVE.L  D3,D6          D6 = SIZE
00A00864  1CFC 0020               1478           MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
00A00868                          1479  
00A00868  2A4E                    1480           MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
00A0086A  700A                    1481           MOVEQ   #FDATA,D0
00A0086C  4DF3 0000               1482           LEA.L   (A3,D0),A6
00A00870                          1483  
00A00870  301C                    1484  COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
00A00872  54A9 FFFC               1485           ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
00A00876  6100 09BA               1486           BSR     PNT4HX         FORMAT DATA. (A6)+
00A0087A  5503                    1487           SUBQ.B  #2,D3
00A0087C  66F2                    1488           BNE     COMMON35
00A0087E                          1489  
00A0087E  2C4D                    1490           MOVE.L  A5,A6          A6 = RESTORE END POINTER
00A00880                          1491  
00A00880  2A4B                    1492           MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
00A00882                          1493  
00A00882  2869 FFFC               1494           MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
00A00886  4E59                    1495           UNLK    A1               TO A4 AND UNDO FRAME.
00A00888                          1496  
00A00888  4E75                    1497           RTS
00A0088A                          1498  
00A0088A                          1499  
00A0088A                          1500  FERROR   DS      0
00A0088A                          1501  * ILLEGAL INSTRUCTION
00A0088A                          1502  *
00A0088A  701F                    1503           MOVEQ   #FOC,D0
00A0088C  4DF3 0000               1504           LEA.L   (A3,D0),A6
00A00890  4BFA 0018               1505           LEA     MSG111(PC),A5
00A00894  101D                    1506  FERROR35 MOVE.B  (A5)+,D0
00A00896  0C00 0004               1507           CMPI.B  #EOT,D0
00A0089A  6704                    1508           BEQ.S   FERROR39
00A0089C  1CC0                    1509           MOVE.B  D0,(A6)+
00A0089E  60F4                    1510           BRA     FERROR35
00A008A0                          1511  FERROR39 DS      0
00A008A0                          1512  
00A008A0  3014                    1513           MOVE.W  (A4),D0
00A008A2  6100 098E               1514           BSR     PNT4HX
00A008A6                          1515  
00A008A6  7602                    1516           MOVEQ   #2,D3          SIZE
00A008A8                          1517  
00A008A8  60B8                    1518           BRA     COMMON
00A008AA                          1519  
00A008AA= 44 43 2E 57 20 20 20    1520  MSG111   DC.B    'DC.W    $',EOT
          20 24 04              
00A008B4                          1522  
00A008B4                          1523  
00A008B4                          1524  
00A008B4= 4AFB                    1525  KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
00A008B6                          1526  KIEND    DS      0
00A008B6                          1527  
00A008B6                          1528  
00A008B6                          1529  *  \1   MASK
00A008B6                          1530  *  \2   OP-CODE PATTERN
00A008B6                          1531  *  \3   GOTO OFFSET
00A008B6                          1532  *  \4   INDEX TO OP-CODE
00A008B6                          1533  C68      MACRO
00A008B6                          1534           DC.W    $\1
00A008B6                          1535           DC.W    $\2
00A008B6                          1536           DC.B    (\3-X)>>2
00A008B6                          1537           DC.B    \4
00A008B6                          1538           ENDM
00A008B6                          1539  
00A008B6                          1540  TBL      DS      0
00A008B6                          1541m          C68     FEC0,E6C0,ISHIFT,56           RO
00A008B6= FEC0                    1542m          DC.W    $FEC0
00A008B8= E6C0                    1543m          DC.W    $E6C0
00A008BA= F7                      1544m          DC.B    (ISHIFT-X)>>2
00A008BB= 38                      1545m          DC.B    56
00A008BC                          1546m          ENDM
00A008BC                          1547m          C68     FEC0,E4C0,ISHIFT,57           ROX
00A008BC= FEC0                    1548m          DC.W    $FEC0
00A008BE= E4C0                    1549m          DC.W    $E4C0
00A008C0= F7                      1550m          DC.B    (ISHIFT-X)>>2
00A008C1= 39                      1551m          DC.B    57
00A008C2                          1552m          ENDM
00A008C2                          1553m          C68     FEC0,E2C0,ISHIFT,55           LS
00A008C2= FEC0                    1554m          DC.W    $FEC0
00A008C4= E2C0                    1555m          DC.W    $E2C0
00A008C6= F7                      1556m          DC.B    (ISHIFT-X)>>2
00A008C7= 37                      1557m          DC.B    55
00A008C8                          1558m          ENDM
00A008C8                          1559m          C68     FEC0,E0C0,ISHIFT,54           AS
00A008C8= FEC0                    1560m          DC.W    $FEC0
00A008CA= E0C0                    1561m          DC.W    $E0C0
00A008CC= F7                      1562m          DC.B    (ISHIFT-X)>>2
00A008CD= 36                      1563m          DC.B    54
00A008CE                          1564m          ENDM
00A008CE                          1565m          C68     F018,E018,ISHIFT,56           RO
00A008CE= F018                    1566m          DC.W    $F018
00A008D0= E018                    1567m          DC.W    $E018
00A008D2= F7                      1568m          DC.B    (ISHIFT-X)>>2
00A008D3= 38                      1569m          DC.B    56
00A008D4                          1570m          ENDM
00A008D4                          1571m          C68     F018,E010,ISHIFT,57           ROX
00A008D4= F018                    1572m          DC.W    $F018
00A008D6= E010                    1573m          DC.W    $E010
00A008D8= F7                      1574m          DC.B    (ISHIFT-X)>>2
00A008D9= 39                      1575m          DC.B    57
00A008DA                          1576m          ENDM
00A008DA                          1577m          C68     F018,E008,ISHIFT,55           LS
00A008DA= F018                    1578m          DC.W    $F018
00A008DC= E008                    1579m          DC.W    $E008
00A008DE= F7                      1580m          DC.B    (ISHIFT-X)>>2
00A008DF= 37                      1581m          DC.B    55
00A008E0                          1582m          ENDM
00A008E0                          1583m          C68     F018,E000,ISHIFT,54           AS
00A008E0= F018                    1584m          DC.W    $F018
00A008E2= E000                    1585m          DC.W    $E000
00A008E4= F7                      1586m          DC.B    (ISHIFT-X)>>2
00A008E5= 36                      1587m          DC.B    54
00A008E6                          1588m          ENDM
00A008E6                          1589m          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
00A008E6= F0C0                    1590m          DC.W    $F0C0
00A008E8= D0C0                    1591m          DC.W    $D0C0
00A008EA= 5E                      1592m          DC.B    (FORM10EX-X)>>2
00A008EB= 04                      1593m          DC.B    4
00A008EC                          1594m          ENDM
00A008EC                          1595m          C68     F130,D100,FORM12,53           ADDX
00A008EC= F130                    1596m          DC.W    $F130
00A008EE= D100                    1597m          DC.W    $D100
00A008F0= 88                      1598m          DC.B    (FORM12-X)>>2
00A008F1= 35                      1599m          DC.B    53
00A008F2                          1600m          ENDM
00A008F2                          1601m          C68     F000,D000,FORM10EX,4            ADD
00A008F2= F000                    1602m          DC.W    $F000
00A008F4= D000                    1603m          DC.W    $D000
00A008F6= 5E                      1604m          DC.B    (FORM10EX-X)>>2
00A008F7= 04                      1605m          DC.B    4
00A008F8                          1606m          ENDM
00A008F8                          1607m          C68     F1F8,C188,FORM9,50            EXG
00A008F8= F1F8                    1608m          DC.W    $F1F8
00A008FA= C188                    1609m          DC.W    $C188
00A008FC= 5B                      1610m          DC.B    (FORM9-X)>>2
00A008FD= 32                      1611m          DC.B    50
00A008FE                          1612m          ENDM
00A008FE                          1613m          C68     F1F8,C148,FORM8,50            EXG
00A008FE= F1F8                    1614m          DC.W    $F1F8
00A00900= C148                    1615m          DC.W    $C148
00A00902= 57                      1616m          DC.B    (FORM8-X)>>2
00A00903= 32                      1617m          DC.B    50
00A00904                          1618m          ENDM
00A00904                          1619m          C68     F1F8,C140,FORM7,50            EXG
00A00904= F1F8                    1620m          DC.W    $F1F8
00A00906= C140                    1621m          DC.W    $C140
00A00908= 54                      1622m          DC.B    (FORM7-X)>>2
00A00909= 32                      1623m          DC.B    50
00A0090A                          1624m          ENDM
00A0090A                          1625m          C68     F1F0,C100,FORM12,49           ABCD
00A0090A= F1F0                    1626m          DC.W    $F1F0
00A0090C= C100                    1627m          DC.W    $C100
00A0090E= 88                      1628m          DC.B    (FORM12-X)>>2
00A0090F= 31                      1629m          DC.B    49
00A00910                          1630m          ENDM
00A00910                          1631m          C68     F1C0,C1C0,FORM6D,48           MULS
00A00910= F1C0                    1632m          DC.W    $F1C0
00A00912= C1C0                    1633m          DC.W    $C1C0
00A00914= 4A                      1634m          DC.B    (FORM6D-X)>>2
00A00915= 30                      1635m          DC.B    48
00A00916                          1636m          ENDM
00A00916                          1637m          C68     F1C0,C0C0,FORM6D,47           MULU
00A00916= F1C0                    1638m          DC.W    $F1C0
00A00918= C0C0                    1639m          DC.W    $C0C0
00A0091A= 4A                      1640m          DC.B    (FORM6D-X)>>2
00A0091B= 2F                      1641m          DC.B    47
00A0091C                          1642m          ENDM
00A0091C                          1643m          C68     F000,C000,FORM10,2            AND
00A0091C= F000                    1644m          DC.W    $F000
00A0091E= C000                    1645m          DC.W    $C000
00A00920= 6E                      1646m          DC.B    (FORM10-X)>>2
00A00921= 02                      1647m          DC.B    2
00A00922                          1648m          ENDM
00A00922                          1649m          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
00A00922= F0C0                    1650m          DC.W    $F0C0
00A00924= B0C0                    1651m          DC.W    $B0C0
00A00926= 5E                      1652m          DC.B    (FORM10EX-X)>>2
00A00927= 06                      1653m          DC.B    6
00A00928                          1654m          ENDM
00A00928                          1655m          C68     F138,B108,FORM12A,46           CMPM
00A00928= F138                    1656m          DC.W    $F138
00A0092A= B108                    1657m          DC.W    $B108
00A0092C= 97                      1658m          DC.B    (FORM12A-X)>>2
00A0092D= 2E                      1659m          DC.B    46
00A0092E                          1660m          ENDM
00A0092E                          1661m          C68     F100,B100,FORM10,5            EOR
00A0092E= F100                    1662m          DC.W    $F100
00A00930= B100                    1663m          DC.W    $B100
00A00932= 6E                      1664m          DC.B    (FORM10-X)>>2
00A00933= 05                      1665m          DC.B    5
00A00934                          1666m          ENDM
00A00934                          1667m          C68     F000,B000,FORM10EX,6            CMP
00A00934= F000                    1668m          DC.W    $F000
00A00936= B000                    1669m          DC.W    $B000
00A00938= 5E                      1670m          DC.B    (FORM10EX-X)>>2
00A00939= 06                      1671m          DC.B    6
00A0093A                          1672m          ENDM
00A0093A                          1673m          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
00A0093A= F0C0                    1674m          DC.W    $F0C0
00A0093C= 90C0                    1675m          DC.W    $90C0
00A0093E= 5E                      1676m          DC.B    (FORM10EX-X)>>2
00A0093F= 2C                      1677m          DC.B    44
00A00940                          1678m          ENDM
00A00940                          1679m          C68     F130,9100,FORM12,45           SUBX
00A00940= F130                    1680m          DC.W    $F130
00A00942= 9100                    1681m          DC.W    $9100
00A00944= 88                      1682m          DC.B    (FORM12-X)>>2
00A00945= 2D                      1683m          DC.B    45
00A00946                          1684m          ENDM
00A00946                          1685m          C68     F000,9000,FORM10EX,44           SUB
00A00946= F000                    1686m          DC.W    $F000
00A00948= 9000                    1687m          DC.W    $9000
00A0094A= 5E                      1688m          DC.B    (FORM10EX-X)>>2
00A0094B= 2C                      1689m          DC.B    44
00A0094C                          1690m          ENDM
00A0094C                          1691m          C68     F1F0,8100,FORM12,43           SBCD
00A0094C= F1F0                    1692m          DC.W    $F1F0
00A0094E= 8100                    1693m          DC.W    $8100
00A00950= 88                      1694m          DC.B    (FORM12-X)>>2
00A00951= 2B                      1695m          DC.B    43
00A00952                          1696m          ENDM
00A00952                          1697m          C68     F1C0,81C0,FORM6D,42           DIVS
00A00952= F1C0                    1698m          DC.W    $F1C0
00A00954= 81C0                    1699m          DC.W    $81C0
00A00956= 4A                      1700m          DC.B    (FORM6D-X)>>2
00A00957= 2A                      1701m          DC.B    42
00A00958                          1702m          ENDM
00A00958                          1703m          C68     F1C0,80C0,FORM6D,41           DIVU
00A00958= F1C0                    1704m          DC.W    $F1C0
00A0095A= 80C0                    1705m          DC.W    $80C0
00A0095C= 4A                      1706m          DC.B    (FORM6D-X)>>2
00A0095D= 29                      1707m          DC.B    41
00A0095E                          1708m          ENDM
00A0095E                          1709m          C68     F000,8000,FORM10,40           OR
00A0095E= F000                    1710m          DC.W    $F000
00A00960= 8000                    1711m          DC.W    $8000
00A00962= 6E                      1712m          DC.B    (FORM10-X)>>2
00A00963= 28                      1713m          DC.B    40
00A00964                          1714m          ENDM
00A00964                          1715m          C68     F100,7000,IMOVEQ,39           MOVEQ
00A00964= F100                    1716m          DC.W    $F100
00A00966= 7000                    1717m          DC.W    $7000
00A00968= A2                      1718m          DC.B    (IMOVEQ-X)>>2
00A00969= 27                      1719m          DC.B    39
00A0096A                          1720m          ENDM
00A0096A                          1721m          C68     FF00,6100,IBSR,51             BSR
00A0096A= FF00                    1722m          DC.W    $FF00
00A0096C= 6100                    1723m          DC.W    $6100
00A0096E= DE                      1724m          DC.B    (IBSR-X)>>2
00A0096F= 33                      1725m          DC.B    51
00A00970                          1726m          ENDM
00A00970                          1727m          C68     FF00,6000,IBSR,65             BRA
00A00970= FF00                    1728m          DC.W    $FF00
00A00972= 6000                    1729m          DC.W    $6000
00A00974= DE                      1730m          DC.B    (IBSR-X)>>2
00A00975= 41                      1731m          DC.B    65
00A00976                          1732m          ENDM
00A00976                          1733m          C68     F000,6000,ICC,38              B
00A00976= F000                    1734m          DC.W    $F000
00A00978= 6000                    1735m          DC.W    $6000
00A0097A= DD                      1736m          DC.B    (ICC-X)>>2
00A0097B= 26                      1737m          DC.B    38
00A0097C                          1738m          ENDM
00A0097C                          1739m          C68     F0F8,50C8,IDBCC,37              DB
00A0097C= F0F8                    1740m          DC.W    $F0F8
00A0097E= 50C8                    1741m          DC.W    $50C8
00A00980= D8                      1742m          DC.B    (IDBCC-X)>>2
00A00981= 25                      1743m          DC.B    37
00A00982                          1744m          ENDM
00A00982                          1745m          C68     F0C0,50C0,ISCC,36             S
00A00982= F0C0                    1746m          DC.W    $F0C0
00A00984= 50C0                    1747m          DC.W    $50C0
00A00986= D5                      1748m          DC.B    (ISCC-X)>>2
00A00987= 24                      1749m          DC.B    36
00A00988                          1750m          ENDM
00A00988                          1751m          C68     F100,5100,IQUICK,35           SUBQ
00A00988= F100                    1752m          DC.W    $F100
00A0098A= 5100                    1753m          DC.W    $5100
00A0098C= A1                      1754m          DC.B    (IQUICK-X)>>2
00A0098D= 23                      1755m          DC.B    35
00A0098E                          1756m          ENDM
00A0098E                          1757m          C68     F100,5000,IQUICK,34           ADDQ
00A0098E= F100                    1758m          DC.W    $F100
00A00990= 5000                    1759m          DC.W    $5000
00A00992= A1                      1760m          DC.B    (IQUICK-X)>>2
00A00993= 22                      1761m          DC.B    34
00A00994                          1762m          ENDM
00A00994                          1763m          C68     F1C0,41C0,FORM6A,33           LEA
00A00994= F1C0                    1764m          DC.W    $F1C0
00A00996= 41C0                    1765m          DC.W    $41C0
00A00998= 46                      1766m          DC.B    (FORM6A-X)>>2
00A00999= 21                      1767m          DC.B    33
00A0099A                          1768m          ENDM
00A0099A                          1769m          C68     F1C0,4180,FORM6D,32           CHK
00A0099A= F1C0                    1770m          DC.W    $F1C0
00A0099C= 4180                    1771m          DC.W    $4180
00A0099E= 4A                      1772m          DC.B    (FORM6D-X)>>2
00A0099F= 20                      1773m          DC.B    32
00A009A0                          1774m          ENDM
00A009A0                          1775m          C68     FFC0,4EC0,FORM11SL,31         JMP
00A009A0= FFC0                    1776m          DC.W    $FFC0
00A009A2= 4EC0                    1777m          DC.W    $4EC0
00A009A4= 7F                      1778m          DC.B    (FORM11SL-X)>>2
00A009A5= 1F                      1779m          DC.B    31
00A009A6                          1780m          ENDM
00A009A6                          1781m          C68     FFC0,4E80,FORM11SL,30         JSR
00A009A6= FFC0                    1782m          DC.W    $FFC0
00A009A8= 4E80                    1783m          DC.W    $4E80
00A009AA= 7F                      1784m          DC.B    (FORM11SL-X)>>2
00A009AB= 1E                      1785m          DC.B    30
00A009AC                          1786m          ENDM
00A009AC                          1787m          C68     FFFF,4E77,SCOMMON,29           RTR
00A009AC= FFFF                    1788m          DC.W    $FFFF
00A009AE= 4E77                    1789m          DC.W    $4E77
00A009B0= D4                      1790m          DC.B    (SCOMMON-X)>>2
00A009B1= 1D                      1791m          DC.B    29
00A009B2                          1792m          ENDM
00A009B2                          1793m          C68     FFFF,4E76,SCOMMON,28           TRAPV
00A009B2= FFFF                    1794m          DC.W    $FFFF
00A009B4= 4E76                    1795m          DC.W    $4E76
00A009B6= D4                      1796m          DC.B    (SCOMMON-X)>>2
00A009B7= 1C                      1797m          DC.B    28
00A009B8                          1798m          ENDM
00A009B8                          1799m          C68     FFFF,4E75,SCOMMON,27           RTS
00A009B8= FFFF                    1800m          DC.W    $FFFF
00A009BA= 4E75                    1801m          DC.W    $4E75
00A009BC= D4                      1802m          DC.B    (SCOMMON-X)>>2
00A009BD= 1B                      1803m          DC.B    27
00A009BE                          1804m          ENDM
00A009BE                          1805m          C68     FFFF,4E73,SCOMMON,26           RTE
00A009BE= FFFF                    1806m          DC.W    $FFFF
00A009C0= 4E73                    1807m          DC.W    $4E73
00A009C2= D4                      1808m          DC.B    (SCOMMON-X)>>2
00A009C3= 1A                      1809m          DC.B    26
00A009C4                          1810m          ENDM
00A009C4                          1811m          C68     FFFF,4E72,ISTOP,25             STOP
00A009C4= FFFF                    1812m          DC.W    $FFFF
00A009C6= 4E72                    1813m          DC.W    $4E72
00A009C8= 13                      1814m          DC.B    (ISTOP-X)>>2
00A009C9= 19                      1815m          DC.B    25
00A009CA                          1816m          ENDM
00A009CA                          1817m          C68     FFFF,4E71,SCOMMON,24           NOP
00A009CA= FFFF                    1818m          DC.W    $FFFF
00A009CC= 4E71                    1819m          DC.W    $4E71
00A009CE= D4                      1820m          DC.B    (SCOMMON-X)>>2
00A009CF= 18                      1821m          DC.B    24
00A009D0                          1822m          ENDM
00A009D0                          1823m          C68     FFFF,4E70,SCOMMON,23           RESET
00A009D0= FFFF                    1824m          DC.W    $FFFF
00A009D2= 4E70                    1825m          DC.W    $4E70
00A009D4= D4                      1826m          DC.B    (SCOMMON-X)>>2
00A009D5= 17                      1827m          DC.B    23
00A009D6                          1828m          ENDM
00A009D6                          1829m          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
00A009D6= FFF8                    1830m          DC.W    $FFF8
00A009D8= 4E68                    1831m          DC.W    $4E68
00A009DA= AE                      1832m          DC.B    (IMVFUSP-X)>>2
00A009DB= 3C                      1833m          DC.B    60
00A009DC                          1834m          ENDM
00A009DC                          1835m          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
00A009DC= FFF8                    1836m          DC.W    $FFF8
00A009DE= 4E60                    1837m          DC.W    $4E60
00A009E0= B7                      1838m          DC.B    (IMVTUSP-X)>>2
00A009E1= 3C                      1839m          DC.B    60
00A009E2                          1840m          ENDM
00A009E2                          1841m          C68     FFF8,4E58,FORM5,22            UNLINK
00A009E2= FFF8                    1842m          DC.W    $FFF8
00A009E4= 4E58                    1843m          DC.W    $4E58
00A009E6= 45                      1844m          DC.B    (FORM5-X)>>2
00A009E7= 16                      1845m          DC.B    22
00A009E8                          1846m          ENDM
00A009E8                          1847m          C68     FFF8,4E50,ILINK,21            LINK
00A009E8= FFF8                    1848m          DC.W    $FFF8
00A009EA= 4E50                    1849m          DC.W    $4E50
00A009EC= 36                      1850m          DC.B    (ILINK-X)>>2
00A009ED= 15                      1851m          DC.B    21
00A009EE                          1852m          ENDM
00A009EE                          1853m          C68     FFF0,4E40,FORM4,20            TRAP
00A009EE= FFF0                    1854m          DC.W    $FFF0
00A009F0= 4E40                    1855m          DC.W    $4E40
00A009F2= 40                      1856m          DC.B    (FORM4-X)>>2
00A009F3= 14                      1857m          DC.B    20
00A009F4                          1858m          ENDM
00A009F4                          1859m          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
00A009F4= FF80                    1860m          DC.W    $FF80
00A009F6= 4C80                    1861m          DC.W    $4C80
00A009F8= 0C                      1862m          DC.B    (IMOVEMTR-X)>>2
00A009F9= 0F                      1863m          DC.B    15
00A009FA                          1864m          ENDM
00A009FA                          1865m          C68     FFC0,4AC0,FORM1A,19           TAS
00A009FA= FFC0                    1866m          DC.W    $FFC0
00A009FC= 4AC0                    1867m          DC.W    $4AC0
00A009FE= 3D                      1868m          DC.B    (FORM1A-X)>>2
00A009FF= 13                      1869m          DC.B    19
00A00A00                          1870m          ENDM
00A00A00                          1871m          C68     FF00,4A00,FORM1,18            TST
00A00A00= FF00                    1872m          DC.W    $FF00
00A00A02= 4A00                    1873m          DC.W    $4A00
00A00A04= 3C                      1874m          DC.B    (FORM1-X)>>2
00A00A05= 12                      1875m          DC.B    18
00A00A06                          1876m          ENDM
00A00A06                          1877m          C68     FFF8,48C0,FORM3,17            EXT.L
00A00A06= FFF8                    1878m          DC.W    $FFF8
00A00A08= 48C0                    1879m          DC.W    $48C0
00A00A0A= 3F                      1880m          DC.B    (FORM3-X)>>2
00A00A0B= 11                      1881m          DC.B    17
00A00A0C                          1882m          ENDM
00A00A0C                          1883m          C68     FFF8,4880,FORM3,16            EXT.W
00A00A0C= FFF8                    1884m          DC.W    $FFF8
00A00A0E= 4880                    1885m          DC.W    $4880
00A00A10= 3F                      1886m          DC.B    (FORM3-X)>>2
00A00A11= 10                      1887m          DC.B    16
00A00A12                          1888m          ENDM
00A00A12                          1889m          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
00A00A12= FF80                    1890m          DC.W    $FF80
00A00A14= 4880                    1891m          DC.W    $4880
00A00A16= 00                      1892m          DC.B    (IMOVEMFR-X)>>2
00A00A17= 0F                      1893m          DC.B    15
00A00A18                          1894m          ENDM
00A00A18                          1895m          C68     FFF8,4840,FORM3,14            SWAP
00A00A18= FFF8                    1896m          DC.W    $FFF8
00A00A1A= 4840                    1897m          DC.W    $4840
00A00A1C= 3F                      1898m          DC.B    (FORM3-X)>>2
00A00A1D= 0E                      1899m          DC.B    14
00A00A1E                          1900m          ENDM
00A00A1E                          1901m          C68     FFC0,4840,FORM11,13           PEA
00A00A1E= FFC0                    1902m          DC.W    $FFC0
00A00A20= 4840                    1903m          DC.W    $4840
00A00A22= 7C                      1904m          DC.B    (FORM11-X)>>2
00A00A23= 0D                      1905m          DC.B    13
00A00A24                          1906m          ENDM
00A00A24                          1907m          C68     FFC0,4800,FORM1A,12           NBCD
00A00A24= FFC0                    1908m          DC.W    $FFC0
00A00A26= 4800                    1909m          DC.W    $4800
00A00A28= 3D                      1910m          DC.B    (FORM1A-X)>>2
00A00A29= 0C                      1911m          DC.B    12
00A00A2A                          1912m          ENDM
00A00A2A                          1913m          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
00A00A2A= FFC0                    1914m          DC.W    $FFC0
00A00A2C= 46C0                    1915m          DC.W    $46C0
00A00A2E= B2                      1916m          DC.B    (IMVTSR-X)>>2
00A00A2F= 3B                      1917m          DC.B    59
00A00A30                          1918m          ENDM
00A00A30                          1919m          C68     FF00,4600,FORM1,11            NOT
00A00A30= FF00                    1920m          DC.W    $FF00
00A00A32= 4600                    1921m          DC.W    $4600
00A00A34= 3C                      1922m          DC.B    (FORM1-X)>>2
00A00A35= 0B                      1923m          DC.B    11
00A00A36                          1924m          ENDM
00A00A36                          1925m          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
00A00A36= FFC0                    1926m          DC.W    $FFC0
00A00A38= 44C0                    1927m          DC.W    $44C0
00A00A3A= BA                      1928m          DC.B    (IMVTCCR-X)>>2
00A00A3B= 3B                      1929m          DC.B    59
00A00A3C                          1930m          ENDM
00A00A3C                          1931m          C68     FF00,4400,FORM1,10            NEG
00A00A3C= FF00                    1932m          DC.W    $FF00
00A00A3E= 4400                    1933m          DC.W    $4400
00A00A40= 3C                      1934m          DC.B    (FORM1-X)>>2
00A00A41= 0A                      1935m          DC.B    10
00A00A42                          1936m          ENDM
00A00A42                          1937m          C68     FF00,4200,FORM1,9             CLR
00A00A42= FF00                    1938m          DC.W    $FF00
00A00A44= 4200                    1939m          DC.W    $4200
00A00A46= 3C                      1940m          DC.B    (FORM1-X)>>2
00A00A47= 09                      1941m          DC.B    9
00A00A48                          1942m          ENDM
00A00A48                          1943m          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
00A00A48= FFC0                    1944m          DC.W    $FFC0
00A00A4A= 40C0                    1945m          DC.W    $40C0
00A00A4C= AA                      1946m          DC.B    (IMVFSR-X)>>2
00A00A4D= 3B                      1947m          DC.B    59
00A00A4E                          1948m          ENDM
00A00A4E                          1949m          C68     FF00,4000,FORM1,8             NEGX
00A00A4E= FF00                    1950m          DC.W    $FF00
00A00A50= 4000                    1951m          DC.W    $4000
00A00A52= 3C                      1952m          DC.B    (FORM1-X)>>2
00A00A53= 08                      1953m          DC.B    8
00A00A54                          1954m          ENDM
00A00A54                          1955m          C68     F000,3000,IMOVE,59            MOVE.W
00A00A54= F000                    1956m          DC.W    $F000
00A00A56= 3000                    1957m          DC.W    $3000
00A00A58= 35                      1958m          DC.B    (IMOVE-X)>>2
00A00A59= 3B                      1959m          DC.B    59
00A00A5A                          1960m          ENDM
00A00A5A                          1961m          C68     F000,2000,IMOVE,60            MOVE.L
00A00A5A= F000                    1962m          DC.W    $F000
00A00A5C= 2000                    1963m          DC.W    $2000
00A00A5E= 35                      1964m          DC.B    (IMOVE-X)>>2
00A00A5F= 3C                      1965m          DC.B    60
00A00A60                          1966m          ENDM
00A00A60                          1967m          C68     F000,1000,IMOVE,58            MOVE.B
00A00A60= F000                    1968m          DC.W    $F000
00A00A62= 1000                    1969m          DC.W    $1000
00A00A64= 35                      1970m          DC.B    (IMOVE-X)>>2
00A00A65= 3A                      1971m          DC.B    58
00A00A66                          1972m          ENDM
00A00A66                          1973m          C68     FF00,0C00,IMMED,6             CMP       #
00A00A66= FF00                    1974m          DC.W    $FF00
00A00A68= 0C00                    1975m          DC.W    $0C00
00A00A6A= 18                      1976m          DC.B    (IMMED-X)>>2
00A00A6B= 06                      1977m          DC.B    6
00A00A6C                          1978m          ENDM
00A00A6C                          1979m          C68     FF00,0A00,IMMED,5             EOR       #
00A00A6C= FF00                    1980m          DC.W    $FF00
00A00A6E= 0A00                    1981m          DC.W    $0A00
00A00A70= 18                      1982m          DC.B    (IMMED-X)>>2
00A00A71= 05                      1983m          DC.B    5
00A00A72                          1984m          ENDM
00A00A72                          1985m          C68     FF00,0600,IMMED,4             ADD       #
00A00A72= FF00                    1986m          DC.W    $FF00
00A00A74= 0600                    1987m          DC.W    $0600
00A00A76= 18                      1988m          DC.B    (IMMED-X)>>2
00A00A77= 04                      1989m          DC.B    4
00A00A78                          1990m          ENDM
00A00A78                          1991m          C68     FF00,0400,IMMED,3             SUB       #
00A00A78= FF00                    1992m          DC.W    $FF00
00A00A7A= 0400                    1993m          DC.W    $0400
00A00A7C= 18                      1994m          DC.B    (IMMED-X)>>2
00A00A7D= 03                      1995m          DC.B    3
00A00A7E                          1996m          ENDM
00A00A7E                          1997m          C68     FF00,0200,IMMED,2             AND       #
00A00A7E= FF00                    1998m          DC.W    $FF00
00A00A80= 0200                    1999m          DC.W    $0200
00A00A82= 18                      2000m          DC.B    (IMMED-X)>>2
00A00A83= 02                      2001m          DC.B    2
00A00A84                          2002m          ENDM
00A00A84                          2003m          C68     FF00,0000,IMMED,1             OR        #
00A00A84= FF00                    2004m          DC.W    $FF00
00A00A86= 0000                    2005m          DC.W    $0000
00A00A88= 18                      2006m          DC.B    (IMMED-X)>>2
00A00A89= 01                      2007m          DC.B    1
00A00A8A                          2008m          ENDM
00A00A8A                          2009m          C68     F138,0108,IMOVEP,0            MOVEP
00A00A8A= F138                    2010m          DC.W    $F138
00A00A8C= 0108                    2011m          DC.W    $0108
00A00A8E= BE                      2012m          DC.B    (IMOVEP-X)>>2
00A00A8F= 00                      2013m          DC.B    0
00A00A90                          2014m          ENDM
00A00A90                          2015m          C68     FFC0,08C0,ISETS,64            BSET
00A00A90= FFC0                    2016m          DC.W    $FFC0
00A00A92= 08C0                    2017m          DC.W    $08C0
00A00A94= F0                      2018m          DC.B    (ISETS-X)>>2
00A00A95= 40                      2019m          DC.B    64
00A00A96                          2020m          ENDM
00A00A96                          2021m          C68     FFC0,0880,ISETS,63            BCLR
00A00A96= FFC0                    2022m          DC.W    $FFC0
00A00A98= 0880                    2023m          DC.W    $0880
00A00A9A= F0                      2024m          DC.B    (ISETS-X)>>2
00A00A9B= 3F                      2025m          DC.B    63
00A00A9C                          2026m          ENDM
00A00A9C                          2027m          C68     FFC0,0840,ISETS,62            BCHG
00A00A9C= FFC0                    2028m          DC.W    $FFC0
00A00A9E= 0840                    2029m          DC.W    $0840
00A00AA0= F0                      2030m          DC.B    (ISETS-X)>>2
00A00AA1= 3E                      2031m          DC.B    62
00A00AA2                          2032m          ENDM
00A00AA2                          2033m          C68     FFC0,0800,ISETS,61            BTST
00A00AA2= FFC0                    2034m          DC.W    $FFC0
00A00AA4= 0800                    2035m          DC.W    $0800
00A00AA6= F0                      2036m          DC.B    (ISETS-X)>>2
00A00AA7= 3D                      2037m          DC.B    61
00A00AA8                          2038m          ENDM
00A00AA8                          2039m          C68     F1C0,01C0,ISETD,64            BSET
00A00AA8= F1C0                    2040m          DC.W    $F1C0
00A00AAA= 01C0                    2041m          DC.W    $01C0
00A00AAC= EC                      2042m          DC.B    (ISETD-X)>>2
00A00AAD= 40                      2043m          DC.B    64
00A00AAE                          2044m          ENDM
00A00AAE                          2045m          C68     F1C0,0180,ISETD,63            BCLR
00A00AAE= F1C0                    2046m          DC.W    $F1C0
00A00AB0= 0180                    2047m          DC.W    $0180
00A00AB2= EC                      2048m          DC.B    (ISETD-X)>>2
00A00AB3= 3F                      2049m          DC.B    63
00A00AB4                          2050m          ENDM
00A00AB4                          2051m          C68     F1C0,0140,ISETD,62            BCHG
00A00AB4= F1C0                    2052m          DC.W    $F1C0
00A00AB6= 0140                    2053m          DC.W    $0140
00A00AB8= EC                      2054m          DC.B    (ISETD-X)>>2
00A00AB9= 3E                      2055m          DC.B    62
00A00ABA                          2056m          ENDM
00A00ABA                          2057m          C68     F1C0,0100,ISETD,61            BTST
00A00ABA= F1C0                    2058m          DC.W    $F1C0
00A00ABC= 0100                    2059m          DC.W    $0100
00A00ABE= EC                      2060m          DC.B    (ISETD-X)>>2
00A00ABF= 3D                      2061m          DC.B    61
00A00AC0                          2062m          ENDM
00A00AC0                          2063  TBLE     DS      0
00A00AC0                          2064  
00A00AC0                          2065  N68      MACRO
00A00AC0                          2066           DC.B    '\1',128+'\2'        \1\2
00A00AC0                          2067           ENDM
00A00AC0                          2068  
00A00AC0                          2069  OPCTBL   DS      0
00A00AC0                          2070m          N68     MOVE,P    0
00A00AC0= 4D 4F 56 45 D0          2071m          DC.B    'MOVE',128+'P'        MOVEP
00A00AC5                          2072m          ENDM
00A00AC5                          2073m          N68     O,R       1
00A00AC5= 4F D2                   2074m          DC.B    'O',128+'R'        OR
00A00AC7                          2075m          ENDM
00A00AC7                          2076m          N68     AN,D      2
00A00AC7= 41 4E C4                2077m          DC.B    'AN',128+'D'        AND
00A00ACA                          2078m          ENDM
00A00ACA                          2079m          N68     SU,B      3
00A00ACA= 53 55 C2                2080m          DC.B    'SU',128+'B'        SUB
00A00ACD                          2081m          ENDM
00A00ACD                          2082m          N68     AD,D      4
00A00ACD= 41 44 C4                2083m          DC.B    'AD',128+'D'        ADD
00A00AD0                          2084m          ENDM
00A00AD0                          2085m          N68     EO,R      5
00A00AD0= 45 4F D2                2086m          DC.B    'EO',128+'R'        EOR
00A00AD3                          2087m          ENDM
00A00AD3                          2088m          N68     CM,P      6
00A00AD3= 43 4D D0                2089m          DC.B    'CM',128+'P'        CMP
00A00AD6                          2090m          ENDM
00A00AD6                          2091m          N68     MOV,E     7
00A00AD6= 4D 4F 56 C5             2092m          DC.B    'MOV',128+'E'        MOVE
00A00ADA                          2093m          ENDM
00A00ADA                          2094m          N68     NEG,X     8
00A00ADA= 4E 45 47 D8             2095m          DC.B    'NEG',128+'X'        NEGX
00A00ADE                          2096m          ENDM
00A00ADE                          2097m          N68     CL,R      9
00A00ADE= 43 4C D2                2098m          DC.B    'CL',128+'R'        CLR
00A00AE1                          2099m          ENDM
00A00AE1                          2100m          N68     NE,G      10
00A00AE1= 4E 45 C7                2101m          DC.B    'NE',128+'G'        NEG
00A00AE4                          2102m          ENDM
00A00AE4                          2103m          N68     NO,T      11
00A00AE4= 4E 4F D4                2104m          DC.B    'NO',128+'T'        NOT
00A00AE7                          2105m          ENDM
00A00AE7                          2106m          N68     NBC,D     12
00A00AE7= 4E 42 43 C4             2107m          DC.B    'NBC',128+'D'        NBCD
00A00AEB                          2108m          ENDM
00A00AEB                          2109m          N68     PEA.,L    13
00A00AEB= 50 45 41 2E CC          2110m          DC.B    'PEA.',128+'L'        PEA.L
00A00AF0                          2111m          ENDM
00A00AF0                          2112m          N68     SWAP.,W   14
00A00AF0= 53 57 41 50 2E D7       2113m          DC.B    'SWAP.',128+'W'        SWAP.W
00A00AF6                          2114m          ENDM
00A00AF6                          2115m          N68     MOVE,M    15
00A00AF6= 4D 4F 56 45 CD          2116m          DC.B    'MOVE',128+'M'        MOVEM
00A00AFB                          2117m          ENDM
00A00AFB                          2118m          N68     EXT.,W    16
00A00AFB= 45 58 54 2E D7          2119m          DC.B    'EXT.',128+'W'        EXT.W
00A00B00                          2120m          ENDM
00A00B00                          2121m          N68     EXT.,L    17
00A00B00= 45 58 54 2E CC          2122m          DC.B    'EXT.',128+'L'        EXT.L
00A00B05                          2123m          ENDM
00A00B05                          2124m          N68     TS,T      18
00A00B05= 54 53 D4                2125m          DC.B    'TS',128+'T'        TST
00A00B08                          2126m          ENDM
00A00B08                          2127m          N68     TAS.,B    19
00A00B08= 54 41 53 2E C2          2128m          DC.B    'TAS.',128+'B'        TAS.B
00A00B0D                          2129m          ENDM
00A00B0D                          2130m          N68     TRA,P     20
00A00B0D= 54 52 41 D0             2131m          DC.B    'TRA',128+'P'        TRAP
00A00B11                          2132m          ENDM
00A00B11                          2133m          N68     LIN,K     21
00A00B11= 4C 49 4E CB             2134m          DC.B    'LIN',128+'K'        LINK
00A00B15                          2135m          ENDM
00A00B15                          2136m          N68     UNL,K     22
00A00B15= 55 4E 4C CB             2137m          DC.B    'UNL',128+'K'        UNLK
00A00B19                          2138m          ENDM
00A00B19                          2139m          N68     RESE,T    23
00A00B19= 52 45 53 45 D4          2140m          DC.B    'RESE',128+'T'        RESET
00A00B1E                          2141m          ENDM
00A00B1E                          2142m          N68     NO,P      24
00A00B1E= 4E 4F D0                2143m          DC.B    'NO',128+'P'        NOP
00A00B21                          2144m          ENDM
00A00B21                          2145m          N68     STO,P     25
00A00B21= 53 54 4F D0             2146m          DC.B    'STO',128+'P'        STOP
00A00B25                          2147m          ENDM
00A00B25                          2148m          N68     RT,E      26
00A00B25= 52 54 C5                2149m          DC.B    'RT',128+'E'        RTE
00A00B28                          2150m          ENDM
00A00B28                          2151m          N68     RT,S      27
00A00B28= 52 54 D3                2152m          DC.B    'RT',128+'S'        RTS
00A00B2B                          2153m          ENDM
00A00B2B                          2154m          N68     TRAP,V    28
00A00B2B= 54 52 41 50 D6          2155m          DC.B    'TRAP',128+'V'        TRAPV
00A00B30                          2156m          ENDM
00A00B30                          2157m          N68     RT,R      29
00A00B30= 52 54 D2                2158m          DC.B    'RT',128+'R'        RTR
00A00B33                          2159m          ENDM
00A00B33                          2160m          N68     JS,R      30
00A00B33= 4A 53 D2                2161m          DC.B    'JS',128+'R'        JSR
00A00B36                          2162m          ENDM
00A00B36                          2163m          N68     JM,P      31
00A00B36= 4A 4D D0                2164m          DC.B    'JM',128+'P'        JMP
00A00B39                          2165m          ENDM
00A00B39                          2166m          N68     CHK.,W    32
00A00B39= 43 48 4B 2E D7          2167m          DC.B    'CHK.',128+'W'        CHK.W
00A00B3E                          2168m          ENDM
00A00B3E                          2169m          N68     LEA.,L    33
00A00B3E= 4C 45 41 2E CC          2170m          DC.B    'LEA.',128+'L'        LEA.L
00A00B43                          2171m          ENDM
00A00B43                          2172m          N68     ADD,Q     34
00A00B43= 41 44 44 D1             2173m          DC.B    'ADD',128+'Q'        ADDQ
00A00B47                          2174m          ENDM
00A00B47                          2175m          N68     SUB,Q     35
00A00B47= 53 55 42 D1             2176m          DC.B    'SUB',128+'Q'        SUBQ
00A00B4B                          2177m          ENDM
00A00B4B= D3                      2178           DC.B    128+'S'   36
00A00B4C                          2179m          N68     D,B       37
00A00B4C= 44 C2                   2180m          DC.B    'D',128+'B'        DB
00A00B4E                          2181m          ENDM
00A00B4E= C2                      2182           DC.B    128+'B'   38
00A00B4F                          2183m          N68     MOVEQ.,L  .....39
00A00B4F= 4D 4F 56 45 51 2E CC    2184m          DC.B    'MOVEQ.',128+'L'        MOVEQ.L
00A00B56                          2185m          ENDM
00A00B56                          2186m          N68     O,R       40
00A00B56= 4F D2                   2187m          DC.B    'O',128+'R'        OR
00A00B58                          2188m          ENDM
00A00B58                          2189m          N68     DIVU.,W   41
00A00B58= 44 49 56 55 2E D7       2190m          DC.B    'DIVU.',128+'W'        DIVU.W
00A00B5E                          2191m          ENDM
00A00B5E                          2192m          N68     DIVS.,W   42
00A00B5E= 44 49 56 53 2E D7       2193m          DC.B    'DIVS.',128+'W'        DIVS.W
00A00B64                          2194m          ENDM
00A00B64                          2195m          N68     SBC,D     43
00A00B64= 53 42 43 C4             2196m          DC.B    'SBC',128+'D'        SBCD
00A00B68                          2197m          ENDM
00A00B68                          2198m          N68     SU,B      44
00A00B68= 53 55 C2                2199m          DC.B    'SU',128+'B'        SUB
00A00B6B                          2200m          ENDM
00A00B6B                          2201m          N68     SUB,X     45
00A00B6B= 53 55 42 D8             2202m          DC.B    'SUB',128+'X'        SUBX
00A00B6F                          2203m          ENDM
00A00B6F                          2204m          N68     CMP,M     46
00A00B6F= 43 4D 50 CD             2205m          DC.B    'CMP',128+'M'        CMPM
00A00B73                          2206m          ENDM
00A00B73                          2207m          N68     MULU.,W   47
00A00B73= 4D 55 4C 55 2E D7       2208m          DC.B    'MULU.',128+'W'        MULU.W
00A00B79                          2209m          ENDM
00A00B79                          2210m          N68     MULS.,W   48
00A00B79= 4D 55 4C 53 2E D7       2211m          DC.B    'MULS.',128+'W'        MULS.W
00A00B7F                          2212m          ENDM
00A00B7F                          2213m          N68     ABC,D    49
00A00B7F= 41 42 43 C4             2214m          DC.B    'ABC',128+'D'        ABCD
00A00B83                          2215m          ENDM
00A00B83                          2216m          N68     EX,G      50
00A00B83= 45 58 C7                2217m          DC.B    'EX',128+'G'        EXG
00A00B86                          2218m          ENDM
00A00B86                          2219m          N68     BS,R      .....51
00A00B86= 42 53 D2                2220m          DC.B    'BS',128+'R'        BSR
00A00B89                          2221m          ENDM
00A00B89                          2222m          N68     NUL,L     .....52
00A00B89= 4E 55 4C CC             2223m          DC.B    'NUL',128+'L'        NULL
00A00B8D                          2224m          ENDM
00A00B8D                          2225m          N68     ADD,X     53
00A00B8D= 41 44 44 D8             2226m          DC.B    'ADD',128+'X'        ADDX
00A00B91                          2227m          ENDM
00A00B91                          2228m          N68     A,S       54
00A00B91= 41 D3                   2229m          DC.B    'A',128+'S'        AS
00A00B93                          2230m          ENDM
00A00B93                          2231m          N68     L,S       55
00A00B93= 4C D3                   2232m          DC.B    'L',128+'S'        LS
00A00B95                          2233m          ENDM
00A00B95                          2234m          N68     R,O       56
00A00B95= 52 CF                   2235m          DC.B    'R',128+'O'        RO
00A00B97                          2236m          ENDM
00A00B97                          2237m          N68     RO,X      57
00A00B97= 52 4F D8                2238m          DC.B    'RO',128+'X'        ROX
00A00B9A                          2239m          ENDM
00A00B9A                          2240m          N68     MOVE.,B   58
00A00B9A= 4D 4F 56 45 2E C2       2241m          DC.B    'MOVE.',128+'B'        MOVE.B
00A00BA0                          2242m          ENDM
00A00BA0                          2243m          N68     MOVE.,W   59
00A00BA0= 4D 4F 56 45 2E D7       2244m          DC.B    'MOVE.',128+'W'        MOVE.W
00A00BA6                          2245m          ENDM
00A00BA6                          2246m          N68     MOVE.,L   60
00A00BA6= 4D 4F 56 45 2E CC       2247m          DC.B    'MOVE.',128+'L'        MOVE.L
00A00BAC                          2248m          ENDM
00A00BAC                          2249m          N68     BTS,T     61
00A00BAC= 42 54 53 D4             2250m          DC.B    'BTS',128+'T'        BTST
00A00BB0                          2251m          ENDM
00A00BB0                          2252m          N68     BCH,G     62
00A00BB0= 42 43 48 C7             2253m          DC.B    'BCH',128+'G'        BCHG
00A00BB4                          2254m          ENDM
00A00BB4                          2255m          N68     BCL,R     63
00A00BB4= 42 43 4C D2             2256m          DC.B    'BCL',128+'R'        BCLR
00A00BB8                          2257m          ENDM
00A00BB8                          2258m          N68     BSE,T     64
00A00BB8= 42 53 45 D4             2259m          DC.B    'BSE',128+'T'        BSET
00A00BBC                          2260m          ENDM
00A00BBC                          2261m          N68     BR,A      65
00A00BBC= 42 52 C1                2262m          DC.B    'BR',128+'A'        BRA
00A00BBF                          2263m          ENDM
00A00BBF                          2264  
00A00BBF= 00                      2265           DC.B    0              PAD BYTE
00A00BC0                          2266  
00A00BC0                          2267  
00A00BC0                          2268  
00A00BC0                          2269  ;   ORG $2000
00A00BC0                          2270  
00A00BC0  46FC 2700               2271  MAIN MOVE.W #INT_OFF,SR  ; INTERRUPT OFF, SUPERVISOR MODE SET
00A00BC4                          2272  
00A00BC4  2E7C 009FFFF4           2273        MOVE.L #SUPER_STACK+USER_STACK,SP ; INIT TOP OF USER STACK
00A00BCA                          2274  ;      movea.l #DOUT,a1
00A00BCA                          2275  ;      move.b #$FF,d2    ; with cpld
00A00BCA                          2276  ;      MOVE.B D2,(A1)    ; OFF LEDS
00A00BCA                          2277  
00A00BCA  6100 015E               2278        BSR INIT_ACIA         ; ACIA init
00A00BCE                          2279  
00A00BCE  6100 0AC2               2280        BSR VECINIT           ; EXCEPTION VECTOR init
00A00BD2                          2281  
00A00BD2  6100 01D0               2282        BSR SCROLL            ; NEW LINE
00A00BD6                          2283  
00A00BD6  6100 08CA               2284        BSR CLEAR_MON_RAM     ; Initialize 1Kbyte from RAMBASE with 0.
00A00BDA                          2285  
00A00BDA  47F9 00A0176B           2286        LEA.L TITLE1.L,A3     ; print START MESSAGE
00A00BE0  6100 019A               2287        BSR PSTR
00A00BE4                          2288  
00A00BE4  2C79 000000C0           2289        MOVEA.L RAMBASE.L,A6  ; Initialize Monitor work area 
00A00BEA  2D7C 00000000 00A6      2290        MOVE.L #RAM,POINTER_NOW(A6)
00A00BF2  2D7C 00000400 00F0      2291        MOVE.L #RAM+$400,USER_PC(A6)    ; INIT USER PC TO START OF RAM
00A00BFA                          2292  
00A00BFA  2D7C 009FFFF4 00E6      2293        MOVE.L #SUPER_STACK+USER_STACK,USER_USP(A6) ; INIT USER STACK
00A00C02  40C0                    2294        MOVE.W SR,D0
00A00C04  3D40 00EA               2295        MOVE.W D0,USER_SR(A6) 
00A00C08                          2296  
00A00C08  42AE 0024               2297        CLR.L FLAG(A6)         ; CLEAR SYSTEM MONITOR FLAG
00A00C0C  46FC 2000               2298        MOVE.W #INT_ON,SR       ; ON INTERRUPT, SUPERVISOR MODE SET
00A00C10                          2299  
00A00C10  6100 019E               2300  loop  BSR SEND_PROMPT
00A00C14  6100 0152               2301        BSR CIN
00A00C18  B03C 0040               2302        CMP.B #$40,D0
00A00C1C  6D04                    2303        blt.S NO_CHANGE
00A00C1E                          2304  
00A00C1E  C03C 00DF               2305        AND.B #%11011111,D0
00A00C22                          2306  
00A00C22                          2307  NO_CHANGE
00A00C22                          2308  
00A00C22  B03C 004C               2309        CMP.B #'L',D0
00A00C26  6600 0008               2310        BNE NEXT1
00A00C2A  6100 0202               2311        BSR READ_S_REC
00A00C2E  60E0                    2312        BRA LOOP
00A00C30                          2313  
00A00C30  B03C 0053               2314  NEXT1 CMP.B #'S',D0       
00A00C34  6600 0008               2315        BNE NEXT2
00A00C38  6100 09B4               2316        BSR VIEW_USP      ; VIEW USER STACK
00A00C3C  60D2                    2317        BRA LOOP
00A00C3E                          2318  
00A00C3E                          2319  
00A00C3E  B03C 0048               2320  NEXT2 CMP.B #'H',D0
00A00C42  6600 0008               2321        BNE NEXT3
00A00C46  6100 0330               2322        BSR HEX_DUMP
00A00C4A  60C4                    2323        BRA LOOP
00A00C4C                          2324  
00A00C4C  B03C 004E               2325  NEXT3 CMP.B #'N',D0
00A00C50  6600 0008               2326        BNE NEXT4
00A00C54  6100 0396               2327        BSR NEW_POINTER
00A00C58  60B6                    2328        BRA LOOP
00A00C5A                          2329  
00A00C5A  B03C 004A               2330  NEXT4 CMP.B #'J',D0
00A00C5E  6600 0008               2331        BNE NEXT5
00A00C62  6100 0796               2332        BSR JUMP
00A00C66  60A8                    2333        BRA LOOP
00A00C68                          2334  
00A00C68  B03C 005A               2335  NEXT5 CMP.B #'Z',D0
00A00C6C  6600 0008               2336        BNE NEXT6
00A00C70  6100 0924               2337        BSR UPLOAD         ; PRINT_DEBUG <------ USE Z FOR UPLOAD BINARY IMAGE
00A00C74  609A                    2338        BRA LOOP
00A00C76                          2339  
00A00C76                          2340  
00A00C76  B03C 0046               2341  NEXT6 CMP.B #'F',D0
00A00C7A  6600 0008               2342        BNE NEXT7
00A00C7E  6100 0408               2343        BSR FILL_MEMORY
00A00C82  608C                    2344        BRA LOOP
00A00C84                          2345  
00A00C84  B03C 0045               2346  NEXT7 CMP.B #'E',D0
00A00C88  6600 000A               2347        BNE NEXT8
00A00C8C  6100 046E               2348        BSR EDIT_MEMORY
00A00C90  6000 FF7E               2349        BRA LOOP
00A00C94                          2350  
00A00C94  B03C 0043               2351  NEXT8 CMP.B #'C',D0
00A00C98  6600 000A               2352        BNE NEXT9
00A00C9C  6100 0424               2353        BSR CLEAR_MEMORY
00A00CA0  6000 FF6E               2354        BRA LOOP
00A00CA4                          2355  
00A00CA4  B03C 0051               2356  NEXT9 CMP.B #'Q',D0
00A00CA8  6600 000A               2357        BNE NEXT10
00A00CAC  6100 0382               2358        BSR QUICK_HOME
00A00CB0  6000 FF5E               2359        BRA LOOP
00A00CB4                          2360  
00A00CB4  B03C 003F               2361  NEXT10 CMP.B #'?',D0
00A00CB8  6608                    2362         BNE.S NEXT11
00A00CBA  6100 04CE               2363         BSR HELP
00A00CBE  6000 FF50               2364         BRA LOOP
00A00CC2                          2365  
00A00CC2                          2366  
00A00CC2  B03C 0052               2367  NEXT11 CMP.B #'R',D0
00A00CC6  6608                    2368        BNE.S NEXT12
00A00CC8  6100 05EA               2369        BSR DISPLAY_REG
00A00CCC  6000 FF42               2370        BRA LOOP
00A00CD0                          2371  
00A00CD0  B03C 002E               2372  NEXT12 CMP.B #'.',D0
00A00CD4  6608                    2373        BNE.S NEXT13
00A00CD6  6100 07DE               2374        BSR MODIFY_REG
00A00CDA  6000 FF34               2375        BRA LOOP
00A00CDE                          2376  
00A00CDE  B03C 0044               2377  NEXT13 CMP.B #'D',D0
00A00CE2  6608                    2378         BNE.S NEXT14
00A00CE4  6100 0858               2379         BSR DISASSEMBLE
00A00CE8  6000 FF26               2380         BRA LOOP
00A00CEC                          2381  
00A00CEC  B03C 0041               2382  NEXT14 CMP.B #'A',D0
00A00CF0  6608                    2383         BNE.S NEXT15
00A00CF2  6100 08EE               2384         BSR ABOUT
00A00CF6  6000 FF18               2385         BRA LOOP
00A00CFA                          2386  
00A00CFA                          2387  
00A00CFA  B03C 0054               2388  NEXT15 CMP.B #'T',D0
00A00CFE  6608                    2389         BNE.S NEXT16
00A00D00  6100 075C               2390         BSR TRACE_JUMP
00A00D04  6000 FF0A               2391         BRA LOOP
00A00D08                          2392  
00A00D08  B03C 0047               2393  NEXT16 CMP.B #'G',D0
00A00D0C  6606                    2394         BNE.S NEXT17
00A00D0E  4EF9 00102000           2395         JMP $102000.L       ; USE G COMMAND FOR SIMPLE JUMP TO RAM
00A00D14                          2396  
00A00D14                          2397  
00A00D14  B03C 0042               2398  NEXT17 CMP.B #'B',D0
00A00D18  6604                    2399         BNE.S NEXT18
00A00D1A  6000 093E               2400         BRA BOOT_RAM
00A00D1E                          2401  
00A00D1E  6100 006A               2402  NEXT18  BSR NEW_LINE
00A00D22  6100 00A6               2403        BSR SEND_TITLE
00A00D26  6000 FEE8               2404        bra loop
00A00D2A                          2405  
00A00D2A                          2406  ; CONSOLE IS ACIA1
00A00D2A                          2407  
00A00D2A                 TRUE     2408        IFEQ  EASY68K_SIM
00A00D2A                          2409          
00A00D2A                          2410  ; INIT ACIA
00A00D2A                          2411  
00A00D2A  13FC 0003 00F00009      2412  INIT_ACIA  MOVE.B #3,ACIAC.L   ; RESET ACIA
00A00D32  303C 0064               2413             MOVE.W #100,D0
00A00D36  51C8 FFFE               2414             DBRA  D0,*
00A00D3A  13FC 0015 00F00009      2415             MOVE.B #$15,ACIAC.L   ; rts enabled 9600 8ne
00A00D42  4E75                    2416             RTS
00A00D44                          2417  
00A00D44  0839 0001 00F00009      2418  COUT      BTST.B #TDRE,ACIAC.L
00A00D4C  67F6                    2419            BEQ.S  COUT
00A00D4E  13C0 00F0000B           2420            MOVE.B D0,ACIAD.L
00A00D54  4E75                    2421            RTS
00A00D56                          2422  
00A00D56                          2423  
00A00D56  0839 0000 00F20009      2424  CINS      BTST.B #RDRF,ACIA2C.L
00A00D5E  67F6                    2425            BEQ.S  CINS
00A00D60  1039 00F2000B           2426            MOVE.B ACIA2D.L,D0
00A00D66  4E75                    2427            RTS
00A00D68                          2428  
00A00D68                          2429  
00A00D68  0839 0000 00F00009      2430  CIN      BTST.B #RDRF,ACIAC.L
00A00D70  67F6                    2431           BEQ.S  CIN
00A00D72  1039 00F0000B           2432           MOVE.B ACIAD.L,D0
00A00D78  61CA                    2433           BSR COUT
00A00D7A  4E75                    2434           RTS
00A00D7C                          2435  
00A00D7C                          2436      ENDC
00A00D7C                          2437  
00A00D7C                          2438  ; CONSOLE IS EASy68K Sim68K I/O
00A00D7C                          2439  
00A00D7C                 FALSE    2440      IFNE    EASY68K_SIM
00A00D7C                          2441             ;D1.B = 0 to turn off keyboard echo.
00A00D7C                          2442             ;D1.B = non zero to enable it (default).
00A00D7C                          2443             ;Echo is restored on 'Reset' or when a new file is loaded.
00A00D7C                          2444           ENDC
00A00D7C                          2445  
00A00D7C                          2446  
00A00D7C                          2447  ; A3 POINTED TO FIRST BYTE
00A00D7C                          2448  ; END WITH 0
00A00D7C                          2449  
00A00D7C  101B                    2450  PSTR     MOVE.B (A3)+,D0
00A00D7E  B03C 0000               2451           CMP.B  #0,D0
00A00D82  6704                    2452           BEQ.S PSTR1
00A00D84  61BE                    2453           BSR COUT
00A00D86  60F4                    2454           BRA.S PSTR
00A00D88                          2455  
00A00D88  4E75                    2456  PSTR1    RTS
00A00D8A                          2457  
00A00D8A                          2458  ; NEW LINE
00A00D8A                          2459  
00A00D8A  2F00                    2460  NEW_LINE MOVE.L D0,-(SP)
00A00D8C  103C 000D               2461           MOVE.B #CR,D0
00A00D90  61B2                    2462           BSR COUT
00A00D92  103C 000A               2463           MOVE.B #LF,D0
00A00D96  61AC                    2464           BSR COUT
00A00D98  201F                    2465           MOVE.L (SP)+,D0
00A00D9A  4E75                    2466           RTS
00A00D9C                          2467  
00A00D9C  103C 0020               2468  SPACE    MOVE.B #SP,D0
00A00DA0  61A2                    2469           BSR COUT
00A00DA2  4E75                    2470           RTS
00A00DA4                          2471  
00A00DA4  323C 0019               2472  SCROLL   MOVE.W #25,D1
00A00DA8  61E0                    2473  SCROLL1  BSR NEW_LINE
00A00DAA  51C9 FFFC               2474           DBF D1,SCROLL1
00A00DAE  4E75                    2475           RTS
00A00DB0                          2476  
00A00DB0                          2477  SEND_PROMPT
00A00DB0  2C79 000000C0           2478          MOVEA.L RAMBASE.L,A6
00A00DB6  61D2                    2479          BSR NEW_LINE
00A00DB8  202E 00A6               2480          MOVE.L POINTER_NOW(A6),D0
00A00DBC  6100 01A6               2481          BSR OUT6X
00A00DC0  47F9 00A017A7           2482          LEA.L PROMPT.L,A3
00A00DC6  61B4                    2483          BSR PSTR
00A00DC8  4E75                    2484          RTS
00A00DCA                          2485  
00A00DCA  47F9 00A01742           2486  SEND_TITLE LEA.L TITLE.L,A3
00A00DD0  61AA                    2487             BSR PSTR
00A00DD2  4E75                    2488             RTS
00A00DD4                          2489  
00A00DD4                          2490  ; S19 LOADER
00A00DD4                          2491  
00A00DD4                          2492  ; CONVERT ASCII LETTER TO 8-BIT VALUE
00A00DD4                          2493  
00A00DD4  0400 0030               2494  TO_HEX SUBI.B #$30,D0
00A00DD8  0C00 000A               2495         CMPI.B #$A,D0
00A00DDC  6B00 0008               2496         BMI  ZERO_TO_NINE
00A00DE0  C03C 00DF               2497         AND.B #%11011111,D0
00A00DE4  5F00                    2498         SUBI.B #7,D0
00A00DE6                          2499  
00A00DE6                          2500  ZERO_TO_NINE
00A00DE6                          2501  
00A00DE6  1200                    2502         MOVE.B D0,D1
00A00DE8                          2503  
00A00DE8  4E75                    2504          RTS
00A00DEA                          2505  
00A00DEA                          2506  ; READ TWO BYTES ASCII AND CONVERT TO SINGLE BYTE DATA
00A00DEA                          2507  
00A00DEA                          2508  ; ENTRY: D0 FROM CIN 
00A00DEA                          2509  ; EXIT: D1 8-BIT VALUE 
00A00DEA                          2510  ;       
00A00DEA                          2511  
00A00DEA                          2512  
00A00DEA  6100 FF7C               2513  GET_HEX  BSR CIN
00A00DEE                          2514  
00A00DEE  B03C 0058               2515           CMP.B #'X',D0         ; IF BIT_ESC PRESSED
00A00DF2  6608                    2516           BNE.S GET_HEX1
00A00DF4  08EE 0000 0024          2517           BSET.B #BIT_ESC,FLAG(A6)
00A00DFA  4E75                    2518           RTS
00A00DFC                          2519  
00A00DFC                          2520  
00A00DFC  B03C 000D               2521  GET_HEX1 CMP.B #CR,D0
00A00E00  6608                    2522           BNE.S GET_HEX2
00A00E02  08EE 0001 0024          2523           BSET.B #1,FLAG(A6)       ; ENTER PRESSED
00A00E08  4E75                    2524           RTS
00A00E0A                          2525  
00A00E0A                          2526  
00A00E0A  61C8                    2527  GET_HEX2 BSR TO_HEX
00A00E0C  E919                    2528           ROL.B #4,D1
00A00E0E  1401                    2529           MOVE.B D1,D2
00A00E10  6100 FF56               2530           BSR CIN
00A00E14  61BE                    2531           BSR TO_HEX
00A00E16  D202                    2532           ADD.B D2,D1
00A00E18  4E75                    2533           RTS
00A00E1A                          2534  
00A00E1A                          2535  
00A00E1A  6100 FF3A               2536  GET_HEXS   BSR CINS
00A00E1E  61B4                    2537           BSR TO_HEX
00A00E20  E919                    2538           ROL.B #4,D1
00A00E22  1401                    2539           MOVE.B D1,D2
00A00E24  6100 FF30               2540           BSR CINS
00A00E28  61AA                    2541           BSR TO_HEX
00A00E2A  D202                    2542           ADD.B D2,D1
00A00E2C  4E75                    2543           RTS
00A00E2E                          2544  
00A00E2E                          2545  ;
00A00E2E                          2546  ;S214000400227C00400001143C00006100002C128297
00A00E2E                          2547  ;S804000000FB
00A00E2E                          2548  
00A00E2E                          2549  ; READ S-RECORD
00A00E2E                          2550  ; D5 = BYTE CHECK SUM FOR EACH RECORD
00A00E2E                          2551  ; D4 = NUMBER OF BYTE RECEIVED
00A00E2E                          2552  
00A00E2E  47F9 00A018C3           2553  READ_S_REC      LEA.L LOAD.L,A3
00A00E34  6100 FF46               2554                  BSR PSTR
00A00E38  4284                    2555                  CLR.L D4     ; CLEAR NUMBER OF BYTE 
00A00E3A  4285                    2556                  CLR.L D5     ; CLEAR CHECK SUM AND ERROR BYTE
00A00E3C                          2557  
00A00E3C  6100 FF18               2558  READ_S_REC1     BSR CINS
00A00E40  B03C 0053               2559                  CMP.B #'S',D0
00A00E44  6602                    2560                  BNE.S CHECK_ESC
00A00E46  6008                    2561                  BRA.S GET_TYPE
00A00E48                          2562  
00A00E48                          2563  
00A00E48  B03C 001B               2564  CHECK_ESC       CMP.B #ESC,D0
00A00E4C  66EE                    2565                  BNE.S READ_S_REC1
00A00E4E                          2566  
00A00E4E  4E75                    2567                  RTS
00A00E50                          2568  
00A00E50                          2569  
00A00E50  6100 FF04               2570  GET_TYPE        BSR CINS
00A00E54  B03C 0038               2571                  CMP.B #'8',D0
00A00E58  6600 003A               2572                  BNE CHECK_START
00A00E5C                          2573  
00A00E5C  6100 FEF8               2574  WAIT_CR         BSR CINS
00A00E60  B03C 000D               2575                  CMP.B #CR,D0
00A00E64  66F6                    2576                  BNE.S WAIT_CR
00A00E66                          2577  
00A00E66  6100 FF22               2578                  BSR NEW_LINE
00A00E6A  6100 FF1E               2579                  BSR NEW_LINE
00A00E6E  2004                    2580                  MOVE.L D4,D0
00A00E70  6100 0324               2581                  BSR PRINT_DEC     ; SHOW NUMBER OF BYTE RECEIVED
00A00E74  267C 00A018FB           2582                  MOVEA.L #NUMBER,A3
00A00E7A  6100 FF00               2583                  BSR PSTR
00A00E7E                          2584  
00A00E7E  4845                    2585                  SWAP.W D5
00A00E80  4280                    2586                  CLR.L D0
00A00E82  3005                    2587                  MOVE.W D5,D0
00A00E84  6100 0310               2588                  BSR PRINT_DEC
00A00E88  267C 00A0190B           2589                  MOVEA.L #ERROR,A3
00A00E8E  6100 FEEC               2590                  BSR PSTR
00A00E92  4E75                    2591                  RTS
00A00E94                          2592  
00A00E94                          2593  
00A00E94  B03C 0032               2594  CHECK_START     CMP.B #'2',D0   ; CHECK S2 RECORD
00A00E98  673C                    2595                  BEQ.S READ_S2
00A00E9A                          2596  
00A00E9A  B03C 0031               2597                  CMP.B #'1',D0   ; CHECK S1 RECORD
00A00E9E  6716                    2598                  BEQ.S READ_S1
00A00EA0                          2599  
00A00EA0  B03C 0030               2600                  CMP.B #'0',D0   ; CHECK S0 RECORD
00A00EA4  6796                    2601                  BEQ.S READ_S_REC1   ; SKIP DATA
00A00EA6  6094                    2602                  BRA.S READ_S_REC1   ; SKIP DATA
00A00EA8                          2603  
00A00EA8                          2604  
00A00EA8  4245                    2605  START_FOUND     CLR.W D5          ; CLEAR BYTE CHECK SUM
00A00EAA                          2606  
00A00EAA  6100 FF6E               2607                  BSR GET_HEXS
00A00EAE  4287                    2608                  CLR.L D7
00A00EB0  1E01                    2609                  MOVE.B D1,D7       ; NUMBER OF BYTE SAVED TO D7
00A00EB2                          2610                  ;SUBQ.B #5,D7
00A00EB2                          2611                  ;MOVE.L D7,D0
00A00EB2                          2612  
00A00EB2  DA01                    2613                  ADD.B  D1,D5       ; ADD CHECK SUM
00A00EB4  4E75                    2614          RTS
00A00EB6                          2615  
00A00EB6                          2616  ;S1 (2 BYTE ADDRESS)
00A00EB6  61F0                    2617  READ_S1     BSR START_FOUND
00A00EB8                          2618  
00A00EB8  5907                    2619                SUBQ.B #4,D7
00A00EBA  2007                    2620                MOVE.L D7,D0
00A00EBC                          2621  
00A00EBC                          2622  ; GET 16-BIT ADDRESS, SAVE TO A6
00A00EBC                          2623  
00A00EBC  4286                    2624                CLR.L D6
00A00EBE  6100 FF5A               2625                BSR GET_HEXS
00A00EC2  1C01                    2626                MOVE.B D1,D6
00A00EC4  DA01                    2627                ADD.B  D1,D5          ; ADD CHECK SUM
00A00EC6                          2628  
00A00EC6  E19E                    2629                ROL.L #8,D6
00A00EC8  6100 FF50               2630                BSR GET_HEXS
00A00ECC  1C01                    2631                MOVE.B D1,D6
00A00ECE  DA01                    2632                ADD.B D1,D5           ; ADD CHECK SUM
00A00ED0                          2633  
00A00ED0  2C46                    2634                MOVEA.L D6,A6
00A00ED2  6000 0028               2635                BRA READ_DATA           
00A00ED6                          2636  
00A00ED6                          2637  
00A00ED6                          2638  ;S2 (3 BYTE ADDRESS)
00A00ED6  61D0                    2639  READ_S2       BSR START_FOUND                
00A00ED8                          2640  
00A00ED8  5B07                    2641                SUBQ.B #5,D7
00A00EDA  2007                    2642                MOVE.L D7,D0
00A00EDC                          2643  
00A00EDC                          2644  ; GET 24-BIT ADDRESS, SAVE TO A6
00A00EDC                          2645  
00A00EDC  4286                    2646                CLR.L D6
00A00EDE  6100 FF3A               2647                BSR GET_HEXS
00A00EE2  1C01                    2648                MOVE.B D1,D6
00A00EE4  DA01                    2649                ADD.B  D1,D5
00A00EE6                          2650  
00A00EE6  E19E                    2651                ROL.L #8,D6
00A00EE8  6100 FF30               2652                BSR GET_HEXS
00A00EEC  1C01                    2653                MOVE.B D1,D6
00A00EEE  DA01                    2654                ADD.B D1,D5
00A00EF0                          2655  
00A00EF0  E19E                    2656                ROL.L #8,D6
00A00EF2                          2657  
00A00EF2  6100 FF26               2658                BSR GET_HEXS
00A00EF6  1C01                    2659                MOVE.B D1,D6
00A00EF8  DA01                    2660                ADD.B D1,D5
00A00EFA                          2661  
00A00EFA  2C46                    2662                MOVEA.L D6,A6
00A00EFC                          2663                           
00A00EFC  6100 FF1C               2664  READ_DATA     BSR GET_HEXS
00A00F00  DA01                    2665                ADD.B  D1,D5      ; ADD CHECK SUM
00A00F02  1CC1                    2666                MOVE.B D1,(A6)+
00A00F04                          2667  
00A00F04  4601                    2668                not.b d1          ; complement before sending
00A00F06                          2669  
00A00F06                          2670                ;MOVE.B D1,DOUT.L  ; INDICATOR WHILE LOADING
00A00F06                          2671  
00A00F06  5284                    2672                ADDQ.L #1,D4      ; BUMP NUMBER OF BYTE RECEIVED
00A00F08  51CF FFF2               2673                DBF D7,READ_DATA
00A00F0C                          2674  
00A00F0C  4605                    2675                NOT.B D5          ; ONE'S COMPLEMENT OF BYTE CHECK SUM         
00A00F0E                          2676  
00A00F0E  6100 FF0A               2677                BSR GET_HEXS      ; GET BYTE CHECK SUM
00A00F12                          2678  
00A00F12  BA01                    2679                CMP.B D1,D5       ; COMPARE CHECK SUM
00A00F14  670C                    2680                BEQ.S NO_ERROR
00A00F16                          2681  
00A00F16  0685 00010000           2682                ADD.L #$10000,D5  ; ADD 1 TO UPPER WORD
00A00F1C  103C 0058               2683                MOVE.B #'X',D0    ; IF NOT EQUAL SEND 'X' FOR ERROR
00A00F20  6004                    2684                BRA.S CHECKSUM_ERROR
00A00F22                          2685  
00A00F22  103C 005F               2686  NO_ERROR      MOVE.B #'_',D0      ; '_' NO ERROR RECORD
00A00F26  6100 FE1C               2687  CHECKSUM_ERROR BSR COUT
00A00F2A                          2688  
00A00F2A  6000 FF10               2689                BRA READ_S_REC1
00A00F2E                          2690  
00A00F2E                          2691  
00A00F2E  6100 FE38               2692  LOOP_BACK     BSR CIN
00A00F32  B03C 000D               2693                CMP.B #13,D0
00A00F36  66F6                    2694                BNE LOOP_BACK
00A00F38  4E75                    2695                RTS
00A00F3A                          2696  
00A00F3A                          2697  
00A00F3A                          2698  
00A00F3A                          2699  ; PRINT HEX 
00A00F3A                          2700  ; OUT1X = PRINT ONE HEX
00A00F3A                          2701  ; OUT2X = PRINT TWO
00A00F3A                          2702  ; OUT4X = PRINT FOUR
00A00F3A                          2703  ; OUT8X = PRINT EIGHT
00A00F3A                          2704  ; ENTRY: D0
00A00F3A                          2705  
00A00F3A  1F00                    2706  OUT1X        MOVE.B D0,-(SP)    ;SAVE D0
00A00F3C  C03C 000F               2707               AND.B #$F,D0
00A00F40  0600 0030               2708               ADD.B #'0',D0
00A00F44  B03C 0039               2709               CMP.B #'9',D0
00A00F48  6302                    2710               BLS.S   OUT1X1
00A00F4A  5E00                    2711               ADD.B #7,D0
00A00F4C  6100 FDF6               2712  OUT1X1       BSR COUT
00A00F50  101F                    2713               MOVE.B (SP)+,D0    ;RESTORE D0
00A00F52  4E75                    2714               RTS
00A00F54                          2715  
00A00F54  E818                    2716  OUT2X        ROR.B #4,D0
00A00F56  61E2                    2717               BSR.S OUT1X
00A00F58  E918                    2718               ROL.B #4,D0
00A00F5A  60DE                    2719               BRA OUT1X
00A00F5C                          2720  
00A00F5C  E058                    2721  OUT4X        ROR.W #8,D0
00A00F5E  61F4                    2722               BSR.S OUT2X
00A00F60  E158                    2723               ROL.W #8,D0
00A00F62  60F0                    2724               BRA.S OUT2X
00A00F64                          2725  
00A00F64  4840                    2726  OUT6X        SWAP.W D0        ; OUT 24-BIT HEX NUMBER
00A00F66  61EC                    2727               BSR.S OUT2X
00A00F68  4840                    2728               SWAP.W D0
00A00F6A  60F0                    2729               BRA.S OUT4X
00A00F6C                          2730  
00A00F6C  4840                    2731  OUT8X        SWAP.W D0        ; OUT 32-BIT HEX NUMBER
00A00F6E  61EC                    2732               BSR.S  OUT4X
00A00F70  4840                    2733               SWAP.W D0
00A00F72  60E8                    2734               BRA.S  OUT4X
00A00F74                          2735  
00A00F74                          2736  
00A00F74                          2737  ; PRINT D0 CONTENT
00A00F74                          2738  
00A00F74  61F6                    2739  PRINT_D0  BSR.S OUT8X
00A00F76  4E75                    2740            RTS
00A00F78                          2741  
00A00F78                          2742  ; HEX DUMP
00A00F78                          2743  ; DUMP MEMORY CONTENT
00A00F78                          2744  ; A3: START ADDRESS
00A00F78                          2745  
00A00F78  47F9 00A0187A           2746  HEX_DUMP    LEA.L HEX.L,A3
00A00F7E  6100 FDFC               2747              BSR PSTR
00A00F82                          2748  
00A00F82  2C79 000000C0           2749              MOVEA.L RAMBASE.L,A6
00A00F88  266E 00A6               2750              MOVEA.L POINTER_NOW(A6),A3
00A00F8C  3C3C 000F               2751              MOVE.W #15,D6
00A00F90  6100 FDF8               2752              BSR NEW_LINE
00A00F94                          2753  
00A00F94  6100 FDF4               2754  HEX_DUMP2   BSR NEW_LINE
00A00F98  200B                    2755              MOVE.L A3,D0
00A00F9A  61C8                    2756              BSR OUT6X
00A00F9C  6100 FDFE               2757              BSR SPACE
00A00FA0  6100 FDFA               2758              BSR SPACE
00A00FA4                          2759  
00A00FA4  3E3C 000F               2760              MOVE.W #15,D7
00A00FA8                          2761  
00A00FA8  101B                    2762  HEX_DUMP1   MOVE.B (A3)+,D0
00A00FAA  61A8                    2763              BSR OUT2X
00A00FAC  6100 FDEE               2764              BSR SPACE
00A00FB0                          2765  
00A00FB0  51CF FFF6               2766              DBF D7,HEX_DUMP1
00A00FB4                          2767  
00A00FB4  6100 FDE6               2768              BSR SPACE
00A00FB8  97FC 00000010           2769              SUBA.L #16,A3       ; GET BACK TO BEGINING 
00A00FBE  3E3C 000F               2770              MOVE.W #15,D7
00A00FC2                          2771  
00A00FC2  101B                    2772  HEX_DUMP6   MOVE.B (A3)+,D0
00A00FC4                          2773  
00A00FC4  B03C 0020               2774              CMP.B #$20,D0
00A00FC8  6C06                    2775              BGE.S HEX_DUMP3
00A00FCA                          2776  
00A00FCA  103C 002E               2777  HEX_DUMP4   MOVE.B #'.',D0
00A00FCE  6006                    2778              BRA.S  HEX_DUMP5
00A00FD0                          2779  
00A00FD0  B03C 007F               2780  HEX_DUMP3   CMP.B #$7F,D0
00A00FD4  6EF4                    2781              BGT.S HEX_DUMP4
00A00FD6                          2782  
00A00FD6  6100 FD6C               2783  HEX_DUMP5   BSR COUT
00A00FDA  51CF FFE6               2784              DBF D7,HEX_DUMP6
00A00FDE                          2785  
00A00FDE                          2786  
00A00FDE  51CE FFB4               2787              DBF D6,HEX_DUMP2
00A00FE2                          2788  
00A00FE2  2D4B 00A6               2789              MOVE.L A3,POINTER_NOW(A6)   ; UPDATE POINTER_NOW
00A00FE6  6100 FDA2               2790              BSR NEW_LINE
00A00FEA  4E75                    2791              RTS
00A00FEC                          2792  
00A00FEC                          2793  
00A00FEC                          2794  ; NEW POINTER
00A00FEC                          2795  ; CHANGE 24-BIT ADDRESS-> POINTER_NOW
00A00FEC                          2796  
00A00FEC  47F9 00A01841           2797  NEW_POINTER   LEA.L NEW.L,A3
00A00FF2  6100 FD88               2798                BSR PSTR
00A00FF6                          2799  
00A00FF6  6100 FDB8               2800                BSR SEND_PROMPT
00A00FFA                          2801  
00A00FFA  2C79 000000C0           2802                MOVEA.L RAMBASE.L,A6
00A01000  4286                    2803                CLR.L D6
00A01002  6100 FDE6               2804                BSR GET_HEX
00A01006  1C01                    2805                MOVE.B D1,D6
00A01008  E19E                    2806                ROL.L #8,D6
00A0100A  6100 FDDE               2807                BSR GET_HEX
00A0100E  1C01                    2808                MOVE.B D1,D6
00A01010  E19E                    2809                ROL.L #8,D6
00A01012  6100 FDD6               2810                BSR GET_HEX
00A01016  1C01                    2811                MOVE.B D1,D6
00A01018                          2812  
00A01018  0886 0000               2813                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00A0101C                          2814  
00A0101C  2D46 00A6               2815                MOVE.L D6,POINTER_NOW(A6)
00A01020  4E75                    2816                RTS
00A01022                          2817  
00A01022  6100 FD66               2818  PRINT_DEBUG   BSR NEW_LINE
00A01026  202E 0020               2819                MOVE.L DEBUG(A6),D0
00A0102A  6100 FF40               2820                BSR OUT8X
00A0102E  4E75                    2821                RTS
00A01030                          2822  
00A01030  47F9 00A01853           2823  QUICK_HOME    LEA.L QUICK.L,A3
00A01036  6100 FD44               2824                BSR PSTR
00A0103A  2C79 000000C0           2825                MOVEA.L RAMBASE.L,A6
00A01040  2D7C 00000000 00A6      2826                MOVE.L #RAM,POINTER_NOW(A6)
00A01048  4E75                    2827                RTS  
00A0104A                          2828  
00A0104A                          2829  ; TEST RAM
00A0104A                          2830  
00A0104A                          2831  ; GET 32BIT DATA
00A0104A                          2832  ; EXIT: D6 CONTAINS 32-BIT ADDRESS
00A0104A                          2833  
00A0104A  4286                    2834  GET_32BIT     CLR.L D6
00A0104C  6100 FD9C               2835                BSR GET_HEX
00A01050  1C01                    2836                MOVE.B D1,D6
00A01052  E19E                    2837                ROL.L #8,D6
00A01054  6100 FD94               2838                BSR GET_HEX
00A01058  1C01                    2839                MOVE.B D1,D6
00A0105A  E19E                    2840                ROL.L #8,D6
00A0105C  6100 FD8C               2841                BSR GET_HEX
00A01060  1C01                    2842                MOVE.B D1,D6
00A01062  E19E                    2843                ROL.L #8,D6
00A01064  6100 FD84               2844                BSR GET_HEX
00A01068  1C01                    2845                MOVE.B D1,D6
00A0106A  4E75                    2846                RTS
00A0106C                          2847  
00A0106C                          2848  
00A0106C                          2849  ; GET_ADDRESS
00A0106C                          2850  ; EXIT: D6 CONTAINS 24-BIT ADDRESS
00A0106C                          2851  
00A0106C  4286                    2852  GET_ADDRESS   CLR.L D6
00A0106E  6100 FD7A               2853                BSR GET_HEX
00A01072                          2854  
00A01072  1C01                    2855  GET_ADDRESS1  MOVE.B D1,D6
00A01074  E19E                    2856                ROL.L #8,D6
00A01076  6100 FD72               2857                BSR GET_HEX
00A0107A  1C01                    2858                MOVE.B D1,D6
00A0107C  E19E                    2859                ROL.L #8,D6
00A0107E  6100 FD6A               2860                BSR GET_HEX
00A01082  1C01                    2861                MOVE.B D1,D6
00A01084  4E75                    2862                RTS
00A01086                          2863  
00A01086  4E75                    2864  TEST_RAM      RTS
00A01088                          2865  
00A01088                          2866  ; FILL MEMORY WITH 0xFF
00A01088                          2867  
00A01088  47F9 00A017C1           2868  FILL_MEMORY   LEA.L FILL.L,A3
00A0108E  6100 FCEC               2869                BSR PSTR
00A01092                          2870  
00A01092  47F9 00A017D8           2871                LEA.L START.L,A3
00A01098  6100 FCE2               2872                BSR PSTR
00A0109C  61CE                    2873                BSR GET_ADDRESS
00A0109E  2846                    2874                MOVEA.L D6,A4             ; A4 START ADDRESS
00A010A0                          2875  
00A010A0  47F9 00A017EA           2876                LEA.L STOP.L,A3
00A010A6  6100 FCD4               2877                BSR PSTR
00A010AA  61C0                    2878                BSR GET_ADDRESS
00A010AC  2A46                    2879                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00A010AE                          2880  
00A010AE  38FC FFFF               2881  FILL_MEMORY1  MOVE.W #$FFFF,(A4)+
00A010B2  BBCC                    2882                CMPA.L A4,A5
00A010B4  6CF8                    2883                BGE.S FILL_MEMORY1
00A010B6                          2884  
00A010B6  267C 00A017FB           2885                MOVEA.L #DONE,A3
00A010BC  6100 FCBE               2886                BSR PSTR
00A010C0  4E75                    2887                RTS
00A010C2                          2888  
00A010C2                          2889  ; CLEAR MEMORY WITH 0x00
00A010C2                          2890  
00A010C2  47F9 00A017A9           2891  CLEAR_MEMORY  LEA.L CLEAR.L,A3
00A010C8  6100 FCB2               2892                BSR PSTR
00A010CC                          2893  
00A010CC  47F9 00A017D8           2894                LEA.L START.L,A3
00A010D2  6100 FCA8               2895                BSR PSTR
00A010D6  6194                    2896                BSR GET_ADDRESS
00A010D8  2846                    2897                MOVEA.L D6,A4             ; A4 START ADDRESS
00A010DA                          2898  
00A010DA  47F9 00A017EA           2899                LEA.L STOP.L,A3
00A010E0  6100 FC9A               2900                BSR PSTR
00A010E4  6186                    2901                BSR GET_ADDRESS
00A010E6  2A46                    2902                MOVEA.L D6,A5             ; A5 STOP ADDRESS
00A010E8                          2903  
00A010E8  38FC 0000               2904  CLEAR_MEMORY1 MOVE.W #$0000,(A4)+
00A010EC  BBCC                    2905                CMPA.L A4,A5
00A010EE  6CF8                    2906                BGE.S CLEAR_MEMORY1
00A010F0                          2907  
00A010F0  267C 00A017FB           2908                MOVEA.L #DONE,A3
00A010F6  6100 FC84               2909                BSR PSTR
00A010FA  4E75                    2910                RTS
00A010FC                          2911  
00A010FC                          2912  ; EDIT MEMORY
00A010FC                          2913  ; PRESS SPACE BAR TO QUIT
00A010FC                          2914  
00A010FC  47F9 00A01805           2915  EDIT_MEMORY   LEA.L EDIT1.L,A3
00A01102  6100 FC78               2916                BSR PSTR
00A01106                          2917  
00A01106  47F9 00A0182F           2918                LEA.L EDIT.L,A3
00A0110C  6100 FC6E               2919                BSR PSTR
00A01110  6100 FF5A               2920                BSR GET_ADDRESS
00A01114                          2921  
00A01114  0886 0000               2922                BCLR.L #0,D6        ; FORCE TO EVEN ADDRESS
00A01118  2646                    2923                MOVEA.L D6,A3       ; EDIT ADDRESS
00A0111A                          2924  
00A0111A                          2925               ; MOVEA.L POINTER_NOW.L,A3
00A0111A                          2926  
00A0111A  6100 FC6E               2927  EDIT_MEMORY2  BSR NEW_LINE
00A0111E  200B                    2928                MOVE.L A3,D0
00A01120  6100 FE42               2929                BSR OUT6X
00A01124  6100 FC76               2930                BSR SPACE
00A01128  6100 FC72               2931                BSR SPACE
00A0112C                          2932  
00A0112C  103C 005B               2933                MOVE.B #'[',D0
00A01130  6100 FC12               2934                BSR COUT
00A01134  3013                    2935                MOVE.W (A3),D0
00A01136  6100 FE24               2936                BSR OUT4X
00A0113A  103C 005D               2937                MOVE.B #']',D0
00A0113E  6100 FC04               2938                BSR COUT
00A01142                          2939  
00A01142  6100 FC58               2940                BSR SPACE
00A01146                          2941  
00A01146  4241                    2942                CLR.W D1
00A01148  6100 FCA0               2943                BSR GET_HEX
00A0114C                          2944  
00A0114C  08AE 0000 0024          2945                BCLR.B #BIT_ESC,FLAG(A6)  ; TEST BIT_ESC BIT
00A01152  6630                    2946                BNE.S EDIT_MEMORY3  ; IF BIT = 1 THEN EXIT
00A01154                          2947  
00A01154  08AE 0001 0024          2948                BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00A0115A  6624                    2949                BNE.S EDIT_MEMORY4  ; SKIP WRITE TO RAM
00A0115C                          2950  
00A0115C  E159                    2951                ROL.W #8,D1
00A0115E  6100 FC8A               2952                BSR GET_HEX
00A01162                          2953  
00A01162  36BC 0000               2954                MOVE.W #0,(A3)
00A01166                          2955  
00A01166  3013                    2956                MOVE.W (A3),D0   ; TEST RAM OR ROM BY WRITING 0 AND READ BACK
00A01168  B07C 0000               2957                CMP.W #0,D0
00A0116C  6604                    2958                BNE.S EDIT_MEMORY5
00A0116E                          2959  
00A0116E  3681                    2960                MOVE.W D1,(A3)     ; OK WRITE TO RAM
00A01170  600E                    2961                BRA.S EDIT_MEMORY4 
00A01172                          2962  
00A01172  2F0B                    2963  EDIT_MEMORY5  MOVE.L A3,-(SP)
00A01174  47F9 00A0183B           2964                LEA.L ROM.L,A3
00A0117A  6100 FC00               2965                BSR PSTR
00A0117E  265F                    2966                MOVEA.L (SP)+,A3
00A01180                          2967  
00A01180  548B                    2968  EDIT_MEMORY4  ADDQ.L #2,A3     ; BUMP A3
00A01182                          2969  
00A01182  6096                    2970                BRA.S EDIT_MEMORY2
00A01184                          2971  
00A01184  6100 FC04               2972  EDIT_MEMORY3  BSR NEW_LINE
00A01188  4E75                    2973                RTS
00A0118A                          2974  
00A0118A                          2975  
00A0118A                          2976  ; HELP LIST MONITOR COMMANDS
00A0118A                          2977  
00A0118A  47F9 00A01ADA           2978  HELP          LEA.L HELP_LIST.L,A3
00A01190  6100 FBEA               2979                BSR PSTR
00A01194  4E75                    2980                RTS
00A01196                          2981  
00A01196                          2982  ;----------------------------------------------------------------------
00A01196                          2983  ; PRINT_DEC
00A01196                          2984  ; D0 32-BIT BINARY NUMBER
00A01196                          2985  
00A01196  2F00                    2986  PRINT_DEC MOVE.L D0,-(SP)  ; SAVE D0
00A01198  2C79 000000C0           2987            MOVEA.L RAMBASE.L,A6
00A0119E  DDFC 00000026           2988            ADDA.L #BUFFER,A6
00A011A4  6100 0016               2989            BSR HEX2DEC
00A011A8  2679 000000C0           2990            MOVEA.L RAMBASE.L,A3
00A011AE  D7FC 00000026           2991            ADDA.L #BUFFER,A3
00A011B4  6100 FBC6               2992            BSR PSTR
00A011B8  201F                    2993            MOVE.L (SP)+,D0 ; RESTORE D0
00A011BA  4E75                    2994            RTS
00A011BC                          2995  
00A011BC                          2996  ;**************************************************************************
00A011BC                          2997  ; The portion of code within STAR lines are modified from Tutor source code
00A011BC                          2998  ;
00A011BC                          2999  ;
00A011BC                          3000  ; HEX2DEC   HEX2DEC convert hex to decimal                   
00A011BC                          3001  ; CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
00A011BC                          3002  
00A011BC  48E7 7F00               3003  HEX2DEC  MOVEM.L D1-D7,-(SP)   ;SAVE REGISTERS
00A011C0  2E00                    3004           MOVE.L  D0,D7               ;SAVE IT HERE
00A011C2  6A08                    3005           BPL.S   HX2DC
00A011C4  4487                    3006           NEG.L   D7             ;CHANGE TO POSITIVE
00A011C6  6B4E                    3007           BMI.S   HX2DC57        ;SPECIAL CASE (-0)
00A011C8  1CFC 002D               3008           MOVE.B  #'-',(A6)+     ;PUT IN NEG SIGN
00A011CC  4244                    3009  HX2DC    CLR.W   D4             ;FOR ZERO SURPRESS
00A011CE  7C0A                    3010           MOVEQ.L   #10,D6         ;COUNTER
00A011D0  7401                    3011  HX2DC0   MOVEQ.L   #1,D2          ;VALUE TO SUB
00A011D2  2206                    3012           MOVE.L  D6,D1          ;COUNTER
00A011D4  5381                    3013           SUBQ.L  #1,D1          ;ADJUST - FORM POWER OF TEN
00A011D6  671A                    3014           BEQ.S   HX2DC2         ;IF POWER IS ZERO
00A011D8  3602                    3015  HX2DC1   MOVE.W  D2,D3          ;D3=LOWER WORD
00A011DA  C6FC 000A               3016           MULU.W    #10,D3
00A011DE  4842                    3017           SWAP.W    D2             ;D2=UPPER WORD
00A011E0  C4FC 000A               3018           MULU.W    #10,D2
00A011E4  4843                    3019           SWAP.W    D3             ;ADD UPPER TO UPPER
00A011E6  D443                    3020           ADD.W   D3,D2
00A011E8  4842                    3021           SWAP.W    D2             ;PUT UPPER IN UPPER
00A011EA  4843                    3022           SWAP.W    D3             ;PUT LOWER IN LOWER
00A011EC  3403                    3023           MOVE.W  D3,D2          ;D2=UPPER & LOWER
00A011EE  5381                    3024           SUBQ.L  #1,D1
00A011F0  66E6                    3025           BNE     HX2DC1
00A011F2  4280                    3026  HX2DC2   CLR.L   D0             ;HOLDS SUB AMT
00A011F4  BE82                    3027  HX2DC22  CMP.L   D2,D7
00A011F6  6D06                    3028           BLT.S   HX2DC3         ;IF NO MORE SUB POSSIBLE
00A011F8  5280                    3029           ADDQ.L  #1,D0          ;BUMP SUBS
00A011FA  9E82                    3030           SUB.L   D2,D7          ;COUNT DOWN BY POWERS OF TEN
00A011FC  60F6                    3031           BRA.S   HX2DC22        ;DO MORE
00A011FE  4A00                    3032  HX2DC3   TST.B   D0             ;ANY VALUE?
00A01200  6604                    3033           BNE.S   HX2DC4
00A01202  4A44                    3034           TST.W   D4             ;ZERO SURPRESS
00A01204  6708                    3035           BEQ.S   HX2DC5
00A01206  0600 0030               3036  HX2DC4   ADDI.B  #$30,D0        ;BINARY TO ASCII
00A0120A  1CC0                    3037           MOVE.B  D0,(A6)+       ;PUT IN BUFFER
00A0120C  1800                    3038           MOVE.B  D0,D4          ;MARK AS NON ZERO SURPRESS
00A0120E  5386                    3039  HX2DC5   SUBQ.L  #1,D6          ;NEXT POWER
00A01210  66BE                    3040           BNE     HX2DC0
00A01212  4A44                    3041           TST.W   D4             ;SEE IF ANYTHING PRINTED
00A01214  6604                    3042           BNE.S   HX2DC6
00A01216  1CFC 0030               3043  HX2DC57  MOVE.B  #'0',(A6)+     ;PRINT AT LEST A ZERO
00A0121A  1CBC 0000               3044  HX2DC6   MOVE.B  #0,(A6)        ; PUT TERMINATOR
00A0121E  4CDF 00FE               3045           MOVEM.L (SP)+,D1-D7   ;RESTORE REGISTERS
00A01222  4E75                    3046           RTS                    ;END OF ROUTINE
00A01224                          3047  
00A01224                          3048  *
00A01224                          3049  *  PRINT HEX ROUTINES
00A01224                          3050  *
00A01224                          3051  *
00A01224                          3052  * PRINT 8 HEX CHARACTERS
00A01224                          3053  *
00A01224                          3054  *  D0,D1,D2 DESTROYED
00A01224                          3055  *
00A01224  4840                    3056  PNT8HX   SWAP    D0             FLIP REG HALVES
00A01226  610A                    3057           BSR.S   PNT4HX         DO TOP WORD
00A01228  4840                    3058           SWAP    D0             NOW DO LOWER WORD
00A0122A  6006                    3059           BRA.S   PNT4HX
00A0122C                          3060  * PRINT 6 HEX CHARACTERS
00A0122C  4840                    3061  PNT6HX   SWAP    D0             FLIP REGISTER HALVES
00A0122E  610A                    3062           BSR.S   PNT2HX
00A01230  4840                    3063           SWAP    D0             FLIP BACK REG HALVES
00A01232                          3064  * PRINT 4 HEX CHARACTERS IN D0.W
00A01232  3200                    3065  PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
00A01234  E058                    3066           ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
00A01236  6102                    3067           BSR.S   PNT2HX         PRINT IT
00A01238  3001                    3068           MOVE.W  D1,D0          PULL IT BACK
00A0123A                          3069  * PRINT 2 HEX CHARACTERS IN D0.B
00A0123A  3400                    3070  PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
00A0123C  E850                    3071           ROXR.W  #4,D0          FORM UPPER NIBBLE
00A0123E  6102                    3072           BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
00A01240  3002                    3073           MOVE.W  D2,D0          GET BACK FROM TEMP
00A01242                          3074  * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
00A01242                          3075  *
00A01242  0200 000F               3076  PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
00A01246  0000 0030               3077           ORI.B   #$30,D0        CONVERT TO ASCII
00A0124A  0C00 0039               3078           CMPI.B  #$39,D0        SEE IF IT IS>9
00A0124E  6F02                    3079           BLE.S   SAVHEX
00A01250  5E40                    3080           ADD     #7,D0          ADD TO MAKE 10=>A
00A01252  1CC0                    3081  SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
00A01254  4E75                    3082           RTS
00A01256                          3083  
00A01256                          3084  * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
00A01256                          3085  *        ENTER     D0 = VALUE
00A01256                          3086  *                  A6 = STORE POINTER
00A01256                          3087  *
00A01256  48E7 4780               3088  FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
00A0125A  2079 000000C0           3089           MOVEA.L RAMBASE.L,A0   ;LEA     OFFSET,A0
00A01260  7EFF                    3090           MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
00A01262  4286                    3091           CLR.L   D6             D6 = OFFSET POSITION
00A01264                          3092  
00A01264  2200                    3093  FREL10   MOVE.L  D0,D1
00A01266  4A90                    3094           TST.L   (A0)
00A01268  670C                    3095           BEQ.S   FREL15         ZERO OFFSET
00A0126A  9290                    3096           SUB.L   (A0),D1        D1 = DIFF.
00A0126C  6B08                    3097           BMI.S   FREL15         NO FIT
00A0126E                          3098  
00A0126E  B287                    3099           CMP.L   D7,D1
00A01270  6404                    3100           BCC.S   FREL15         OLD FIT BETTER
00A01272                          3101  
00A01272  2E01                    3102           MOVE.L  D1,D7          D7 = NEW BEST FIT
00A01274  2A06                    3103           MOVE.L  D6,D5          D5 = POSITION
00A01276                          3104  
00A01276  5888                    3105  FREL15   ADDQ.L  #4,A0
00A01278  5286                    3106           ADDQ.L  #1,D6
00A0127A  0C46 0008               3107           CMPI.W  #8,D6
00A0127E  66E4                    3108           BNE     FREL10         MORE OFFSETS TO CHECK
00A01280                          3109  
00A01280  4A87                    3110           TST.L   D7
00A01282  6B1E                    3111           BMI.S   FREL25         NO FIT
00A01284  4A46                    3112           TST     D6
00A01286  6608                    3113           BNE.S   FREL20
00A01288  4AB9 000000C0           3114           TST.L   RAMBASE.L      ;TST.L    OFFSET
00A0128E  6712                    3115           BEQ.S   FREL25         R0 = 000000; NO FIT
00A01290                          3116  
00A01290  2007                    3117  FREL20   MOVE.L  D7,D0
00A01292  6198                    3118           BSR     PNT6HX         FORMAT OFFSET
00A01294  1CFC 002B               3119           MOVE.B  #'+',(A6)+     +
00A01298  1CFC 0052               3120           MOVE.B  #'R',(A6)+     R
00A0129C  0605 0030               3121           ADDI.B  #'0',D5        MAKE ASCII
00A012A0  600A                    3122           BRA.S   FREL30
00A012A2                          3123  
00A012A2  6188                    3124  FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
00A012A4  1A3C 0020               3125           MOVE.B  #BLANK,D5
00A012A8  1CC5                    3126           MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
00A012AA  1CC5                    3127           MOVE.B  D5,(A6)+
00A012AC  1CC5                    3128  FREL30   MOVE.B  D5,(A6)+
00A012AE                          3129  
00A012AE  4CDF 01E2               3130           MOVEM.L (A7)+,D1/D5-D7/A0
00A012B2  4E75                    3131           RTS
00A012B4                          3132  
00A012B4                          3133  ;******************************************************************************
00A012B4                          3134  
00A012B4                          3135  
00A012B4                          3136  ; DISPLAY USER REGISTERS D0-D7 AND A0-A7
00A012B4                          3137  ;
00A012B4                          3138  
00A012B4  47F9 00A01944           3139  DISPLAY_REG  LEA.L REGISTER_DISP.L,A3
00A012BA  6100 FAC0               3140               BSR PSTR
00A012BE                          3141  
00A012BE  2C79 000000C0           3142  DISPLAY_REG1 MOVEA.L RAMBASE.L,A6
00A012C4  6100 FAC4               3143               BSR NEW_LINE
00A012C8  6100 FAC0               3144               BSR NEW_LINE
00A012CC  267C 00A01AC3           3145               MOVEA.L #PC_REG,A3
00A012D2  6100 FAA8               3146               BSR PSTR
00A012D6  202E 00F0               3147               MOVE.L USER_PC(A6),D0
00A012DA  6100 FC88               3148               BSR OUT6X
00A012DE                          3149  
00A012DE  6100 FABC               3150               BSR SPACE
00A012E2                          3151  
00A012E2  267C 00A01AC7           3152               MOVEA.L #SR_REG,A3
00A012E8  6100 FA92               3153               BSR PSTR
00A012EC  302E 00EA               3154               MOVE.W USER_SR(A6),D0
00A012F0  6100 FC6A               3155               BSR OUT4X
00A012F4                          3156  
00A012F4                          3157  ; NOW PRINT FLAG LOGIC IN BINARY
00A012F4  1800                    3158               MOVE.B D0,D4       ; SAVE TO D4
00A012F6                          3159  
00A012F6  E70C                    3160               LSL.B #3,D4        ; BIT POSITION BEFORE SHIFTING OUT
00A012F8                          3161  
00A012F8  6100 FAA2               3162               BSR SPACE
00A012FC  267C 00A01AD7           3163               MOVEA.L #X_FLAG,A3
00A01302  6100 FA78               3164               BSR PSTR
00A01306  E30C                    3165               LSL.B #1,D4
00A01308  6100 00DA               3166               BSR PRINT_BIT
00A0130C                          3167  
00A0130C  6100 FA8E               3168               BSR SPACE
00A01310  267C 00A01AD4           3169               MOVEA.L #N_FLAG,A3
00A01316  6100 FA64               3170               BSR PSTR
00A0131A  E30C                    3171               LSL.B #1,D4
00A0131C  6100 00C6               3172               BSR PRINT_BIT
00A01320                          3173  
00A01320  6100 FA7A               3174               BSR SPACE
00A01324  267C 00A01AD1           3175               MOVEA.L #Z_FLAG,A3
00A0132A  6100 FA50               3176               BSR PSTR
00A0132E  E30C                    3177               LSL.B #1,D4
00A01330  6100 00B2               3178               BSR PRINT_BIT
00A01334                          3179  
00A01334  6100 FA66               3180               BSR SPACE
00A01338  267C 00A01ACE           3181               MOVEA.L #V_FLAG,A3
00A0133E  6100 FA3C               3182               BSR PSTR
00A01342  E30C                    3183               LSL.B #1,D4
00A01344  6100 009E               3184               BSR PRINT_BIT
00A01348                          3185  
00A01348  6100 FA52               3186               BSR SPACE
00A0134C  267C 00A01ACB           3187               MOVEA.L #CARRY_FLAG,A3
00A01352  6100 FA28               3188               BSR PSTR
00A01356  E30C                    3189               LSL.B #1,D4
00A01358  6100 008A               3190               BSR PRINT_BIT
00A0135C                          3191  
00A0135C                          3192  
00A0135C  6100 FA2C               3193               BSR NEW_LINE
00A01360  143C 0000               3194               MOVE.B #0,D2
00A01364                          3195  
00A01364  2C79 000000C0           3196               MOVEA.L RAMBASE.L,A6
00A0136A                          3197  
00A0136A  47EE 00AA               3198               LEA.L USER_DATA(A6),A3
00A0136E                          3199  
00A0136E  103C 0044               3200  REG1         MOVE.B #'D',D0
00A01372  6100 F9D0               3201               BSR COUT
00A01376  1002                    3202               MOVE.B D2,D0
00A01378  6100 FBC0               3203               BSR OUT1X
00A0137C  103C 003D               3204               MOVE.B #'=',D0
00A01380  6100 F9C2               3205               BSR COUT
00A01384                          3206  
00A01384  201B                    3207               MOVE.L (A3)+,D0
00A01386  6100 FBE4               3208               BSR OUT8X
00A0138A  5202                    3209               ADDQ.B #1,D2
00A0138C  0C02 0008               3210               CMPI.B #8,D2
00A01390  6710                    3211               BEQ.S REG4
00A01392  6100 FA08               3212               BSR SPACE
00A01396                          3213  
00A01396  0C02 0004               3214               CMPI.B #4,D2
00A0139A  66D2                    3215               BNE.S REG1
00A0139C  6100 F9EC               3216               BSR NEW_LINE
00A013A0  60CC                    3217               BRA.S REG1
00A013A2                          3218  
00A013A2  6100 F9E6               3219  REG4         BSR NEW_LINE
00A013A6  143C 0000               3220               MOVE.B #0,D2
00A013AA                          3221  
00A013AA  103C 0041               3222  REG3         MOVE.B #'A',D0
00A013AE  6100 F994               3223               BSR COUT
00A013B2  1002                    3224               MOVE.B D2,D0
00A013B4  6100 FB84               3225               BSR OUT1X
00A013B8  103C 003D               3226               MOVE.B #'=',D0
00A013BC  6100 F986               3227               BSR COUT
00A013C0                          3228  
00A013C0  201B                    3229               MOVE.L (A3)+,D0
00A013C2  6100 FBA8               3230               BSR OUT8X
00A013C6  5202                    3231               ADDQ.B #1,D2
00A013C8  0C02 0008               3232               CMPI.B #8,D2
00A013CC  6710                    3233               BEQ.S REG2
00A013CE  6100 F9CC               3234               BSR SPACE
00A013D2                          3235  
00A013D2  0C02 0004               3236               CMPI.B #4,D2
00A013D6  66D2                    3237               BNE.S REG3
00A013D8  6100 F9B0               3238               BSR NEW_LINE
00A013DC  60CC                    3239               BRA.S REG3
00A013DE                          3240  
00A013DE  6100 F9AA               3241  REG2         BSR NEW_LINE
00A013E2  4E75                    3242               RTS
00A013E4                          3243  
00A013E4                          3244  
00A013E4                          3245  
00A013E4                          3246  
00A013E4                          3247  ; SEND '0' OR '1' TO SCREEN
00A013E4                          3248  
00A013E4  650A                    3249  PRINT_BIT   BCS.S WRITE_1
00A013E6  103C 0030               3250              MOVE.B #'0',D0
00A013EA  6100 F958               3251              BSR COUT
00A013EE  4E75                    3252              RTS
00A013F0                          3253  
00A013F0  103C 0031               3254  WRITE_1     MOVE.B #'1',D0
00A013F4  6100 F94E               3255              BSR COUT
00A013F8  4E75                    3256              RTS
00A013FA                          3257  
00A013FA                          3258  ; JUMP TO USER PROGRAM
00A013FA                          3259  ; 
00A013FA                          3260  
00A013FA  47F9 00A01925           3261  JUMP       LEA.L JUMP_TO.L,A3
00A01400  6100 F97A               3262             BSR PSTR
00A01404                          3263  
00A01404  2C79 000000C0           3264             MOVEA.L RAMBASE.L,A6
00A0140A  202E 00F0               3265             MOVE.L USER_PC(A6),D0
00A0140E  6100 FB54               3266             BSR OUT6X
00A01412  103C 003E               3267             MOVE.B #'>',D0
00A01416                          3268  
00A01416  6100 F92C               3269             BSR COUT
00A0141A                          3270  
00A0141A  6100 F9CE               3271             BSR GET_HEX
00A0141E                          3272  
00A0141E  08AE 0000 0024          3273             BCLR.B #BIT_ESC,FLAG(A6) ; TEST BIT_ESC BIT
00A01424  6614                    3274             BNE.S ABORT             ; IF BIT = 1 THEN EXIT
00A01426                          3275  
00A01426  08AE 0001 0024          3276             BCLR.B #1,FLAG(A6)  ; CHECK IF ENTER KEY PRESSED
00A0142C  660E                    3277             BNE.S JUMP1         ; RUN USER PROGRAM
00A0142E                          3278  
00A0142E  4286                    3279             CLR.L D6
00A01430  6100 FC40               3280             BSR GET_ADDRESS1
00A01434                          3281  
00A01434                          3282  ; GOT D6 FOR DESTINATION
00A01434                          3283  
00A01434  2D46 00F0               3284             MOVE.L D6,USER_PC(A6)  ; SAVE TO USER PC
00A01438  6002                    3285             BRA.S JUMP1
00A0143A                          3286  
00A0143A  4E75                    3287  ABORT      RTS                 ; GET BACK MONITOR
00A0143C                          3288  
00A0143C  2C79 000000C0           3289  JUMP1      MOVEA.L RAMBASE.L,A6     ; POINTED TO START MONITOR RAM
00A01442                          3290  
00A01442  206E 00E6               3291             MOVEA.L USER_USP(A6),A0
00A01446  4E60                    3292             MOVE.L  A0,USP           ; WRITE TO REAL USER STACK (A7)
00A01448                          3293  
00A01448  2F2E 00F0               3294             MOVE.L  USER_PC(A6),-(SP)     ; PUSH PC
00A0144C                          3295  
00A0144C  08AE 0005 00EA          3296             BCLR.B   #5,USER_SR(A6) ; SET USER MODE     
00A01452                          3297  
00A01452  3F2E 00EA               3298             MOVE.W  USER_SR(A6),-(SP)
00A01456  4CEE 7FFF 00AA          3299             MOVEM.L USER_DATA(A6),D0-D7/A0-A6
00A0145C  4E73                    3300             RTE                     ; JUMP TO USER PROGRAM
00A0145E                          3301  
00A0145E                          3302  
00A0145E                          3303  ; TRACE JUMP
00A0145E                          3304  ; SET TRACE BIT IN SAVED STATUS REGISTER
00A0145E                          3305  
00A0145E  47F9 00A01A33           3306  TRACE_JUMP LEA.L TRACE_MSG.L,A3
00A01464  6100 F916               3307             BSR PSTR
00A01468  6100 F920               3308             BSR NEW_LINE
00A0146C                          3309  
00A0146C  2C79 000000C0           3310             MOVEA.L RAMBASE.L,A6
00A01472  286E 00F0               3311             MOVEA.L USER_PC(A6),A4
00A01476  4CD4 0007               3312             MOVEM.L (A4),D0-D2
00A0147A  2A79 000000C0           3313             MOVEA.L RAMBASE.L,A5
00A01480  DBFC 00000026           3314             ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00A01486                          3315  
00A01486  4EB9 00A007C4           3316             JSR  DCODE68K.L
00A0148C                          3317  
00A0148C  6100 F8FC               3318             BSR NEW_LINE
00A01490  6100 00F8               3319             BSR PRINT_LINE
00A01494                          3320  
00A01494  2C79 000000C0           3321             MOVEA.L RAMBASE.L,A6
00A0149A                          3322  
00A0149A  08EE 0007 00EA          3323             BSET.B #TRACE_BIT,USER_SR(A6)  ; SET TRACE BIT
00A014A0  609A                    3324             BRA JUMP1                    ; BORROW JUMP ROUTINE
00A014A2                          3325  
00A014A2                          3326  ; CLEAR MONITOR RAM
00A014A2                          3327  
00A014A2  2C79 000000C0           3328  CLEAR_MON_RAM MOVEA.L RAMBASE.L,A6
00A014A8  3E3C 0200               3329                MOVE.W  #512,D7
00A014AC                          3330  
00A014AC  3CFC 0000               3331  CLEAR1        MOVE.W #0000,(A6)+
00A014B0  51CF FFFA               3332                DBRA D7,CLEAR1
00A014B4  4E75                    3333                RTS
00A014B6                          3334  
00A014B6                          3335  
00A014B6                          3336  
00A014B6                          3337  ; MODIFY USER REGISTERS
00A014B6                          3338  
00A014B6  2C79 000000C0           3339  MODIFY_REG    MOVEA.L RAMBASE.L,A6
00A014BC  6100 F8AA               3340                BSR CIN
00A014C0  C03C 00DF               3341                AND.B #%11011111,D0
00A014C4  0C00 0050               3342                CMPI.B #'P',D0
00A014C8  661A                    3343                BNE.S DATA_REG1
00A014CA                          3344  
00A014CA  103C 0043               3345                MOVE.B #'C',D0
00A014CE  6100 F874               3346                BSR COUT
00A014D2  103C 003D               3347                MOVE.B #'=',D0
00A014D6  6100 F86C               3348                BSR COUT
00A014DA  6100 FB90               3349                BSR GET_ADDRESS
00A014DE                          3350  
00A014DE  2D46 00F0               3351                MOVE.L D6,USER_PC(A6)
00A014E2  4E75                    3352                RTS
00A014E4                          3353  
00A014E4  0C00 0044               3354  DATA_REG1     CMPI.B #'D',D0
00A014E8  6622                    3355                BNE.S ADDRESS_REG2
00A014EA  6100 F87C               3356                BSR CIN
00A014EE  0400 0030               3357                SUB.B #'0',D0
00A014F2                          3358  
00A014F2  4287                    3359                CLR.L D7
00A014F4  1E00                    3360                MOVE.B D0,D7
00A014F6                          3361  
00A014F6  103C 003D               3362                MOVE.B #'=',D0
00A014FA  6100 F848               3363                BSR COUT
00A014FE                          3364  
00A014FE  6100 FB4A               3365                BSR GET_32BIT
00A01502                          3366  
00A01502  E50F                    3367                LSL.B #2,D7        ; D7*4
00A01504  DCC7                    3368                ADDA.W D7,A6
00A01506  2D46 00AA               3369                MOVE.L D6,USER_DATA(A6)  ; SAVE TO USER DATA REGISTERS
00A0150A                          3370  
00A0150A  4E75                    3371                RTS
00A0150C                          3372                
00A0150C  0C00 0041               3373  ADDRESS_REG2  CMPI.B #'A',D0
00A01510  6620                    3374                BNE.S WHAT3
00A01512  6100 F854               3375                BSR CIN
00A01516  0400 0030               3376                SUB.B #'0',D0
00A0151A                          3377  
00A0151A  4287                    3378                CLR.L D7
00A0151C  1E00                    3379                MOVE.B D0,D7
00A0151E                          3380  
00A0151E  103C 003D               3381                MOVE.B #'=',D0
00A01522  6100 F820               3382                BSR COUT
00A01526                          3383  
00A01526  6100 FB22               3384                BSR GET_32BIT
00A0152A                          3385  
00A0152A  E50F                    3386                LSL.B #2,D7        ; D7*4
00A0152C  DCC7                    3387                ADDA.W D7,A6
00A0152E  2D46 00CA               3388                MOVE.L D6,USER_ADDR(A6)  ; SAVE TO USER ADDRESS REGISTERS
00A01532                          3389  
00A01532  4E75                    3390  WHAT3         RTS
00A01534                          3391  
00A01534                          3392  ;=======================================================================
00A01534                          3393  ; TRAP #N SERVICES
00A01534                          3394  ;
00A01534                          3395  
00A01534                          3396  SERVICE_TRAP0   ;MOVE.B ACIA2D.L,D0
00A01534                          3397                  ;BSR COUT
00A01534  46FC 2000               3398                  MOVE.W #INT_ON,SR   ; REENTER SUPERVISOR MODE
00A01538                          3399  
00A01538  4EF9 00A00C10           3400                  JMP LOOP.L        ; GET BACK MONITOR
00A0153E                          3401  
00A0153E                          3402  
00A0153E                          3403  ; DISASSEMBLE THE MACHNIE CODE INTO MNEMONIC
00A0153E                          3404  
00A0153E  47F9 00A01973           3405  DISASSEMBLE     LEA.L DIS.L,A3
00A01544  6100 F836               3406                  BSR PSTR
00A01548                          3407  
00A01548                          3408             ;   LEA.L $102000.L,A4
00A01548                          3409  
00A01548  2C79 000000C0           3410                 MOVEA.L RAMBASE.L,A6
00A0154E                          3411  
00A0154E  3E3C 0013               3412                 MOVE.W #19,D7       ; 20 LINES DISASSEMBLE
00A01552                          3413  
00A01552  286E 00A6               3414                 MOVEA.L POINTER_NOW(A6),A4
00A01556                          3415  
00A01556  4CD4 0007               3416  DIS1           MOVEM.L (A4),D0-D2
00A0155A  2A79 000000C0           3417                 MOVEA.L RAMBASE.L,A5
00A01560  DBFC 00000026           3418                 ADDA.L #BUFFER,A5      ; LOAD A5 WITH $130000+BUFFER
00A01566                          3419  
00A01566  48E7 0102               3420                 MOVEM.L A6/D7,-(SP)
00A0156A                          3421  
00A0156A  4EB9 00A007C4           3422                 JSR  DCODE68K.L
00A01570                          3423  
00A01570  6100 F818               3424                 BSR NEW_LINE
00A01574  6100 0014               3425                 BSR PRINT_LINE
00A01578                          3426  
00A01578  4CDF 4080               3427                 MOVEM.L (SP)+,D7/A6
00A0157C                          3428  
00A0157C  51CF FFD8               3429                 DBRA D7,DIS1
00A01580                          3430  
00A01580  2D4C 00A6               3431                 MOVE.L A4,POINTER_NOW(A6) ; NEXT BLOCK
00A01584  6100 F804               3432                 BSR NEW_LINE
00A01588  4E75                    3433                 RTS
00A0158A                          3434  
00A0158A  101D                    3435  PRINT_LINE     MOVE.B (A5)+,D0
00A0158C  6100 F7B6               3436                 BSR COUT
00A01590  BDCD                    3437                 CMPA.L A5,A6
00A01592  66F6                    3438                 BNE.S PRINT_LINE
00A01594  4E75                    3439                 RTS
00A01596                          3440  
00A01596                          3441  
00A01596                          3442  ; UPLOAD BINARY IMAGE FROM MEMORY
00A01596                          3443  ; SEND IT TO TERMINAL AS HEX CODE IN LONG WORD FORMAT
00A01596                          3444  ; USE FOR DISASSEMBLER HEX CODE PREPARATION
00A01596                          3445  
00A01596  47F9 00A01999           3446  UPLOAD        LEA.L UPLOAD1.L,A3
00A0159C  6100 F7DE               3447                BSR PSTR
00A015A0  6100 F7C6               3448                BSR CIN
00A015A4                          3449  
00A015A4  4BF9 00100400           3450                LEA.L $100400.L,A5    ; START
00A015AA  4DF9 00102000           3451                LEA.L $102000.L,A6    ; STOP
00A015B0                          3452  
00A015B0  6100 F7D8               3453  UPLOAD3       BSR NEW_LINE
00A015B4  47F9 00A019C3           3454                LEA.L STRING1.L,A3
00A015BA  6100 F7C0               3455                BSR PSTR
00A015BE                          3456  
00A015BE  3E3C 0007               3457                MOVE.W #7,D7
00A015C2                          3458  
00A015C2  103C 0024               3459  UPLOAD2       MOVE.B #'$',D0
00A015C6  6100 F77C               3460                BSR COUT
00A015CA  201D                    3461                MOVE.L (A5)+,D0
00A015CC  6100 F99E               3462                BSR OUT8X
00A015D0  103C 002C               3463                MOVE.B #',',D0
00A015D4  6100 F76E               3464                BSR COUT
00A015D8  51CF FFE8               3465                DBRA D7,UPLOAD2
00A015DC                          3466  
00A015DC  BDCD                    3467                CMPA.L A5,A6
00A015DE  6ED0                    3468                BGT  UPLOAD3
00A015E0                          3469  
00A015E0  4E75                    3470                RTS
00A015E2                          3471  
00A015E2                          3472  ; ABOUT zBUG V1.0
00A015E2                          3473  
00A015E2  47F9 00A019CA           3474  ABOUT         LEA.L ABOUTZBUG.L,A3
00A015E8  6100 F792               3475                BSR PSTR
00A015EC  4E75                    3476                RTS
00A015EE                          3477  
00A015EE                          3478  ; VIEW USER STACK
00A015EE                          3479  
00A015EE  47F9 00A01A44           3480  VIEW_USP      LEA.L VIEW.L,A3
00A015F4  6100 F786               3481                BSR PSTR
00A015F8                          3482  
00A015F8  6100 F790               3483                BSR NEW_LINE
00A015FC                          3484  
00A015FC  227C 009FFFF4           3485                MOVEA.L #SUPER_STACK+USER_STACK,A1 ; TOP OF USER STACK
00A01602                          3486  
00A01602  41E9 FFE0               3487                LEA.L -32(A1),A0    ; EACH COMPOSED OF TWO BYTES
00A01606                          3488  
00A01606  3E3C 0010               3489                MOVE.W #16,D7
00A0160A  2C79 000000C0           3490                MOVEA.L RAMBASE.L,A6
00A01610                          3491  
00A01610                          3492  
00A01610  2008                    3493  VIEW1         MOVE.L A0,D0
00A01612                          3494  
00A01612  2F00                    3495                MOVE.L D0,-(SP)
00A01614                          3496  
00A01614  B1EE 00E6               3497                CMPA.L USER_USP(A6),A0
00A01618  660C                    3498                BNE.S NOT_TOS
00A0161A                          3499  
00A0161A  47F9 00A01AB3           3500                LEA.L TOP_OF_STACK.L,A3
00A01620  6100 F75A               3501                BSR PSTR
00A01624  600A                    3502                BRA.S SKIP_PRINT_BLANK
00A01626                          3503  
00A01626  47F9 00A01ABB           3504  NOT_TOS       LEA.L BLANK_BLOCK.L,A3
00A0162C  6100 F74E               3505                BSR PSTR
00A01630                          3506  
00A01630                          3507  SKIP_PRINT_BLANK
00A01630                          3508  
00A01630  201F                    3509                MOVE.L (SP)+,D0
00A01632  6100 F930               3510                BSR OUT6X
00A01636  6100 F764               3511                BSR SPACE
00A0163A                          3512  
00A0163A  103C 005B               3513                MOVE.B #'[',D0
00A0163E  6100 F704               3514                BSR COUT
00A01642                          3515  
00A01642  3018                    3516                MOVE.W (A0)+,D0
00A01644  6100 F916               3517                BSR OUT4X
00A01648                          3518  
00A01648  103C 005D               3519                MOVE.B #']',D0
00A0164C  6100 F6F6               3520                BSR COUT
00A01650                          3521  
00A01650  6100 F738               3522                BSR NEW_LINE
00A01654  51CF FFBA               3523                DBRA D7,VIEW1
00A01658                          3524  
00A01658  4E75                    3525                RTS
00A0165A                          3526  
00A0165A                          3527  
00A0165A                          3528  ; LOAD SP WITH [RAM] AND PC [RAM+4]
00A0165A                          3529  
00A0165A  2E79 00000000           3530  BOOT_RAM      MOVEA.L RAM.L,SP
00A01660  2079 00000004           3531                MOVEA.L 4+RAM.L,A0
00A01666  4ED0                    3532                JMP     (A0)
00A01668                          3533  
00A01668                          3534  ; SERVICE BUS ERROR
00A01668  2679 00A01A6F           3535  SERVICE_BUSERROR MOVEA.L BUSERROR_MSG.L,A3
00A0166E  6000 001C               3536                  BRA SERVICE_MSG
00A01672                          3537  
00A01672                          3538  ; SERVICE ADDRESS ERROR
00A01672  2679 00A01A7C           3539  SERVICE_ADDRESSERR MOVEA.L ADDRESSERR_MSG.L,A3
00A01678  6000 0012               3540                  BRA SERVICE_MSG
00A0167C                          3541  
00A0167C                          3542  ; SERVICE ILLEGAL INTSRUCTION
00A0167C  2679 00A01A8D           3543  SERVICE_ILLEGAL MOVEA.L ILLEGAL_MSG.L,A3
00A01682  6000 0008               3544                  BRA SERVICE_MSG
00A01686                          3545  
00A01686                          3546  ; SERVICE ZERO DIVIDE
00A01686  2679 00A01AA4           3547  SERVICE_ZERODIV MOVEA.L ZERODIV_MSG.L,A3
00A0168C  6100 F6EE               3548  SERVICE_MSG     BSR PSTR
00A01690  4E40                    3549                  TRAP #0
00A01692                          3550  
00A01692                          3551  ; vector table initrize
00A01692  41FA 0026               3552  VECINIT   LEA   VECTABLE(pc),a0
00A01696  327C 0008               3553            MOVEA.W   #$0008,a1
00A0169A  700A                    3554            MOVEQ     #10,D0
00A0169C  22D8                    3555  VECINIT1  MOVE.L    (a0)+,(a1)+
00A0169E  5300                    3556            SUBQ.B    #1,D0
00A016A0  66FA                    3557            BNE       VECINIT1
00A016A2  327C 0060               3558            MOVEA.W   #$60,A1
00A016A6  7018                    3559            MOVEQ     #24,D0
00A016A8  22D8                    3560  VECINIT2  MOVE.L    (a0)+,(a1)+
00A016AA  5300                    3561            SUBQ.B    #1,D0
00A016AC  66FA                    3562            BNE       VECINIT2
00A016AE  327C 00C0               3563            MOVEA.W   #$C0,A1
00A016B2  22BC 009F0000           3564            MOVE.L    #RAMBASE_INIT,(a1)
00A016B8  4E75                    3565            RTS
00A016BA                          3566  
00A016BA                          3567  ;----------------- M68000 EXCEPTION VECTOR TABLE -----------------------------
00A016BA= 00A01668                3568  VECTABLE  DC.L  SERVICE_BUSERROR     ; 2 Bus error
00A016BE= 00A01672                3569            DC.L  SERVICE_ADDRESSERR   ; 3 Address error
00A016C2= 00A0167C                3570            DC.L  SERVICE_ILLEGAL      ; 4 Illegal instruction
00A016C6= 00A01686                3571            DC.L  SERVICE_ZERODIV      ; 5 Zero divide
00A016CA= 00A01534                3572            DC.L  SERVICE_TRAP0        ; 6 CHK instruction
00A016CE= 00A01534                3573            DC.L  SERVICE_TRAP0        ; 7 TRAPV instruction
00A016D2= 00A01534                3574            DC.L  SERVICE_TRAP0        ; 8 Privilege violation
00A016D6= 00A01534                3575            DC.L  SERVICE_TRAP0        ; 9 Trace
00A016DA= 00A01534                3576            DC.L  SERVICE_TRAP0    ; 10 Line 1010 emulator
00A016DE= 00A01534                3577            DC.L  SERVICE_TRAP0    ; 11 Line 1111 emulator
00A016E2                          3578  
00A016E2= 00A01534                3579            DC.L  SERVICE_TRAP0    ; 24 Spurious Interupt
00A016E6= 00A01534                3580            DC.L  SERVICE_TRAP0    ; 25 LEVEL 1 Interupt autovector
00A016EA= 00A01534                3581            DC.L  SERVICE_TRAP0    ; 26 LEVEL 2 Interupt autovector
00A016EE= 00A01534                3582            DC.L  SERVICE_TRAP0    ; 27 LEVEL 3 Interupt autovector
00A016F2= 00A01534                3583            DC.L  SERVICE_TRAP0    ; 28 LEVEL 4 Interupt autovector
00A016F6= 00A01534                3584            DC.L  SERVICE_TRAP0    ; 29 LEVEL 5 Interupt autovector
00A016FA= 00A01534                3585            DC.L  SERVICE_TRAP0    ; 30 LEVEL 6 Interupt autovector
00A016FE= 00A01534                3586            DC.L  SERVICE_TRAP0    ; 31 LEVEL 7 Interupt autovector
00A01702= 00A01534                3587            DC.L  SERVICE_TRAP0    ; 32 TRAP #0
00A01706= 00A01534                3588            DC.L  SERVICE_TRAP0    ; 33 TRAP #1
00A0170A= 00A01534                3589            DC.L  SERVICE_TRAP0    ; 34 TRAP #2
00A0170E= 00A01534                3590            DC.L  SERVICE_TRAP0    ; 35 TRAP #3
00A01712= 00A01534                3591            DC.L  SERVICE_TRAP0    ; 36 TRAP #4
00A01716= 00A01534                3592            DC.L  SERVICE_TRAP0    ; 37 TRAP #5
00A0171A= 00A01534                3593            DC.L  SERVICE_TRAP0    ; 38 TRAP #6
00A0171E= 00A01534                3594            DC.L  SERVICE_TRAP0    ; 39 TRAP #7
00A01722= 00A01534                3595            DC.L  SERVICE_TRAP0    ; 40 TRAP #8
00A01726= 00A01534                3596            DC.L  SERVICE_TRAP0    ; 41 TRAP #9
00A0172A= 00A01534                3597            DC.L  SERVICE_TRAP0    ; 42 TRAP #10
00A0172E= 00A01534                3598            DC.L  SERVICE_TRAP0    ; 43 TRAP #11
00A01732= 00A01534                3599            DC.L  SERVICE_TRAP0    ; 44 TRAP #12
00A01736= 00A01534                3600            DC.L  SERVICE_TRAP0    ; 45 TRAP #13
00A0173A= 00A01534                3601            DC.L  SERVICE_TRAP0    ; 46 TRAP #14
00A0173E= 00A01534                3602            DC.L  SERVICE_TRAP0    ; 47 TRAP #15
00A01742                          3603  ;----------------------- STRING CONSTANT -------------------------------------
00A01742                          3604  
00A01742= 0D 0A 7A 42 75 67 20    3605  TITLE  DC.B 13,10,'zBug V1.0.3 for ARTY68K & GD DAZZLER',13,10,0
          56 31 2E 30 2E 33 20  
          66 6F 72 20 41 52 54  
          59 36 38 4B 20 26 20  
          47 44 20 44 41 5A 5A  
          4C 45 52 0D 0A 00     
00A0176B= 0D 0A 7A 42 75 67 20    3611  TITLE1 DC.B 13,10,'zBug V1.0.3 for ARTY68K & GD DAZZLER (press ? for help)',13,10,0
          56 31 2E 30 2E 33 20  
          66 6F 72 20 41 52 54  
          59 36 38 4B 20 26 20  
          47 44 20 44 41 5A 5A  
          4C 45 52 20 28 70 72  
          65 73 73 20 3F 20 66  
          6F 72 20 68 65 6C 70  
          29 0D 0A 00           
00A017A7                          3620  
00A017A7= 3E 00                   3621  PROMPT DC.B '>',0
00A017A9                          3622  
00A017A9= 6C 65 61 72 20 6D 65    3623  CLEAR  DC.B 'lear memory with 0x0000',0
          6D 6F 72 79 20 77 69  
          74 68 20 30 78 30 30  
          30 30 00              
00A017C1= 69 6C 6C 20 6D 65 6D    3627  FILL   DC.B 'ill memory with 0xFFFF',0 
          6F 72 79 20 77 69 74  
          68 20 30 78 46 46 46  
          46 00                 
00A017D8= 0D 0A 0A 73 74 61 72    3631  START  DC.B 13,10,10,'start address=',0
          74 20 61 64 64 72 65  
          73 73 3D 00           
00A017EA= 0D 0A 73 74 6F 70 20    3634  STOP   DC.B 13,10,'stop  address=',0
          20 61 64 64 72 65 73  
          73 3D 00              
00A017FB= 0D 0A 64 6F 6E 65 2E    3637  DONE   DC.B 13,10,'done...',0
          2E 2E 00              
00A01805                          3639  
00A01805= 64 69 74 20 6D 65 6D    3640  EDIT1  DC.B 'dit memory (quit: X, next address: ENTER)',0
          6F 72 79 20 28 71 75  
          69 74 3A 20 58 2C 20  
          6E 65 78 74 20 61 64  
          64 72 65 73 73 3A 20  
          45 4E 54 45 52 29 00  
00A0182F= 0D 0A 0A 41 64 64 72    3646  EDIT   DC.B 13,10,10,'Address=',0
          65 73 73 3D 00        
00A0183B= 20 20 72 6F 6D 00       3648  ROM    DC.B '  rom',0
00A01841                          3649  
00A01841= 65 77 20 32 34 2D 62    3650  NEW    DC.B 'ew 24-bit pointer',0
          69 74 20 70 6F 69 6E  
          74 65 72 00           
00A01853                          3653  
00A01853= 75 69 63 6B 20 68 6F    3654  QUICK  DC.B 'uick home, get back to start of RAM!',13,10,0
          6D 65 2C 20 67 65 74  
          20 62 61 63 6B 20 74  
          6F 20 73 74 61 72 74  
          20 6F 66 20 52 41 4D  
          21 0D 0A 00           
00A0187A= 65 78 20 64 75 6D 70    3660  HEX    DC.B 'ex dump memory',13,10,10
          20 6D 65 6D 6F 72 79  
          0D 0A 0A              
00A0188B= 41 44 44 52 45 53 53    3663         DC.B 'ADDRESS  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
          20 20 30 20 20 31 20  
          20 32 20 20 33 20 20  
          34 20 20 35 20 20 36  
          20 20 37 20 20 38 20  
          20 39 20 20 41 20 20  
          42 20 20 43 20 20 44  
          20 20 45 20 20 46 00  
00A018C3                          3671  
00A018C3= 6F 61 64 20 4D 6F 74    3672  LOAD   DC.B 'oad Motorola s-record (accept s1,s2 and s8) quit: ESC',13,10,0
          6F 72 6F 6C 61 20 73  
          2D 72 65 63 6F 72 64  
          20 28 61 63 63 65 70  
          74 20 73 31 2C 73 32  
          20 61 6E 64 20 73 38  
          29 20 71 75 69 74 3A  
          20 45 53 43 0D 0A 00  
00A018FB                          3680  
00A018FB= 20 62 79 74 65 73 20    3681  NUMBER DC.B ' bytes loaded, ',0
          6C 6F 61 64 65 64 2C  
          20 00                 
00A0190B= 20 72 65 63 6F 72 64    3684  ERROR  DC.B ' records checksum error',13,10,0
          73 20 63 68 65 63 6B  
          73 75 6D 20 65 72 72  
          6F 72 0D 0A 00        
00A01925                          3688  
00A01925= 75 6D 70 20 74 6F 20    3689  JUMP_TO DC.B 'ump to user program ',0 
          75 73 65 72 20 70 72  
          6F 67 72 61 6D 20 00  
00A0193A                          3692  
00A0193A= 20 54 52 41 50 20 30    3693  TRAP_0 DC.B ' TRAP 0 !',0
          20 21 00              
00A01944                          3695  
00A01944= 65 67 69 73 74 65 72    3696  REGISTER_DISP DC.B 'egister(user) display (A7= user stack pointer)',0
          28 75 73 65 72 29 20  
          64 69 73 70 6C 61 79  
          20 28 41 37 3D 20 75  
          73 65 72 20 73 74 61  
          63 6B 20 70 6F 69 6E  
          74 65 72 29 00        
00A01973                          3703  
00A01973= 69 73 61 73 73 65 6D    3704  DIS    DC.B 'isassemble machine code to mnemonic',13,10,0
          62 6C 65 20 6D 61 63  
          68 69 6E 65 20 63 6F  
          64 65 20 74 6F 20 6D  
          6E 65 6D 6F 6E 69 63  
          0D 0A 00              
00A01999                          3710  
00A01999= 70 6C 6F 61 64 20 62    3711  UPLOAD1 DC.B 'pload binary image, hit any key to begin ',0
          69 6E 61 72 79 20 69  
          6D 61 67 65 2C 20 68  
          69 74 20 61 6E 79 20  
          6B 65 79 20 74 6F 20  
          62 65 67 69 6E 20 00  
00A019C3= 20 20 44 46 4C 20 00    3717  STRING1 DC.B '  DFL ',0
00A019CA                          3718  
00A019CA= 62 6F 75 74 20 7A 42    3719  ABOUTZBUG DC.B 'bout zBuG V1.0',13,10,10
          75 47 20 56 31 2E 30  
          0D 0A 0A              
00A019DB= 7A 42 75 67 20 56 31    3722            DC.B 'zBug V1.0 Copyright (C) 2002 W.SIRICHOTE',13,10,10
          2E 30 20 43 6F 70 79  
          72 69 67 68 74 20 28  
          43 29 20 32 30 30 32  
          20 57 2E 53 49 52 49  
          43 48 4F 54 45 0D 0A  
          0A                    
00A01A06= 7A 42 75 67 20 56 31    3729            DC.B 'zBug V1.0.3 Arty68K Version by Matt Pearce',13,10,0
          2E 30 2E 33 20 41 72  
          74 79 36 38 4B 20 56  
          65 72 73 69 6F 6E 20  
          62 79 20 4D 61 74 74  
          20 50 65 61 72 63 65  
          0D 0A 00              
00A01A33                          3736  
00A01A33= 72 61 63 65 20 69 6E    3737  TRACE_MSG DC.B 'race instruction',0
          73 74 72 75 63 74 69  
          6F 6E 00              
00A01A44                          3740  
00A01A44= 74 61 63 6B 20 28 75    3741  VIEW      DC.B 'tack (user)s content, shows 16-WORD deep',13,10,0
          73 65 72 29 73 20 63  
          6F 6E 74 65 6E 74 2C  
          20 73 68 6F 77 73 20  
          31 36 2D 57 4F 52 44  
          20 64 65 65 70 0D 0A  
          00                    
00A01A6F                          3748  
00A01A6F= 62 75 73 20 65 72 72    3749  BUSERROR_MSG DC.B 'bus error...',0
          6F 72 2E 2E 2E 00     
00A01A7C= 61 64 64 72 65 73 73    3751  ADDRESSERR_MSG DC.B 'address error...',0
          20 65 72 72 6F 72 2E  
          2E 2E 00              
00A01A8D= 69 6C 6C 65 67 61 6C    3754  ILLEGAL_MSG DC.B 'illegal instruction...',0
          20 69 6E 73 74 72 75  
          63 74 69 6F 6E 2E 2E  
          2E 00                 
00A01AA4= 7A 65 72 6F 20 64 69    3758  ZERODIV_MSG DC.B 'zero divide...',0
          76 69 64 65 2E 2E 2E  
          00                    
00A01AB3                          3761  
00A01AB3= 54 4F 53 2D 2D 2D 3E    3762  TOP_OF_STACK DC.B 'TOS--->',0
          00                    
00A01ABB= 20 20 20 20 20 20 20    3764  BLANK_BLOCK  DC.B '       ',0
          00                    
00A01AC3                          3766  
00A01AC3= 50 43 3D 00             3767  PC_REG DC.B 'PC=',0
00A01AC7= 53 52 3D 00             3768  SR_REG DC.B 'SR=',0
00A01ACB                          3769  
00A01ACB= 43 3D 00                3770  CARRY_FLAG DC.B 'C=',0
00A01ACE= 56 3D 00                3771  V_FLAG     DC.B 'V=',0
00A01AD1= 5A 3D 00                3772  Z_FLAG     DC.B 'Z=',0
00A01AD4= 4E 3D 00                3773  N_FLAG     DC.B 'N=',0
00A01AD7= 58 3D 00                3774  X_FLAG     DC.B 'X=',0
00A01ADA                          3775  
00A01ADA                          3776  
00A01ADA= 20 6D 6F 6E 69 74 6F    3777  HELP_LIST DC.B ' monitor commands',13,10,10
          72 20 63 6F 6D 6D 61  
          6E 64 73 0D 0A 0A     
00A01AEE                          3780  
00A01AEE= 41 20 20 20 41 62 6F    3781         DC.B 'A   About zBug V1.0',13,10
          75 74 20 7A 42 75 67  
          20 56 31 2E 30 0D 0A  
00A01B03= 42 20 20 20 42 6F 6F    3784         DC.B 'B   Boot from RAM [000000] -> SP [000004] ->PC',13,10
          74 20 66 72 6F 6D 20  
          52 41 4D 20 5B 30 30  
          30 30 30 30 5D 20 2D  
          3E 20 53 50 20 5B 30  
          30 30 30 30 34 5D 20  
          2D 3E 50 43 0D 0A     
00A01B33= 43 20 20 20 43 6C 65    3791         DC.B 'C   Clear memory with 0x0000',13,10
          61 72 20 6D 65 6D 6F  
          72 79 20 77 69 74 68  
          20 30 78 30 30 30 30  
          0D 0A                 
00A01B51= 44 20 20 20 44 69 73    3796         DC.B 'D   Disassemble machine code to mnemonic',13,10
          61 73 73 65 6D 62 6C  
          65 20 6D 61 63 68 69  
          6E 65 20 63 6F 64 65  
          20 74 6F 20 6D 6E 65  
          6D 6F 6E 69 63 0D 0A  
00A01B7B= 45 20 20 20 45 64 69    3802         DC.B 'E   Edit memory',13,10
          74 20 6D 65 6D 6F 72  
          79 0D 0A              
00A01B8C= 46 20 20 20 46 69 6C    3805         DC.B 'F   Fill memory with 0xFFFF',13,10
          6C 20 6D 65 6D 6F 72  
          79 20 77 69 74 68 20  
          30 78 46 46 46 46 0D  
          0A                    
00A01BA9= 48 20 20 20 48 65 78    3810         DC.B 'H   Hex dump memory',13,10
          20 64 75 6D 70 20 6D  
          65 6D 6F 72 79 0D 0A  
00A01BBE= 4A 20 20 20 4A 75 6D    3813         DC.B 'J   Jump to address',13,10
          70 20 74 6F 20 61 64  
          64 72 65 73 73 0D 0A  
00A01BD3= 4C 20 20 20 4C 6F 61    3816         DC.B 'L   Load Motorola s-record',13,10
          64 20 4D 6F 74 6F 72  
          6F 6C 61 20 73 2D 72  
          65 63 6F 72 64 0D 0A  
00A01BEF= 4E 20 20 20 4E 65 77    3820         DC.B 'N   New 24-bit pointer',13,10
          20 32 34 2D 62 69 74  
          20 70 6F 69 6E 74 65  
          72 0D 0A              
00A01C07= 52 20 20 20 52 65 67    3824         DC.B 'R   Register(user) display',13,10
          69 73 74 65 72 28 75  
          73 65 72 29 20 64 69  
          73 70 6C 61 79 0D 0A  
00A01C23= 53 20 20 20 53 74 61    3828         DC.B 'S   Stack(user)s content',13,10
          63 6B 28 75 73 65 72  
          29 73 20 63 6F 6E 74  
          65 6E 74 0D 0A        
00A01C3D= 54 20 20 20 54 72 61    3832         DC.B 'T   Trace instruction',13,10
          63 65 20 69 6E 73 74  
          72 75 63 74 69 6F 6E  
          0D 0A                 
00A01C54= 2E 20 20 20 4D 6F 64    3836         DC.B '.   Modify user registers, exp .PC .D0 .A0',13,10
          69 66 79 20 75 73 65  
          72 20 72 65 67 69 73  
          74 65 72 73 2C 20 65  
          78 70 20 2E 50 43 20  
          2E 44 30 20 2E 41 30  
          0D 0A                 
00A01C80= 3F 20 20 20 4D 6F 6E    3843         DC.B '?   Monitor commands list',13,10,0
          69 74 6F 72 20 63 6F  
          6D 6D 61 6E 64 73 20  
          6C 69 73 74 0D 0A 00  
00A01C9C                          3847  
00A01C9C                          3848  
00A01C9C                          3849  ; MONITOR'S RAM AREA
00A01C9C                          3850  ; MUST BE EVEN ADDRESS FOE RAMBASE
00A01C9C                          3851  ; THE A6 WAS LOADED WITH RAMBASE AS THE BASE MEMORY POINTER
00A01C9C                          3852  ; THE FOLLOWING VARIABLE CAN BE ACCEESED BY USING INDIRECT WITH DISPLACMENT
00A01C9C                          3853  
00A01C9C                          3854  ;RAMBASE     DC.L   $130000     ; RAM BASE ADDRESS
00A01C9C                          3855  
00A01C9C                          3856  ; DCODE68K
00A01C9C  =FFFFFFF0               3857  DDATA    EQU     $FFFFFFF0       ; DS.L 3
00A01C9C  =FFFFFFFC               3858  HISPC    EQU     $FFFFFFFC       ; DS.L 1
00A01C9C                          3859  
00A01C9C                          3860  ; OFFSET(DISPLACEMENT) DEFINITION
00A01C9C                          3861  
00A01C9C  =00000000               3862  OFFSET      EQU  0               ; FOR DISASSEMBLER USAGE
00A01C9C  =00000020               3863  DEBUG       EQU  OFFSET+32
00A01C9C  =00000024               3864  FLAG        EQU  DEBUG+4         ; 16-BIT MONITOR FLAG
00A01C9C  =00000026               3865  BUFFER      EQU  FLAG+2
00A01C9C  =000000A6               3866  POINTER_NOW EQU  BUFFER+128
00A01C9C  =000000AA               3867  USER_DATA   EQU  POINTER_NOW+4   ; USER D0-D7 AND A0-A7
00A01C9C  =000000CA               3868  USER_ADDR   EQU  USER_DATA+32    ; USER ADDRESS REGISTERS, A0-A7
00A01C9C  =000000E6               3869  USER_USP    EQU  USER_ADDR+28    ; A7 = USP
00A01C9C  =000000EA               3870  USER_SR     EQU  USER_USP+4      ; 
00A01C9C  =000000EC               3871  USER_SS     EQU  USER_SR+2
00A01C9C  =000000F0               3872  USER_PC     EQU  USER_SS+4
00A01C9C                          3873  
00A01C9C  =000000F4               3874  STACK_AREA  EQU  USER_PC+4           ; 32kB USER STACK -> 2kB
00A01C9C                          3875  ;USER_STACK  EQU  STACK_AREA+$7000    ; TOP OF STACK
00A01C9C  =0000FFF4               3876  USER_STACK  EQU  STACK_AREA+$FF00    ; TOP OF STACK
00A01C9C                          3877  
00A01C9C                          3878  
00A01C9C                          3879  
00A01C9C                          3880         END  MAIN

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABORT               A0143A
ABOUT               A015E2
ABOUTZBUG           A019CA
ACIA2C              F20009
ACIA2D              F2000B
ACIA3C              F30009
ACIA3D              F3000B
ACIAC               F00009
ACIAD               F0000B
ADDRESSERR_MSG      A01A7C
ADDRESS_ERROR       C
ADDRESS_REG2        A0150C
BIT_ESC             0
BLANK               20
BLANK_BLOCK         A01ABB
BOOT_RAM            A0165A
BRTBL               A0046C
BS                  8
BUFFER              26
BUFSIZE             50
BUSERROR_MSG        A01A6F
BUS_ERROR           8
C68                 3D
CARRY_FLAG          A01ACB
CHECKSUM_ERROR      A00F26
CHECK_ESC           A00E48
CHECK_START         A00E94
CIN                 A00D68
CINS                A00D56
CLEAR               A017A9
CLEAR1              A014AC
CLEAR_MEMORY        A010C2
CLEAR_MEMORY1       A010E8
CLEAR_MON_RAM       A014A2
COMMON              A00862
COMMON35            A00870
COMMON4             A00860
COUT                A00D44
CR                  D
CS11                A00294
CS12                A001FE
CS13                A0017C
CS14                A0010C
CS15                A000CC
CS16                A0005E
CS17                A00438
CS18                A003D2
CS19                A004E4
CS20                A00334
DATA_REG1           A014E4
DCODE68K            A007C4
DDATA               FFFFFFF0
DEBUG               20
DEC311              A007D8
DEC404              A007F8
DEC411              A00808
DEC425              A00818
DEC510              A00826
DEC515              A0082A
DEC530              A00832
DEC535              A00838
DEC537              A00844
DIS                 A01973
DIS1                A01556
DISASSEMBLE         A0153E
DISPLAY_REG         A012B4
DISPLAY_REG1        A012BE
DONE                A017FB
EA000               A00514
EA001               A00520
EA010               A0052C
EA011               A00540
EA011RTS            A00556
EA100               A00558
EA101               A005FA
EA1105              A005D6
EA1107              A005DA
EA1109              A005F0
EA111               A00610
EA1112              A0062E
EA1113              A0064A
EA1113A             A0065A
EA1114              A0067C
EA1115              A006E6
EA11153             A0071E
EA11155             A00728
EAF25               A006C4
EAF27               A006C8
EAF35               A006DC
EASY68K_SIM         0
EDIT                A0182F
EDIT1               A01805
EDIT_MEMORY         A010FC
EDIT_MEMORY2        A0111A
EDIT_MEMORY3        A01184
EDIT_MEMORY4        A01180
EDIT_MEMORY5        A01172
EEA                 A00572
EEA10               A00186
EOT                 4
ERROR               A0190B
ESC                 1B
FDATA               A
FE10                A0056E
FE11                A00656
FE12                A00816
FERROR              A0088A
FERROR35            A00894
FERROR39            A008A0
FILL                A017C1
FILL_MEMORY         A01088
FILL_MEMORY1        A010AE
FLAG                24
FOC                 1F
FOP                 27
FORM1               A00104
FORM10              A001CC
FORM103             A001D2
FORM104             A001D6
FORM105             A001E8
FORM10E3            A001AE
FORM10E4            A001B6
FORM10E6            A001C2
FORM10EX            A0018C
FORM11              A00204
FORM112             A00224
FORM114             A00232
FORM11SL            A00210
FORM12              A00234
FORM125             A0024E
FORM12A             A00270
FORM1A              A00108
FORM3               A00110
FORM4               A00114
FORM5               A00128
FORM6A              A0012C
FORM6D              A0013C
FORM7               A00164
FORM8               A00170
FORM815             A00174
FORM9               A00180
FORM91              A004FC
FORM93              A00510
FORM95              A00512
FORMREG5            A00150
FORMREGA            A0014C
FORMREGD            A0015C
FORMSIZE            A004E8
FREL10              A01264
FREL15              A01276
FREL20              A01290
FREL25              A012A2
FREL30              A012AC
FRELADDR            A01256
GET_32BIT           A0104A
GET_ADDRESS         A0106C
GET_ADDRESS1        A01072
GET_HEX             A00DEA
GET_HEX1            A00DFC
GET_HEX2            A00E0A
GET_HEXS            A00E1A
GET_TYPE            A00E50
HELP                A0118A
HELP_LIST           A01ADA
HEX                 A0187A
HEX2DEC             A011BC
HEX_DUMP            A00F78
HEX_DUMP1           A00FA8
HEX_DUMP2           A00F94
HEX_DUMP3           A00FD0
HEX_DUMP4           A00FCA
HEX_DUMP5           A00FD6
HEX_DUMP6           A00FC2
HISPC               FFFFFFFC
HX2DC               A011CC
HX2DC0              A011D0
HX2DC1              A011D8
HX2DC2              A011F2
HX2DC22             A011F4
HX2DC3              A011FE
HX2DC4              A01206
HX2DC5              A0120E
HX2DC57             A01216
HX2DC6              A0121A
IBSR                A0038C
ICC                 A00388
ICC35               A0039E
ICC55               A003B4
ICCCC               A00454
ICCCC9              A0046A
IDBCC               A00374
ILINK               A000EC
ILLEGAL_INSTRUCTION  10
ILLEGAL_MSG         A01A8D
IM7788              A00028
IM7799              A0002C
IMMED               A00074
IMMED45             A0009A
IMMED55             A000CE
IMMED65             A000D4
IMMED75             A000E4
IMOVE               A000E8
IMOVE19             A004B2
IMOVEA1             A0048C
IMOVEMFR            A00014
IMOVEMTR            A00044
IMOVEP              A0030C
IMOVEP11            A0031C
IMOVEP35            A00338
IMOVEP66            A00346
IMOVEQ              A0029C
IMVFSR              A002BC
IMVFUSP             A002CC
IMVT44              A002EA
IMVTCCR             A002FC
IMVTSR              A002DC
IMVTUSP             A002F0
INIT_ACIA           A00D2A
INT_OFF             2700
INT_ON              2000
IQUICK              A00298
IQUICK21            A004CA
IQUICK31            A004E0
IQUICKA             A004B8
ISCC                A00368
ISETD               A003C4
ISETD12             A003CA
ISETS               A003D4
ISHIFT              A003F0
ISHIFT13            A003FC
ISHIFT23            A00420
ISHIFT33            A0042C
ISHIFT44            A00430
ISHIFTM1            A0043A
ISTOP               A00060
JUMP                A013FA
JUMP1               A0143C
JUMP_TO             A01925
KI                  A008B4
KIEND               A008B6
LF                  A
LOAD                A018C3
LOCVARSZ            10
LONG                0
LOOP                A00C10
LOOP_BACK           A00F2E
MAIN                A00BC0
MODIFY_REG          A014B6
MOVEMR              A00748
MOVEMR11            A00758
MOVEMR33            A00760
MOVEMR44            A00772
MOVEMR77            A0078C
MOVEMR79            A0079E
MOVEMR88            A007A0
MOVEMR94            A007B8
MOVEMS              A00734
MOVEMS2             A00744
MSG111              A008AA
N68                 A9
NEW                 A01841
NEW_LINE            A00D8A
NEW_POINTER         A00FEC
NEXT1               A00C30
NEXT10              A00CB4
NEXT11              A00CC2
NEXT12              A00CD0
NEXT13              A00CDE
NEXT14              A00CEC
NEXT15              A00CFA
NEXT16              A00D08
NEXT17              A00D14
NEXT18              A00D1E
NEXT2               A00C3E
NEXT3               A00C4C
NEXT4               A00C5A
NEXT5               A00C68
NEXT6               A00C76
NEXT7               A00C84
NEXT8               A00C94
NEXT9               A00CA4
NOT_TOS             A01626
NO_CHANGE           A00C22
NO_ERROR            A00F22
NUMBER              A018FB
N_FLAG              A01AD4
OFFSET              0
OPCTBL              A00AC0
OUT1X               A00F3A
OUT1X1              A00F4C
OUT2X               A00F54
OUT4X               A00F5C
OUT6X               A00F64
OUT8X               A00F6C
PC_REG              A01AC3
PNT2HX              A0123A
PNT4HX              A01232
PNT6HX              A0122C
PNT8HX              A01224
POINTER_NOW         A6
PRINT_BIT           A013E4
PRINT_D0            A00F74
PRINT_DEBUG         A01022
PRINT_DEC           A01196
PRINT_LINE          A0158A
PROMPT              A017A7
PSTR                A00D7C
PSTR1               A00D88
PUTHEX              A01242
QUICK               A01853
QUICK_HOME          A01030
RAM                 0
RAMBASE             C0
RAMBASE_INIT        9F0000
RDRF                0
READ_DATA           A00EFC
READ_S1             A00EB6
READ_S2             A00ED6
READ_S_REC          A00E2E
READ_S_REC1         A00E3C
REG1                A0136E
REG2                A013DE
REG3                A013AA
REG4                A013A2
REGISTER_DISP       A01944
ROM                 A0183B
RS                  1E
SAVHEX              A01252
SCHR                A002B4
SCOMMON             A00364
SCROLL              A00DA4
SCROLL1             A00DA8
SEND_PROMPT         A00DB0
SEND_TITLE          A00DCA
SERVICE_ADDRESSERR  A01672
SERVICE_BUSERROR    A01668
SERVICE_ILLEGAL     A0167C
SERVICE_MSG         A0168C
SERVICE_TRAP0       A01534
SERVICE_ZERODIV     A01686
SKIP_PRINT_BLANK    A01630
SP                  20
SPACE               A00D9C
SR_REG              A01AC7
STACK_AREA          F4
START               A017D8
START_FOUND         A00EA8
STOP                A017EA
STRING1             A019C3
SUPERVISOR_BIT      5
SUPER_STACK         9F0000
TBL                 A008B6
TBLE                A00AC0
TDRE                1
TEST_RAM            A01086
TITLE               A01742
TITLE1              A0176B
TOP_OF_STACK        A01AB3
TO_HEX              A00DD4
TRACE_BIT           7
TRACE_JUMP          A0145E
TRACE_MSG           A01A33
TRAP0               80
TRAP1               84
TRAP10              A8
TRAP11              AC
TRAP12              B0
TRAP13              B4
TRAP14              B8
TRAP15              BC
TRAP2               88
TRAP3               8C
TRAP4               90
TRAP5               94
TRAP6               98
TRAP7               9C
TRAP8               A0
TRAP9               A4
TRAP_0              A0193A
UPLOAD              A01596
UPLOAD1             A01999
UPLOAD2             A015C2
UPLOAD3             A015B0
USER_ADDR           CA
USER_DATA           AA
USER_PC             F0
USER_SR             EA
USER_SS             EC
USER_STACK          FFF4
USER_USP            E6
VECINIT             A01692
VECINIT1            A0169C
VECINIT2            A016A8
VECTABLE            A016BA
VIEW                A01A44
VIEW1               A01610
VIEW_USP            A015EE
V_FLAG              A01ACE
WAIT_CR             A00E5C
WHAT3               A01532
WRITE_1             A013F0
X                   A00014
X_FLAG              A01AD7
ZERODIV_MSG         A01AA4
ZERO_TO_NINE        A00DE6
Z_FLAG              A01AD1
